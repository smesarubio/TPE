
;; Function newQuery (newQuery, funcdef_no=0, decl_uid=3374, cgraph_uid=1, symbol_order=0)

newQuery (size_t yearFrom, size_t yearTo)
{
  struct queryCDT * q;
  struct queryCDT * D.3477;
  struct queryCDT * _8;
  size_t * _11;
  size_t * _12;
  unsigned long _16;
  unsigned long _17;
  unsigned long _18;
  signed char * _19;
  signed char _20;
  unsigned long _21;
  unsigned long _22;
  unsigned long _23;
  signed char * _24;
  signed char _25;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  q_3 = calloc (1, 40);
  if (q_3 == 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]
;;    succ:       3
;;                4

;;   basic block 3, loop depth 0
;;    pred:       2
  perror ("Unable to allocate memory.");
  __builtin___asan_handle_no_return ();
  exit (1);
;;    succ:      

;;   basic block 4, loop depth 0
;;    pred:       2
  _11 = &q_3->yearFrom;
  _16 = (unsigned long) _11;
  _17 = _16 >> 3;
  _18 = _17 + 2147450880;
  _19 = (signed char *) _18;
  _20 = *_19;
  if (_20 != 0)
    goto <bb 5>; [0.05%]
  else
    goto <bb 6>; [99.95%]
;;    succ:       6
;;                5

;;   basic block 5, loop depth 0
;;    pred:       4
  __builtin___asan_report_store8 (_16);
;;    succ:      

;;   basic block 6, loop depth 0
;;    pred:       4
  q_3->yearFrom = yearFrom_4(D);
  _12 = &q_3->yearTo;
  _21 = (unsigned long) _12;
  _22 = _21 >> 3;
  _23 = _22 + 2147450880;
  _24 = (signed char *) _23;
  _25 = *_24;
  if (_25 != 0)
    goto <bb 7>; [0.05%]
  else
    goto <bb 8>; [99.95%]
;;    succ:       8
;;                7

;;   basic block 7, loop depth 0
;;    pred:       6
  __builtin___asan_report_store8 (_21);
;;    succ:      

;;   basic block 8, loop depth 0
;;    pred:       6
  q_3->yearTo = yearTo_6(D);
  _8 = q_3;
;;    succ:       9

;;   basic block 9, loop depth 0
;;    pred:       8
<L2>:
  return _8;
;;    succ:       EXIT

}



Partition map 

Partition 3 (q_3 - 3 )
Partition 4 (yearFrom_4(D) - 4 )
Partition 6 (yearTo_6(D) - 6 )
Partition 8 (_8 - 8 )
Partition 11 (_11 - 11 )
Partition 12 (_12 - 12 )
Partition 16 (_16 - 16 )
Partition 17 (_17 - 17 )
Partition 18 (_18 - 18 )
Partition 19 (_19 - 19 )
Partition 20 (_20 - 20 )
Partition 21 (_21 - 21 )
Partition 22 (_22 - 22 )
Partition 23 (_23 - 23 )
Partition 24 (_24 - 24 )
Partition 25 (_25 - 25 )
Partition 28 (_28(D) - 28 )


Coalescible Partition map 

Partition 0, base 0 (yearFrom_4(D) - 4 )
Partition 1, base 1 (yearTo_6(D) - 6 )
Partition 2, base 2 (_28(D) - 28 )


Partition map 

Partition 0 (yearFrom_4(D) - 4 )
Partition 1 (yearTo_6(D) - 6 )
Partition 2 (_28(D) - 28 )


Conflict graph:

After sorting:
Coalesce List:

Partition map 

Partition 0 (yearFrom_4(D) - 4 )
Partition 1 (yearTo_6(D) - 6 )
Partition 2 (_28(D) - 28 )

After Coalescing:

Partition map 

Partition 0 (q_3 - 3 )
Partition 1 (yearFrom_4(D) - 4 )
Partition 2 (yearTo_6(D) - 6 )
Partition 3 (_8 - 8 )
Partition 4 (_11 - 11 )
Partition 5 (_12 - 12 )
Partition 6 (_16 - 16 )
Partition 7 (_17 - 17 )
Partition 8 (_18 - 18 )
Partition 9 (_19 - 19 )
Partition 10 (_20 - 20 )
Partition 11 (_21 - 21 )
Partition 12 (_22 - 22 )
Partition 13 (_23 - 23 )
Partition 14 (_24 - 24 )
Partition 15 (_25 - 25 )
Partition 16 (_28(D) - 28 )

newQuery (size_t yearFrom, size_t yearTo)
{
  struct queryCDT * q;
  struct queryCDT * D.3477;
  struct queryCDT * _8;
  size_t * _11;
  size_t * _12;
  unsigned long _16;
  unsigned long _17;
  unsigned long _18;
  signed char * _19;
  signed char _20;
  unsigned long _21;
  unsigned long _22;
  unsigned long _23;
  signed char * _24;
  signed char _25;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  q_3 = calloc (1, 40);
  if (q_3 == 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]
;;    succ:       3
;;                4

;;   basic block 3, loop depth 0
;;    pred:       2
  perror ("Unable to allocate memory.");
  __builtin___asan_handle_no_return ();
  exit (1);
;;    succ:      

;;   basic block 4, loop depth 0
;;    pred:       2
  _11 = &q_3->yearFrom;
  _16 = (unsigned long) _11;
  _17 = _16 >> 3;
  _18 = _17 + 2147450880;
  _19 = (signed char *) _18;
  _20 = *_19;
  if (_20 != 0)
    goto <bb 5>; [0.05%]
  else
    goto <bb 6>; [99.95%]
;;    succ:       6
;;                5

;;   basic block 5, loop depth 0
;;    pred:       4
  __builtin___asan_report_store8 (_16);
;;    succ:      

;;   basic block 6, loop depth 0
;;    pred:       4
  q_3->yearFrom = yearFrom_4(D);
  _12 = &q_3->yearTo;
  _21 = (unsigned long) _12;
  _22 = _21 >> 3;
  _23 = _22 + 2147450880;
  _24 = (signed char *) _23;
  _25 = *_24;
  if (_25 != 0)
    goto <bb 7>; [0.05%]
  else
    goto <bb 8>; [99.95%]
;;    succ:       8
;;                7

;;   basic block 7, loop depth 0
;;    pred:       6
  __builtin___asan_report_store8 (_21);
;;    succ:      

;;   basic block 8, loop depth 0
;;    pred:       6
  q_3->yearTo = yearTo_6(D);
  _8 = q_3;
;;    succ:       9

;;   basic block 9, loop depth 0
;;    pred:       8
<L2>:
  return _8;
;;    succ:       EXIT

}


Partition 0: size 8 align 8
	q_3

;; Generating RTL for gimple basic block 2

;; q_3 = calloc (1, 40);

(insn 7 6 8 (set (reg:DI 4 si)
        (const_int 40 [0x28])) "queryTAD.c":14:18 -1
     (nil))

(insn 8 7 9 (set (reg:DI 5 di)
        (const_int 1 [0x1])) "queryTAD.c":14:18 -1
     (nil))

(call_insn 9 8 10 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("calloc") [flags 0x41]  <function_decl 0x7fc58ee76d00 calloc>) [0 __builtin_calloc S1 A8])
            (const_int 0 [0]))) "queryTAD.c":14:18 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))

(insn 10 9 11 (set (reg/f:DI 96)
        (reg:DI 0 ax)) "queryTAD.c":14:18 -1
     (expr_list:REG_NOALIAS (reg/f:DI 96)
        (nil)))

(insn 11 10 0 (set (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [11 q+0 S8 A64])
        (reg/f:DI 96)) "queryTAD.c":14:18 -1
     (nil))

;; if (q_3 == 0B)

(insn 12 11 13 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [11 q+0 S8 A64])
            (const_int 0 [0]))) "queryTAD.c":15:8 -1
     (nil))

(jump_insn 13 12 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "queryTAD.c":15:8 -1
     (nil))

;; Generating RTL for gimple basic block 3

;; perror ("Unable to allocate memory.");

(insn 15 14 16 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x7fc58ec2dcf0 *.LC0>)) "queryTAD.c":16:9 -1
     (nil))

(call_insn 16 15 0 (call (mem:QI (symbol_ref:DI ("perror") [flags 0x41]  <function_decl 0x7fc58ef5f500 perror>) [0 perror S1 A8])
        (const_int 0 [0])) "queryTAD.c":16:9 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

;; __builtin___asan_handle_no_return ();

(call_insn 17 16 0 (call (mem:QI (symbol_ref:DI ("__asan_handle_no_return") [flags 0x41]  <function_decl 0x7fc58eead800 __builtin___asan_handle_no_return>) [0 __builtin___asan_handle_no_return S1 A8])
        (const_int 0 [0])) "queryTAD.c":17:9 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))

;; exit (1);

(insn 18 17 19 (set (reg:SI 5 di)
        (const_int 1 [0x1])) "queryTAD.c":17:9 -1
     (nil))

(call_insn 19 18 20 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x7fc58ee7c900 exit>) [0 __builtin_exit S1 A8])
        (const_int 0 [0])) "queryTAD.c":17:9 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))

(barrier 20 19 0)

;; Generating RTL for gimple basic block 4

;; 

(code_label 21 20 22 2 (nil) [0 uses])

(note 22 21 0 NOTE_INSN_BASIC_BLOCK)

;; _11 = &q_3->yearFrom;

(insn 23 22 0 (set (reg/f:DI 83 [ _11 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [11 q+0 S8 A64])) "queryTAD.c":19:17 -1
     (nil))

;; _16 = (unsigned long) _11;

(insn 24 23 0 (set (reg:DI 85 [ _16 ])
        (reg/f:DI 83 [ _11 ])) "queryTAD.c":19:17 -1
     (nil))

;; _17 = _16 >> 3;

(insn 25 24 0 (parallel [
            (set (reg:DI 86 [ _17 ])
                (lshiftrt:DI (reg:DI 85 [ _16 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":19:17 -1
     (nil))

;; _18 = _17 + 2147450880;

(insn 26 25 0 (parallel [
            (set (reg:DI 87 [ _18 ])
                (plus:DI (reg:DI 86 [ _17 ])
                    (const_int 2147450880 [0x7fff8000])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":19:17 -1
     (nil))

;; _19 = (signed char *) _18;

(insn 27 26 0 (set (reg/f:DI 88 [ _19 ])
        (reg:DI 87 [ _18 ])) "queryTAD.c":19:17 -1
     (nil))

;; _20 = *_19;

(insn 28 27 0 (set (reg:QI 89 [ _20 ])
        (mem:QI (reg/f:DI 88 [ _19 ]) [10 *_19+0 S1 A8])) "queryTAD.c":19:17 -1
     (nil))

;; if (_20 != 0)

(insn 29 28 30 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 89 [ _20 ])
            (const_int 0 [0]))) "queryTAD.c":19:17 -1
     (nil))

(jump_insn 30 29 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "queryTAD.c":19:17 -1
     (nil))

;; Generating RTL for gimple basic block 5

;; __builtin___asan_report_store8 (_16);

(insn 32 31 33 (set (reg:DI 5 di)
        (reg:DI 85 [ _16 ])) "queryTAD.c":19:17 -1
     (nil))

(call_insn 33 32 34 (call (mem:QI (symbol_ref:DI ("__asan_report_store8") [flags 0x41]  <function_decl 0x7fc58eea5f00 __builtin___asan_report_store8>) [0 __builtin___asan_report_store8 S1 A8])
        (const_int 0 [0])) "queryTAD.c":19:17 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

(barrier 34 33 0)

;; Generating RTL for gimple basic block 6

;; 

(code_label 35 34 36 3 (nil) [0 uses])

(note 36 35 0 NOTE_INSN_BASIC_BLOCK)

;; q_3->yearFrom = yearFrom_4(D);

(insn 37 36 38 (set (reg/f:DI 97)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [11 q+0 S8 A64])) "queryTAD.c":19:17 -1
     (nil))

(insn 38 37 39 (set (reg:DI 98)
        (mem/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [2 yearFrom+0 S8 A64])) "queryTAD.c":19:17 -1
     (nil))

(insn 39 38 0 (set (mem:DI (reg/f:DI 97) [2 q_3->yearFrom+0 S8 A64])
        (reg:DI 98)) "queryTAD.c":19:17 -1
     (nil))

;; _12 = &q_3->yearTo;

(insn 40 39 41 (set (reg/f:DI 99)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [11 q+0 S8 A64])) "queryTAD.c":20:15 -1
     (nil))

(insn 41 40 0 (parallel [
            (set (reg/f:DI 84 [ _12 ])
                (plus:DI (reg/f:DI 99)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":20:15 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [11 q+0 S8 A64])
            (const_int 8 [0x8]))
        (nil)))

;; _21 = (unsigned long) _12;

(insn 42 41 0 (set (reg:DI 90 [ _21 ])
        (reg/f:DI 84 [ _12 ])) "queryTAD.c":20:15 -1
     (nil))

;; _22 = _21 >> 3;

(insn 43 42 0 (parallel [
            (set (reg:DI 91 [ _22 ])
                (lshiftrt:DI (reg:DI 90 [ _21 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":20:15 -1
     (nil))

;; _23 = _22 + 2147450880;

(insn 44 43 0 (parallel [
            (set (reg:DI 92 [ _23 ])
                (plus:DI (reg:DI 91 [ _22 ])
                    (const_int 2147450880 [0x7fff8000])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":20:15 -1
     (nil))

;; _24 = (signed char *) _23;

(insn 45 44 0 (set (reg/f:DI 93 [ _24 ])
        (reg:DI 92 [ _23 ])) "queryTAD.c":20:15 -1
     (nil))

;; _25 = *_24;

(insn 46 45 0 (set (reg:QI 94 [ _25 ])
        (mem:QI (reg/f:DI 93 [ _24 ]) [10 *_24+0 S1 A8])) "queryTAD.c":20:15 -1
     (nil))

;; if (_25 != 0)

(insn 47 46 48 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 94 [ _25 ])
            (const_int 0 [0]))) "queryTAD.c":20:15 -1
     (nil))

(jump_insn 48 47 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "queryTAD.c":20:15 -1
     (nil))

;; Generating RTL for gimple basic block 7

;; __builtin___asan_report_store8 (_21);

(insn 50 49 51 (set (reg:DI 5 di)
        (reg:DI 90 [ _21 ])) "queryTAD.c":20:15 -1
     (nil))

(call_insn 51 50 52 (call (mem:QI (symbol_ref:DI ("__asan_report_store8") [flags 0x41]  <function_decl 0x7fc58eea5f00 __builtin___asan_report_store8>) [0 __builtin___asan_report_store8 S1 A8])
        (const_int 0 [0])) "queryTAD.c":20:15 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

(barrier 52 51 0)

;; Generating RTL for gimple basic block 8

;; 

(code_label 53 52 54 4 (nil) [0 uses])

(note 54 53 0 NOTE_INSN_BASIC_BLOCK)

;; q_3->yearTo = yearTo_6(D);

(insn 55 54 56 (set (reg/f:DI 100)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [11 q+0 S8 A64])) "queryTAD.c":20:15 -1
     (nil))

(insn 56 55 57 (set (reg:DI 101)
        (mem/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [2 yearTo+0 S8 A64])) "queryTAD.c":20:15 -1
     (nil))

(insn 57 56 0 (set (mem:DI (plus:DI (reg/f:DI 100)
                (const_int 8 [0x8])) [2 q_3->yearTo+0 S8 A64])
        (reg:DI 101)) "queryTAD.c":20:15 -1
     (nil))

;; _8 = q_3;

(insn 58 57 0 (set (reg/f:DI 82 [ _8 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [11 q+0 S8 A64])) "queryTAD.c":21:12 -1
     (nil))

;; Generating RTL for gimple basic block 9

;; <L2>:

(code_label 59 58 60 5 (nil) [0 uses])

(note 60 59 0 NOTE_INSN_BASIC_BLOCK)

;; return _8;

(insn 61 60 62 (set (reg/f:DI 95 [ <retval> ])
        (reg/f:DI 82 [ _8 ])) "queryTAD.c":21:12 -1
     (nil))

(jump_insn 62 61 63 (set (pc)
        (label_ref 0)) "queryTAD.c":21:12 -1
     (nil))

(barrier 63 62 0)


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 10 into block 9...
Merged blocks 9 and 10.
Merged 9 and 10 without moving.
Removing jump 62.
Merging block 11 into block 9...
Merged blocks 9 and 11.
Merged 9 and 11 without moving.


try_optimize_cfg iteration 2

fix_loop_structure: fixing up loops for function


;;
;; Full RTL generated for this function:
;;
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 4, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [2 yearFrom+0 S8 A64])
        (reg:DI 5 di [ yearFrom ])) "queryTAD.c":13:50 -1
     (nil))
(insn 3 2 4 2 (set (mem/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [2 yearTo+0 S8 A64])
        (reg:DI 4 si [ yearTo ])) "queryTAD.c":13:50 -1
     (nil))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg:DI 4 si)
        (const_int 40 [0x28])) "queryTAD.c":14:18 -1
     (nil))
(insn 8 7 9 2 (set (reg:DI 5 di)
        (const_int 1 [0x1])) "queryTAD.c":14:18 -1
     (nil))
(call_insn 9 8 10 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("calloc") [flags 0x41]  <function_decl 0x7fc58ee76d00 calloc>) [0 __builtin_calloc S1 A8])
            (const_int 0 [0]))) "queryTAD.c":14:18 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 10 9 11 2 (set (reg/f:DI 96)
        (reg:DI 0 ax)) "queryTAD.c":14:18 -1
     (expr_list:REG_NOALIAS (reg/f:DI 96)
        (nil)))
(insn 11 10 12 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [11 q+0 S8 A64])
        (reg/f:DI 96)) "queryTAD.c":14:18 -1
     (nil))
(insn 12 11 13 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [11 q+0 S8 A64])
            (const_int 0 [0]))) "queryTAD.c":15:8 -1
     (nil))
(jump_insn 13 12 14 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 21)
            (pc))) "queryTAD.c":15:8 -1
     (nil)
 -> 21)
;;  succ:       4 (FALLTHRU)
;;              5

;; basic block 4, loop depth 0, maybe hot
;;  prev block 2, next block 5, flags: (NEW, REACHABLE, RTL)
;;  pred:       2 (FALLTHRU)
(note 14 13 15 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 15 14 16 4 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x7fc58ec2dcf0 *.LC0>)) "queryTAD.c":16:9 -1
     (nil))
(call_insn 16 15 17 4 (call (mem:QI (symbol_ref:DI ("perror") [flags 0x41]  <function_decl 0x7fc58ef5f500 perror>) [0 perror S1 A8])
        (const_int 0 [0])) "queryTAD.c":16:9 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(call_insn 17 16 18 4 (call (mem:QI (symbol_ref:DI ("__asan_handle_no_return") [flags 0x41]  <function_decl 0x7fc58eead800 __builtin___asan_handle_no_return>) [0 __builtin___asan_handle_no_return S1 A8])
        (const_int 0 [0])) "queryTAD.c":17:9 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))
(insn 18 17 19 4 (set (reg:SI 5 di)
        (const_int 1 [0x1])) "queryTAD.c":17:9 -1
     (nil))
(call_insn 19 18 20 4 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x7fc58ee7c900 exit>) [0 __builtin_exit S1 A8])
        (const_int 0 [0])) "queryTAD.c":17:9 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
;;  succ:      

(barrier 20 19 21)
;; basic block 5, loop depth 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL)
;;  pred:       2
(code_label 21 20 22 5 2 (nil) [1 uses])
(note 22 21 23 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 23 22 24 5 (set (reg/f:DI 83 [ _11 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [11 q+0 S8 A64])) "queryTAD.c":19:17 -1
     (nil))
(insn 24 23 25 5 (set (reg:DI 85 [ _16 ])
        (reg/f:DI 83 [ _11 ])) "queryTAD.c":19:17 -1
     (nil))
(insn 25 24 26 5 (parallel [
            (set (reg:DI 86 [ _17 ])
                (lshiftrt:DI (reg:DI 85 [ _16 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":19:17 -1
     (nil))
(insn 26 25 27 5 (parallel [
            (set (reg:DI 87 [ _18 ])
                (plus:DI (reg:DI 86 [ _17 ])
                    (const_int 2147450880 [0x7fff8000])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":19:17 -1
     (nil))
(insn 27 26 28 5 (set (reg/f:DI 88 [ _19 ])
        (reg:DI 87 [ _18 ])) "queryTAD.c":19:17 -1
     (nil))
(insn 28 27 29 5 (set (reg:QI 89 [ _20 ])
        (mem:QI (reg/f:DI 88 [ _19 ]) [10 *_19+0 S1 A8])) "queryTAD.c":19:17 -1
     (nil))
(insn 29 28 30 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 89 [ _20 ])
            (const_int 0 [0]))) "queryTAD.c":19:17 -1
     (nil))
(jump_insn 30 29 31 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 35)
            (pc))) "queryTAD.c":19:17 -1
     (nil)
 -> 35)
;;  succ:       7 [100.0% (guessed)] 
;;              6 [0.0% (guessed)]  (FALLTHRU)

;; basic block 6, loop depth 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL)
;;  pred:       5 [0.0% (guessed)]  (FALLTHRU)
(note 31 30 32 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 32 31 33 6 (set (reg:DI 5 di)
        (reg:DI 85 [ _16 ])) "queryTAD.c":19:17 -1
     (nil))
(call_insn 33 32 34 6 (call (mem:QI (symbol_ref:DI ("__asan_report_store8") [flags 0x41]  <function_decl 0x7fc58eea5f00 __builtin___asan_report_store8>) [0 __builtin___asan_report_store8 S1 A8])
        (const_int 0 [0])) "queryTAD.c":19:17 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:      

(barrier 34 33 35)
;; basic block 7, loop depth 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL)
;;  pred:       5 [100.0% (guessed)] 
(code_label 35 34 36 7 3 (nil) [1 uses])
(note 36 35 37 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 37 36 38 7 (set (reg/f:DI 97)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [11 q+0 S8 A64])) "queryTAD.c":19:17 -1
     (nil))
(insn 38 37 39 7 (set (reg:DI 98)
        (mem/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [2 yearFrom+0 S8 A64])) "queryTAD.c":19:17 -1
     (nil))
(insn 39 38 40 7 (set (mem:DI (reg/f:DI 97) [2 q_3->yearFrom+0 S8 A64])
        (reg:DI 98)) "queryTAD.c":19:17 -1
     (nil))
(insn 40 39 41 7 (set (reg/f:DI 99)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [11 q+0 S8 A64])) "queryTAD.c":20:15 -1
     (nil))
(insn 41 40 42 7 (parallel [
            (set (reg/f:DI 84 [ _12 ])
                (plus:DI (reg/f:DI 99)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":20:15 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [11 q+0 S8 A64])
            (const_int 8 [0x8]))
        (nil)))
(insn 42 41 43 7 (set (reg:DI 90 [ _21 ])
        (reg/f:DI 84 [ _12 ])) "queryTAD.c":20:15 -1
     (nil))
(insn 43 42 44 7 (parallel [
            (set (reg:DI 91 [ _22 ])
                (lshiftrt:DI (reg:DI 90 [ _21 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":20:15 -1
     (nil))
(insn 44 43 45 7 (parallel [
            (set (reg:DI 92 [ _23 ])
                (plus:DI (reg:DI 91 [ _22 ])
                    (const_int 2147450880 [0x7fff8000])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":20:15 -1
     (nil))
(insn 45 44 46 7 (set (reg/f:DI 93 [ _24 ])
        (reg:DI 92 [ _23 ])) "queryTAD.c":20:15 -1
     (nil))
(insn 46 45 47 7 (set (reg:QI 94 [ _25 ])
        (mem:QI (reg/f:DI 93 [ _24 ]) [10 *_24+0 S1 A8])) "queryTAD.c":20:15 -1
     (nil))
(insn 47 46 48 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 94 [ _25 ])
            (const_int 0 [0]))) "queryTAD.c":20:15 -1
     (nil))
(jump_insn 48 47 49 7 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 53)
            (pc))) "queryTAD.c":20:15 -1
     (nil)
 -> 53)
;;  succ:       9 [100.0% (guessed)] 
;;              8 [0.0% (guessed)]  (FALLTHRU)

;; basic block 8, loop depth 0, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL)
;;  pred:       7 [0.0% (guessed)]  (FALLTHRU)
(note 49 48 50 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 50 49 51 8 (set (reg:DI 5 di)
        (reg:DI 90 [ _21 ])) "queryTAD.c":20:15 -1
     (nil))
(call_insn 51 50 52 8 (call (mem:QI (symbol_ref:DI ("__asan_report_store8") [flags 0x41]  <function_decl 0x7fc58eea5f00 __builtin___asan_report_store8>) [0 __builtin___asan_report_store8 S1 A8])
        (const_int 0 [0])) "queryTAD.c":20:15 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:      

(barrier 52 51 53)
;; basic block 9, loop depth 0, maybe hot
;;  prev block 8, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       7 [100.0% (guessed)] 
(code_label 53 52 54 9 4 (nil) [1 uses])
(note 54 53 55 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 55 54 56 9 (set (reg/f:DI 100)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [11 q+0 S8 A64])) "queryTAD.c":20:15 -1
     (nil))
(insn 56 55 57 9 (set (reg:DI 101)
        (mem/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [2 yearTo+0 S8 A64])) "queryTAD.c":20:15 -1
     (nil))
(insn 57 56 58 9 (set (mem:DI (plus:DI (reg/f:DI 100)
                (const_int 8 [0x8])) [2 q_3->yearTo+0 S8 A64])
        (reg:DI 101)) "queryTAD.c":20:15 -1
     (nil))
(insn 58 57 61 9 (set (reg/f:DI 82 [ _8 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [11 q+0 S8 A64])) "queryTAD.c":21:12 -1
     (nil))
(insn 61 58 65 9 (set (reg/f:DI 95 [ <retval> ])
        (reg/f:DI 82 [ _8 ])) "queryTAD.c":21:12 -1
     (nil))
(insn 65 61 66 9 (set (reg/i:DI 0 ax)
        (reg/f:DI 95 [ <retval> ])) "queryTAD.c":22:1 -1
     (nil))
(insn 66 65 0 9 (use (reg/i:DI 0 ax)) "queryTAD.c":22:1 -1
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)


;; Function insertVector (insertVector, funcdef_no=1, decl_uid=3364, cgraph_uid=2, symbol_order=1)

insertVector (struct queryCDT * q, struct TSensor * vec)
{
  struct TSensor * * _5;
  unsigned long _7;
  unsigned long _8;
  unsigned long _9;
  signed char * _10;
  signed char _11;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _5 = &q_2(D)->sensorsID;
  _7 = (unsigned long) _5;
  _8 = _7 >> 3;
  _9 = _8 + 2147450880;
  _10 = (signed char *) _9;
  _11 = *_10;
  if (_11 != 0)
    goto <bb 3>; [0.05%]
  else
    goto <bb 4>; [99.95%]
;;    succ:       4
;;                3

;;   basic block 3, loop depth 0
;;    pred:       2
  __builtin___asan_report_store8 (_7);
;;    succ:      

;;   basic block 4, loop depth 0
;;    pred:       2
  q_2(D)->sensorsID = vec_3(D);
  return;
;;    succ:       EXIT

}



Partition map 

Partition 2 (q_2(D) - 2 )
Partition 3 (vec_3(D) - 3 )
Partition 5 (_5 - 5 )
Partition 7 (_7 - 7 )
Partition 8 (_8 - 8 )
Partition 9 (_9 - 9 )
Partition 10 (_10 - 10 )
Partition 11 (_11 - 11 )


Coalescible Partition map 

Partition 0, base 0 (q_2(D) - 2 )
Partition 1, base 1 (vec_3(D) - 3 )


Partition map 

Partition 0 (q_2(D) - 2 )
Partition 1 (vec_3(D) - 3 )


Conflict graph:

After sorting:
Coalesce List:

Partition map 

Partition 0 (q_2(D) - 2 )
Partition 1 (vec_3(D) - 3 )

After Coalescing:

Partition map 

Partition 0 (q_2(D) - 2 )
Partition 1 (vec_3(D) - 3 )
Partition 2 (_5 - 5 )
Partition 3 (_7 - 7 )
Partition 4 (_8 - 8 )
Partition 5 (_9 - 9 )
Partition 6 (_10 - 10 )
Partition 7 (_11 - 11 )

insertVector (struct queryCDT * q, struct TSensor * vec)
{
  struct TSensor * * _5;
  unsigned long _7;
  unsigned long _8;
  unsigned long _9;
  signed char * _10;
  signed char _11;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _5 = &q_2(D)->sensorsID;
  _7 = (unsigned long) _5;
  _8 = _7 >> 3;
  _9 = _8 + 2147450880;
  _10 = (signed char *) _9;
  _11 = *_10;
  if (_11 != 0)
    goto <bb 3>; [0.05%]
  else
    goto <bb 4>; [99.95%]
;;    succ:       4
;;                3

;;   basic block 3, loop depth 0
;;    pred:       2
  __builtin___asan_report_store8 (_7);
;;    succ:      

;;   basic block 4, loop depth 0
;;    pred:       2
  q_2(D)->sensorsID = vec_3(D);
  return;
;;    succ:       EXIT

}



;; Generating RTL for gimple basic block 2

;; _5 = &q_2(D)->sensorsID;

(insn 7 6 8 (set (reg/f:DI 88)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [11 q+0 S8 A64])) "queryTAD.c":25:18 -1
     (nil))

(insn 8 7 0 (parallel [
            (set (reg/f:DI 82 [ _5 ])
                (plus:DI (reg/f:DI 88)
                    (const_int 24 [0x18])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":25:18 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [11 q+0 S8 A64])
            (const_int 24 [0x18]))
        (nil)))

;; _7 = (unsigned long) _5;

(insn 9 8 0 (set (reg:DI 83 [ _7 ])
        (reg/f:DI 82 [ _5 ])) "queryTAD.c":25:18 -1
     (nil))

;; _8 = _7 >> 3;

(insn 10 9 0 (parallel [
            (set (reg:DI 84 [ _8 ])
                (lshiftrt:DI (reg:DI 83 [ _7 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":25:18 -1
     (nil))

;; _9 = _8 + 2147450880;

(insn 11 10 0 (parallel [
            (set (reg:DI 85 [ _9 ])
                (plus:DI (reg:DI 84 [ _8 ])
                    (const_int 2147450880 [0x7fff8000])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":25:18 -1
     (nil))

;; _10 = (signed char *) _9;

(insn 12 11 0 (set (reg/f:DI 86 [ _10 ])
        (reg:DI 85 [ _9 ])) "queryTAD.c":25:18 -1
     (nil))

;; _11 = *_10;

(insn 13 12 0 (set (reg:QI 87 [ _11 ])
        (mem:QI (reg/f:DI 86 [ _10 ]) [10 *_10+0 S1 A8])) "queryTAD.c":25:18 -1
     (nil))

;; if (_11 != 0)

(insn 14 13 15 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 87 [ _11 ])
            (const_int 0 [0]))) "queryTAD.c":25:18 -1
     (nil))

(jump_insn 15 14 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "queryTAD.c":25:18 -1
     (nil))

;; Generating RTL for gimple basic block 3

;; __builtin___asan_report_store8 (_7);

(insn 17 16 18 (set (reg:DI 5 di)
        (reg:DI 83 [ _7 ])) "queryTAD.c":25:18 -1
     (nil))

(call_insn 18 17 19 (call (mem:QI (symbol_ref:DI ("__asan_report_store8") [flags 0x41]  <function_decl 0x7fc58eea5f00 __builtin___asan_report_store8>) [0 __builtin___asan_report_store8 S1 A8])
        (const_int 0 [0])) "queryTAD.c":25:18 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

(barrier 19 18 0)

;; Generating RTL for gimple basic block 4

;; 

(code_label 20 19 21 7 (nil) [0 uses])

(note 21 20 0 NOTE_INSN_BASIC_BLOCK)

;; q_2(D)->sensorsID = vec_3(D);

(insn 22 21 23 (set (reg/f:DI 89)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [11 q+0 S8 A64])) "queryTAD.c":25:18 -1
     (nil))

(insn 23 22 24 (set (reg/f:DI 90)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [7 vec+0 S8 A64])) "queryTAD.c":25:18 -1
     (nil))

(insn 24 23 0 (set (mem/f:DI (plus:DI (reg/f:DI 89)
                (const_int 24 [0x18])) [7 q_2(D)->sensorsID+0 S8 A64])
        (reg/f:DI 90)) "queryTAD.c":25:18 -1
     (nil))


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 6 into block 5...
Merged blocks 5 and 6.
Merged 5 and 6 without moving.


try_optimize_cfg iteration 2

fix_loop_structure: fixing up loops for function


;;
;; Full RTL generated for this function:
;;
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 4, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [11 q+0 S8 A64])
        (reg:DI 5 di [ q ])) "queryTAD.c":24:45 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [7 vec+0 S8 A64])
        (reg:DI 4 si [ vec ])) "queryTAD.c":24:45 -1
     (nil))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg/f:DI 88)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [11 q+0 S8 A64])) "queryTAD.c":25:18 -1
     (nil))
(insn 8 7 9 2 (parallel [
            (set (reg/f:DI 82 [ _5 ])
                (plus:DI (reg/f:DI 88)
                    (const_int 24 [0x18])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":25:18 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [11 q+0 S8 A64])
            (const_int 24 [0x18]))
        (nil)))
(insn 9 8 10 2 (set (reg:DI 83 [ _7 ])
        (reg/f:DI 82 [ _5 ])) "queryTAD.c":25:18 -1
     (nil))
(insn 10 9 11 2 (parallel [
            (set (reg:DI 84 [ _8 ])
                (lshiftrt:DI (reg:DI 83 [ _7 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":25:18 -1
     (nil))
(insn 11 10 12 2 (parallel [
            (set (reg:DI 85 [ _9 ])
                (plus:DI (reg:DI 84 [ _8 ])
                    (const_int 2147450880 [0x7fff8000])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":25:18 -1
     (nil))
(insn 12 11 13 2 (set (reg/f:DI 86 [ _10 ])
        (reg:DI 85 [ _9 ])) "queryTAD.c":25:18 -1
     (nil))
(insn 13 12 14 2 (set (reg:QI 87 [ _11 ])
        (mem:QI (reg/f:DI 86 [ _10 ]) [10 *_10+0 S1 A8])) "queryTAD.c":25:18 -1
     (nil))
(insn 14 13 15 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 87 [ _11 ])
            (const_int 0 [0]))) "queryTAD.c":25:18 -1
     (nil))
(jump_insn 15 14 16 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 20)
            (pc))) "queryTAD.c":25:18 -1
     (nil)
 -> 20)
;;  succ:       5 [100.0% (guessed)] 
;;              4 [0.0% (guessed)]  (FALLTHRU)

;; basic block 4, loop depth 0, maybe hot
;;  prev block 2, next block 5, flags: (NEW, REACHABLE, RTL)
;;  pred:       2 [0.0% (guessed)]  (FALLTHRU)
(note 16 15 17 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 17 16 18 4 (set (reg:DI 5 di)
        (reg:DI 83 [ _7 ])) "queryTAD.c":25:18 -1
     (nil))
(call_insn 18 17 19 4 (call (mem:QI (symbol_ref:DI ("__asan_report_store8") [flags 0x41]  <function_decl 0x7fc58eea5f00 __builtin___asan_report_store8>) [0 __builtin___asan_report_store8 S1 A8])
        (const_int 0 [0])) "queryTAD.c":25:18 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:      

(barrier 19 18 20)
;; basic block 5, loop depth 0, maybe hot
;;  prev block 4, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       2 [100.0% (guessed)] 
(code_label 20 19 21 5 7 (nil) [1 uses])
(note 21 20 22 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 22 21 23 5 (set (reg/f:DI 89)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [11 q+0 S8 A64])) "queryTAD.c":25:18 -1
     (nil))
(insn 23 22 24 5 (set (reg/f:DI 90)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [7 vec+0 S8 A64])) "queryTAD.c":25:18 -1
     (nil))
(insn 24 23 0 5 (set (mem/f:DI (plus:DI (reg/f:DI 89)
                (const_int 24 [0x18])) [7 q_2(D)->sensorsID+0 S8 A64])
        (reg/f:DI 90)) "queryTAD.c":25:18 -1
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)


;; Function dayToNum (dayToNum, funcdef_no=2, decl_uid=3366, cgraph_uid=3, symbol_order=2)

dayToNum (char * s)
{
  int iftmp.0;
  size_t D.3479;
  char _1;
  char _2;
  int iftmp.0_3;
  int iftmp.0_6;
  int iftmp.0_7;
  size_t _8;
  unsigned long _10;
  unsigned long _11;
  unsigned long _12;
  signed char * _13;
  signed char _14;
  _Bool _15;
  unsigned long _16;
  signed char _17;
  _Bool _18;
  _Bool _19;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _10 = (unsigned long) s_5(D);
  _11 = _10 >> 3;
  _12 = _11 + 2147450880;
  _13 = (signed char *) _12;
  _14 = *_13;
  _15 = _14 != 0;
  _16 = _10 & 7;
  _17 = (signed char) _16;
  _18 = _17 >= _14;
  _19 = _15 & _18;
  if (_19 != 0)
    goto <bb 3>; [0.05%]
  else
    goto <bb 4>; [99.95%]
;;    succ:       4
;;                3

;;   basic block 3, loop depth 0
;;    pred:       2
  __builtin___asan_report_load1 (_10);
;;    succ:      

;;   basic block 4, loop depth 0
;;    pred:       2
  _1 = *s_5(D);
  if (_1 == 83)
    goto <bb 6>; [INV]
  else
    goto <bb 5>; [INV]
;;    succ:       6
;;                5

;;   basic block 5, loop depth 0
;;    pred:       4
  _2 = *s_5(D);
  if (_2 == 115)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]
;;    succ:       6
;;                7

;;   basic block 6, loop depth 0
;;    pred:       4
;;                5
  iftmp.0_7 = 1;
  goto <bb 8>; [INV]
;;    succ:       8

;;   basic block 7, loop depth 0
;;    pred:       5
  iftmp.0_6 = 0;
;;    succ:       8

;;   basic block 8, loop depth 0
;;    pred:       6
;;                7
  # iftmp.0_3 = PHI <iftmp.0_7(6), iftmp.0_6(7)>
  _8 = (size_t) iftmp.0_3;
;;    succ:       9

;;   basic block 9, loop depth 0
;;    pred:       8
<L4>:
  return _8;
;;    succ:       EXIT

}



Partition map 

Partition 1 (_1 - 1 )
Partition 2 (_2 - 2 )
Partition 3 (iftmp.0_3 - 3 )
Partition 5 (s_5(D) - 5 )
Partition 6 (iftmp.0_6 - 6 )
Partition 7 (iftmp.0_7 - 7 )
Partition 8 (_8 - 8 )
Partition 10 (_10 - 10 )
Partition 11 (_11 - 11 )
Partition 12 (_12 - 12 )
Partition 13 (_13 - 13 )
Partition 14 (_14 - 14 )
Partition 15 (_15 - 15 )
Partition 16 (_16 - 16 )
Partition 17 (_17 - 17 )
Partition 18 (_18 - 18 )
Partition 19 (_19 - 19 )
Partition 21 (_21(D) - 21 )


Coalescible Partition map 

Partition 0, base 0 (iftmp.0_3 - 3 6 7 )
Partition 1, base 1 (s_5(D) - 5 )
Partition 4, base 2 (_21(D) - 21 )


Partition map 

Partition 0 (iftmp.0_3 - 3 )
Partition 1 (s_5(D) - 5 )
Partition 2 (iftmp.0_6 - 6 )
Partition 3 (iftmp.0_7 - 7 )
Partition 4 (_21(D) - 21 )


Conflict graph:

After sorting:
Sorted Coalesce list:
(10000, 0) iftmp.0_3 <-> iftmp.0_7
(10000, 0) iftmp.0_3 <-> iftmp.0_6

Partition map 

Partition 0 (iftmp.0_3 - 3 )
Partition 1 (s_5(D) - 5 )
Partition 2 (iftmp.0_6 - 6 )
Partition 3 (iftmp.0_7 - 7 )
Partition 4 (_21(D) - 21 )

Coalesce list: (3)iftmp.0_3 & (7)iftmp.0_7 [map: 0, 3] : Success -> 0
Coalesce list: (3)iftmp.0_3 & (6)iftmp.0_6 [map: 0, 2] : Success -> 0
After Coalescing:

Partition map 

Partition 0 (_1 - 1 )
Partition 1 (_2 - 2 )
Partition 2 (iftmp.0_3 - 3 6 7 )
Partition 3 (s_5(D) - 5 )
Partition 4 (_8 - 8 )
Partition 5 (_10 - 10 )
Partition 6 (_11 - 11 )
Partition 7 (_12 - 12 )
Partition 8 (_13 - 13 )
Partition 9 (_14 - 14 )
Partition 10 (_15 - 15 )
Partition 11 (_16 - 16 )
Partition 12 (_17 - 17 )
Partition 13 (_18 - 18 )
Partition 14 (_19 - 19 )
Partition 15 (_21(D) - 21 )

dayToNum (char * s)
{
  int iftmp.0;
  size_t D.3479;
  char _1;
  char _2;
  int iftmp.0_3;
  int iftmp.0_6;
  int iftmp.0_7;
  size_t _8;
  unsigned long _10;
  unsigned long _11;
  unsigned long _12;
  signed char * _13;
  signed char _14;
  _Bool _15;
  unsigned long _16;
  signed char _17;
  _Bool _18;
  _Bool _19;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _10 = (unsigned long) s_5(D);
  _11 = _10 >> 3;
  _12 = _11 + 2147450880;
  _13 = (signed char *) _12;
  _14 = *_13;
  _15 = _14 != 0;
  _16 = _10 & 7;
  _17 = (signed char) _16;
  _18 = _17 >= _14;
  _19 = _15 & _18;
  if (_19 != 0)
    goto <bb 3>; [0.05%]
  else
    goto <bb 4>; [99.95%]
;;    succ:       4
;;                3

;;   basic block 3, loop depth 0
;;    pred:       2
  __builtin___asan_report_load1 (_10);
;;    succ:      

;;   basic block 4, loop depth 0
;;    pred:       2
  _1 = *s_5(D);
  if (_1 == 83)
    goto <bb 6>; [INV]
  else
    goto <bb 5>; [INV]
;;    succ:       6
;;                5

;;   basic block 5, loop depth 0
;;    pred:       4
  _2 = *s_5(D);
  if (_2 == 115)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]
;;    succ:       6
;;                7

;;   basic block 6, loop depth 0
;;    pred:       4
;;                5
  iftmp.0_7 = 1;
  goto <bb 8>; [INV]
;;    succ:       8

;;   basic block 7, loop depth 0
;;    pred:       5
  iftmp.0_6 = 0;
;;    succ:       8

;;   basic block 8, loop depth 0
;;    pred:       6
;;                7
  # iftmp.0_3 = PHI <iftmp.0_7(6), iftmp.0_6(7)>
  _8 = (size_t) iftmp.0_3;
;;    succ:       9

;;   basic block 9, loop depth 0
;;    pred:       8
<L4>:
  return _8;
;;    succ:       EXIT

}



;; Generating RTL for gimple basic block 2

;; _10 = (unsigned long) s_5(D);

(insn 6 5 0 (set (reg:DI 86 [ _10 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [3 s+0 S8 A64])) "queryTAD.c":35:13 -1
     (nil))

;; _11 = _10 >> 3;

(insn 7 6 0 (parallel [
            (set (reg:DI 87 [ _11 ])
                (lshiftrt:DI (reg:DI 86 [ _10 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":35:13 -1
     (nil))

;; _12 = _11 + 2147450880;

(insn 8 7 0 (parallel [
            (set (reg:DI 88 [ _12 ])
                (plus:DI (reg:DI 87 [ _11 ])
                    (const_int 2147450880 [0x7fff8000])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":35:13 -1
     (nil))

;; _13 = (signed char *) _12;

(insn 9 8 0 (set (reg/f:DI 89 [ _13 ])
        (reg:DI 88 [ _12 ])) "queryTAD.c":35:13 -1
     (nil))

;; _14 = *_13;

(insn 10 9 0 (set (reg:QI 90 [ _14 ])
        (mem:QI (reg/f:DI 89 [ _13 ]) [10 *_13+0 S1 A8])) "queryTAD.c":35:13 -1
     (nil))

;; _15 = _14 != 0;

(insn 11 10 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 90 [ _14 ])
            (const_int 0 [0]))) "queryTAD.c":35:13 -1
     (nil))

(insn 12 11 0 (set (reg:QI 91 [ _15 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) "queryTAD.c":35:13 -1
     (nil))

;; _16 = _10 & 7;

(insn 13 12 0 (parallel [
            (set (reg:DI 92 [ _16 ])
                (and:DI (reg:DI 86 [ _10 ])
                    (const_int 7 [0x7])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":35:13 -1
     (nil))

;; _17 = (signed char) _16;

(insn 14 13 0 (set (reg:QI 93 [ _17 ])
        (subreg:QI (reg:DI 92 [ _16 ]) 0)) "queryTAD.c":35:13 -1
     (nil))

;; _18 = _17 >= _14;

(insn 15 14 16 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:QI 93 [ _17 ])
            (reg:QI 90 [ _14 ]))) "queryTAD.c":35:13 -1
     (nil))

(insn 16 15 0 (set (reg:QI 94 [ _18 ])
        (ge:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "queryTAD.c":35:13 -1
     (nil))

;; _19 = _15 & _18;

(insn 17 16 0 (parallel [
            (set (reg:QI 95 [ _19 ])
                (and:QI (reg:QI 91 [ _15 ])
                    (reg:QI 94 [ _18 ])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":35:13 -1
     (nil))

;; if (_19 != 0)

(insn 18 17 19 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 95 [ _19 ])
            (const_int 0 [0]))) "queryTAD.c":35:13 -1
     (nil))

(jump_insn 19 18 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "queryTAD.c":35:13 -1
     (nil))

;; Generating RTL for gimple basic block 3

;; __builtin___asan_report_load1 (_10);

(insn 21 20 22 (set (reg:DI 5 di)
        (reg:DI 86 [ _10 ])) "queryTAD.c":35:13 -1
     (nil))

(call_insn 22 21 23 (call (mem:QI (symbol_ref:DI ("__asan_report_load1") [flags 0x41]  <function_decl 0x7fc58eea5600 __builtin___asan_report_load1>) [0 __builtin___asan_report_load1 S1 A8])
        (const_int 0 [0])) "queryTAD.c":35:13 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

(barrier 23 22 0)

;; Generating RTL for gimple basic block 4

;; 

(code_label 24 23 25 9 (nil) [0 uses])

(note 25 24 0 NOTE_INSN_BASIC_BLOCK)

;; _1 = *s_5(D);

(insn 26 25 27 (set (reg/f:DI 97)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [3 s+0 S8 A64])) "queryTAD.c":35:13 -1
     (nil))

(insn 27 26 0 (set (reg:QI 82 [ _1 ])
        (mem:QI (reg/f:DI 97) [0 *s_5(D)+0 S1 A8])) "queryTAD.c":35:13 -1
     (nil))

;; if (_1 == 83)

(insn 28 27 29 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 82 [ _1 ])
            (const_int 83 [0x53]))) "queryTAD.c":35:24 -1
     (nil))

(jump_insn 29 28 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "queryTAD.c":35:24 -1
     (nil))

;; Generating RTL for gimple basic block 5

;; _2 = *s_5(D);

(insn 31 30 32 (set (reg/f:DI 98)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [3 s+0 S8 A64])) "queryTAD.c":35:28 -1
     (nil))

(insn 32 31 0 (set (reg:QI 83 [ _2 ])
        (mem:QI (reg/f:DI 98) [0 *s_5(D)+0 S1 A8])) "queryTAD.c":35:28 -1
     (nil))

;; if (_2 == 115)

(insn 33 32 34 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 83 [ _2 ])
            (const_int 115 [0x73]))) "queryTAD.c":35:24 -1
     (nil))

(jump_insn 34 33 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "queryTAD.c":35:24 -1
     (nil))

;; Generating RTL for gimple basic block 6

;; 

(code_label 35 34 36 10 (nil) [0 uses])

(note 36 35 0 NOTE_INSN_BASIC_BLOCK)

;; iftmp.0_7 = 1;

(insn 37 36 0 (set (reg:SI 84 [ iftmp.0_3 ])
        (const_int 1 [0x1])) "queryTAD.c":35:24 -1
     (nil))

;; Generating RTL for gimple basic block 7

;; 

(code_label 40 39 41 11 (nil) [0 uses])

(note 41 40 0 NOTE_INSN_BASIC_BLOCK)

;; iftmp.0_6 = 0;

(insn 42 41 0 (set (reg:SI 84 [ iftmp.0_3 ])
        (const_int 0 [0])) "queryTAD.c":35:24 -1
     (nil))

;; Generating RTL for gimple basic block 8

;; 

(code_label 43 42 44 12 (nil) [0 uses])

(note 44 43 0 NOTE_INSN_BASIC_BLOCK)

;; _8 = (size_t) iftmp.0_3;

(insn 45 44 0 (set (reg:DI 85 [ _8 ])
        (sign_extend:DI (reg:SI 84 [ iftmp.0_3 ]))) "queryTAD.c":35:24 -1
     (nil))

;; Generating RTL for gimple basic block 9

;; <L4>:

(code_label 46 45 47 13 (nil) [0 uses])

(note 47 46 0 NOTE_INSN_BASIC_BLOCK)

;; return _8;

(insn 48 47 49 (set (reg:DI 96 [ <retval> ])
        (reg:DI 85 [ _8 ])) "queryTAD.c":35:24 -1
     (nil))

(jump_insn 49 48 50 (set (pc)
        (label_ref 0)) "queryTAD.c":35:24 -1
     (nil))

(barrier 50 49 0)


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 10 into block 9...
Merged blocks 9 and 10.
Merged 9 and 10 without moving.
Removing jump 49.
Merging block 11 into block 9...
Merged blocks 9 and 11.
Merged 9 and 11 without moving.


try_optimize_cfg iteration 2

fix_loop_structure: fixing up loops for function


;;
;; Full RTL generated for this function:
;;
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 4, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [3 s+0 S8 A64])
        (reg:DI 5 di [ s ])) "queryTAD.c":34:26 -1
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg:DI 86 [ _10 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [3 s+0 S8 A64])) "queryTAD.c":35:13 -1
     (nil))
(insn 7 6 8 2 (parallel [
            (set (reg:DI 87 [ _11 ])
                (lshiftrt:DI (reg:DI 86 [ _10 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":35:13 -1
     (nil))
(insn 8 7 9 2 (parallel [
            (set (reg:DI 88 [ _12 ])
                (plus:DI (reg:DI 87 [ _11 ])
                    (const_int 2147450880 [0x7fff8000])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":35:13 -1
     (nil))
(insn 9 8 10 2 (set (reg/f:DI 89 [ _13 ])
        (reg:DI 88 [ _12 ])) "queryTAD.c":35:13 -1
     (nil))
(insn 10 9 11 2 (set (reg:QI 90 [ _14 ])
        (mem:QI (reg/f:DI 89 [ _13 ]) [10 *_13+0 S1 A8])) "queryTAD.c":35:13 -1
     (nil))
(insn 11 10 12 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 90 [ _14 ])
            (const_int 0 [0]))) "queryTAD.c":35:13 -1
     (nil))
(insn 12 11 13 2 (set (reg:QI 91 [ _15 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) "queryTAD.c":35:13 -1
     (nil))
(insn 13 12 14 2 (parallel [
            (set (reg:DI 92 [ _16 ])
                (and:DI (reg:DI 86 [ _10 ])
                    (const_int 7 [0x7])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":35:13 -1
     (nil))
(insn 14 13 15 2 (set (reg:QI 93 [ _17 ])
        (subreg:QI (reg:DI 92 [ _16 ]) 0)) "queryTAD.c":35:13 -1
     (nil))
(insn 15 14 16 2 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:QI 93 [ _17 ])
            (reg:QI 90 [ _14 ]))) "queryTAD.c":35:13 -1
     (nil))
(insn 16 15 17 2 (set (reg:QI 94 [ _18 ])
        (ge:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "queryTAD.c":35:13 -1
     (nil))
(insn 17 16 18 2 (parallel [
            (set (reg:QI 95 [ _19 ])
                (and:QI (reg:QI 91 [ _15 ])
                    (reg:QI 94 [ _18 ])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":35:13 -1
     (nil))
(insn 18 17 19 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 95 [ _19 ])
            (const_int 0 [0]))) "queryTAD.c":35:13 -1
     (nil))
(jump_insn 19 18 20 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 24)
            (pc))) "queryTAD.c":35:13 -1
     (nil)
 -> 24)
;;  succ:       5 [100.0% (guessed)] 
;;              4 [0.0% (guessed)]  (FALLTHRU)

;; basic block 4, loop depth 0, maybe hot
;;  prev block 2, next block 5, flags: (NEW, REACHABLE, RTL)
;;  pred:       2 [0.0% (guessed)]  (FALLTHRU)
(note 20 19 21 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 21 20 22 4 (set (reg:DI 5 di)
        (reg:DI 86 [ _10 ])) "queryTAD.c":35:13 -1
     (nil))
(call_insn 22 21 23 4 (call (mem:QI (symbol_ref:DI ("__asan_report_load1") [flags 0x41]  <function_decl 0x7fc58eea5600 __builtin___asan_report_load1>) [0 __builtin___asan_report_load1 S1 A8])
        (const_int 0 [0])) "queryTAD.c":35:13 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:      

(barrier 23 22 24)
;; basic block 5, loop depth 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL)
;;  pred:       2 [100.0% (guessed)] 
(code_label 24 23 25 5 9 (nil) [1 uses])
(note 25 24 26 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 26 25 27 5 (set (reg/f:DI 97)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [3 s+0 S8 A64])) "queryTAD.c":35:13 -1
     (nil))
(insn 27 26 28 5 (set (reg:QI 82 [ _1 ])
        (mem:QI (reg/f:DI 97) [0 *s_5(D)+0 S1 A8])) "queryTAD.c":35:13 -1
     (nil))
(insn 28 27 29 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 82 [ _1 ])
            (const_int 83 [0x53]))) "queryTAD.c":35:24 -1
     (nil))
(jump_insn 29 28 30 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 35)
            (pc))) "queryTAD.c":35:24 -1
     (nil)
 -> 35)
;;  succ:       7
;;              6 (FALLTHRU)

;; basic block 6, loop depth 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL)
;;  pred:       5 (FALLTHRU)
(note 30 29 31 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 31 30 32 6 (set (reg/f:DI 98)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [3 s+0 S8 A64])) "queryTAD.c":35:28 -1
     (nil))
(insn 32 31 33 6 (set (reg:QI 83 [ _2 ])
        (mem:QI (reg/f:DI 98) [0 *s_5(D)+0 S1 A8])) "queryTAD.c":35:28 -1
     (nil))
(insn 33 32 34 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 83 [ _2 ])
            (const_int 115 [0x73]))) "queryTAD.c":35:24 -1
     (nil))
(jump_insn 34 33 35 6 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 40)
            (pc))) "queryTAD.c":35:24 -1
     (nil)
 -> 40)
;;  succ:       7 (FALLTHRU)
;;              8

;; basic block 7, loop depth 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL)
;;  pred:       5
;;              6 (FALLTHRU)
(code_label 35 34 36 7 10 (nil) [1 uses])
(note 36 35 37 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 37 36 38 7 (set (reg:SI 84 [ iftmp.0_3 ])
        (const_int 1 [0x1])) "queryTAD.c":35:24 -1
     (nil))
(jump_insn 38 37 39 7 (set (pc)
        (label_ref 43)) "queryTAD.c":35:24 -1
     (nil)
 -> 43)
;;  succ:       9

(barrier 39 38 40)
;; basic block 8, loop depth 0, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL)
;;  pred:       6
(code_label 40 39 41 8 11 (nil) [1 uses])
(note 41 40 42 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 42 41 43 8 (set (reg:SI 84 [ iftmp.0_3 ])
        (const_int 0 [0])) "queryTAD.c":35:24 -1
     (nil))
;;  succ:       9 (FALLTHRU)

;; basic block 9, loop depth 0, maybe hot
;;  prev block 8, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       7
;;              8 (FALLTHRU)
(code_label 43 42 44 9 12 (nil) [1 uses])
(note 44 43 45 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 45 44 48 9 (set (reg:DI 85 [ _8 ])
        (sign_extend:DI (reg:SI 84 [ iftmp.0_3 ]))) "queryTAD.c":35:24 -1
     (nil))
(insn 48 45 52 9 (set (reg:DI 96 [ <retval> ])
        (reg:DI 85 [ _8 ])) "queryTAD.c":35:24 -1
     (nil))
(insn 52 48 53 9 (set (reg/i:DI 0 ax)
        (reg:DI 96 [ <retval> ])) "queryTAD.c":36:1 -1
     (nil))
(insn 53 52 0 9 (use (reg/i:DI 0 ax)) "queryTAD.c":36:1 -1
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)


;; Function monthToNum (monthToNum, funcdef_no=3, decl_uid=3368, cgraph_uid=4, symbol_order=3)

monthToNum (char * s)
{
  int i;
  char * months[12];
  size_t D.3488;
  char * _1;
  int _2;
  int _3;
  size_t _5;
  size_t _21;
  size_t _24;
  char * * _26;
  char * * _27;
  char * * _28;
  char * * _29;
  char * * _30;
  char * * _31;
  char * * _32;
  char * * _33;
  char * * _34;
  char * * _35;
  char * * _36;
  char * * _37;
  char * * _38;
  unsigned long _54;
  unsigned long _55;
  unsigned long _56;
  signed char * _57;
  signed char _58;
  unsigned long _59;
  unsigned long _60;
  unsigned long _61;
  signed char * _62;
  signed char _63;
  unsigned long _64;
  unsigned long _65;
  unsigned long _66;
  signed char * _67;
  signed char _68;
  unsigned long _69;
  unsigned long _70;
  unsigned long _71;
  signed char * _72;
  signed char _73;
  unsigned long _74;
  unsigned long _75;
  unsigned long _76;
  signed char * _77;
  signed char _78;
  unsigned long _79;
  unsigned long _80;
  unsigned long _81;
  signed char * _82;
  signed char _83;
  unsigned long _84;
  unsigned long _85;
  unsigned long _86;
  signed char * _87;
  signed char _88;
  unsigned long _89;
  unsigned long _90;
  unsigned long _91;
  signed char * _92;
  signed char _93;
  unsigned long _94;
  unsigned long _95;
  unsigned long _96;
  signed char * _97;
  signed char _98;
  unsigned long _99;
  unsigned long _100;
  unsigned long _101;
  signed char * _102;
  signed char _103;
  unsigned long _104;
  unsigned long _105;
  unsigned long _106;
  signed char * _107;
  signed char _108;
  unsigned long _109;
  unsigned long _110;
  unsigned long _111;
  signed char * _112;
  signed char _113;
  unsigned long _114;
  unsigned long _115;
  unsigned long _116;
  signed char * _117;
  signed char _118;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _26 = &months[0];
  _54 = (unsigned long) _26;
  _55 = _54 >> 3;
  _56 = _55 + 2147450880;
  _57 = (signed char *) _56;
  _58 = *_57;
  if (_58 != 0)
    goto <bb 3>; [0.05%]
  else
    goto <bb 4>; [99.95%]
;;    succ:       4
;;                3

;;   basic block 3, loop depth 0
;;    pred:       2
  __builtin___asan_report_store8 (_54);
;;    succ:      

;;   basic block 4, loop depth 0
;;    pred:       2
  months[0] = "January";
  _27 = &months[1];
  _59 = (unsigned long) _27;
  _60 = _59 >> 3;
  _61 = _60 + 2147450880;
  _62 = (signed char *) _61;
  _63 = *_62;
  if (_63 != 0)
    goto <bb 5>; [0.05%]
  else
    goto <bb 6>; [99.95%]
;;    succ:       6
;;                5

;;   basic block 5, loop depth 0
;;    pred:       4
  __builtin___asan_report_store8 (_59);
;;    succ:      

;;   basic block 6, loop depth 0
;;    pred:       4
  months[1] = "February";
  _28 = &months[2];
  _64 = (unsigned long) _28;
  _65 = _64 >> 3;
  _66 = _65 + 2147450880;
  _67 = (signed char *) _66;
  _68 = *_67;
  if (_68 != 0)
    goto <bb 7>; [0.05%]
  else
    goto <bb 8>; [99.95%]
;;    succ:       8
;;                7

;;   basic block 7, loop depth 0
;;    pred:       6
  __builtin___asan_report_store8 (_64);
;;    succ:      

;;   basic block 8, loop depth 0
;;    pred:       6
  months[2] = "March";
  _29 = &months[3];
  _69 = (unsigned long) _29;
  _70 = _69 >> 3;
  _71 = _70 + 2147450880;
  _72 = (signed char *) _71;
  _73 = *_72;
  if (_73 != 0)
    goto <bb 9>; [0.05%]
  else
    goto <bb 10>; [99.95%]
;;    succ:       10
;;                9

;;   basic block 9, loop depth 0
;;    pred:       8
  __builtin___asan_report_store8 (_69);
;;    succ:      

;;   basic block 10, loop depth 0
;;    pred:       8
  months[3] = "April";
  _30 = &months[4];
  _74 = (unsigned long) _30;
  _75 = _74 >> 3;
  _76 = _75 + 2147450880;
  _77 = (signed char *) _76;
  _78 = *_77;
  if (_78 != 0)
    goto <bb 11>; [0.05%]
  else
    goto <bb 12>; [99.95%]
;;    succ:       12
;;                11

;;   basic block 11, loop depth 0
;;    pred:       10
  __builtin___asan_report_store8 (_74);
;;    succ:      

;;   basic block 12, loop depth 0
;;    pred:       10
  months[4] = "May";
  _31 = &months[5];
  _79 = (unsigned long) _31;
  _80 = _79 >> 3;
  _81 = _80 + 2147450880;
  _82 = (signed char *) _81;
  _83 = *_82;
  if (_83 != 0)
    goto <bb 13>; [0.05%]
  else
    goto <bb 14>; [99.95%]
;;    succ:       14
;;                13

;;   basic block 13, loop depth 0
;;    pred:       12
  __builtin___asan_report_store8 (_79);
;;    succ:      

;;   basic block 14, loop depth 0
;;    pred:       12
  months[5] = "June";
  _32 = &months[6];
  _84 = (unsigned long) _32;
  _85 = _84 >> 3;
  _86 = _85 + 2147450880;
  _87 = (signed char *) _86;
  _88 = *_87;
  if (_88 != 0)
    goto <bb 15>; [0.05%]
  else
    goto <bb 16>; [99.95%]
;;    succ:       16
;;                15

;;   basic block 15, loop depth 0
;;    pred:       14
  __builtin___asan_report_store8 (_84);
;;    succ:      

;;   basic block 16, loop depth 0
;;    pred:       14
  months[6] = "July";
  _33 = &months[7];
  _89 = (unsigned long) _33;
  _90 = _89 >> 3;
  _91 = _90 + 2147450880;
  _92 = (signed char *) _91;
  _93 = *_92;
  if (_93 != 0)
    goto <bb 17>; [0.05%]
  else
    goto <bb 18>; [99.95%]
;;    succ:       18
;;                17

;;   basic block 17, loop depth 0
;;    pred:       16
  __builtin___asan_report_store8 (_89);
;;    succ:      

;;   basic block 18, loop depth 0
;;    pred:       16
  months[7] = "August";
  _34 = &months[8];
  _94 = (unsigned long) _34;
  _95 = _94 >> 3;
  _96 = _95 + 2147450880;
  _97 = (signed char *) _96;
  _98 = *_97;
  if (_98 != 0)
    goto <bb 19>; [0.05%]
  else
    goto <bb 20>; [99.95%]
;;    succ:       20
;;                19

;;   basic block 19, loop depth 0
;;    pred:       18
  __builtin___asan_report_store8 (_94);
;;    succ:      

;;   basic block 20, loop depth 0
;;    pred:       18
  months[8] = "September";
  _35 = &months[9];
  _99 = (unsigned long) _35;
  _100 = _99 >> 3;
  _101 = _100 + 2147450880;
  _102 = (signed char *) _101;
  _103 = *_102;
  if (_103 != 0)
    goto <bb 21>; [0.05%]
  else
    goto <bb 22>; [99.95%]
;;    succ:       22
;;                21

;;   basic block 21, loop depth 0
;;    pred:       20
  __builtin___asan_report_store8 (_99);
;;    succ:      

;;   basic block 22, loop depth 0
;;    pred:       20
  months[9] = "October";
  _36 = &months[10];
  _104 = (unsigned long) _36;
  _105 = _104 >> 3;
  _106 = _105 + 2147450880;
  _107 = (signed char *) _106;
  _108 = *_107;
  if (_108 != 0)
    goto <bb 23>; [0.05%]
  else
    goto <bb 24>; [99.95%]
;;    succ:       24
;;                23

;;   basic block 23, loop depth 0
;;    pred:       22
  __builtin___asan_report_store8 (_104);
;;    succ:      

;;   basic block 24, loop depth 0
;;    pred:       22
  months[10] = "November";
  _37 = &months[11];
  _109 = (unsigned long) _37;
  _110 = _109 >> 3;
  _111 = _110 + 2147450880;
  _112 = (signed char *) _111;
  _113 = *_112;
  if (_113 != 0)
    goto <bb 25>; [0.05%]
  else
    goto <bb 26>; [99.95%]
;;    succ:       26
;;                25

;;   basic block 25, loop depth 0
;;    pred:       24
  __builtin___asan_report_store8 (_109);
;;    succ:      

;;   basic block 26, loop depth 0
;;    pred:       24
  months[11] = "December";
  i_20 = 0;
  goto <bb 32>; [INV]
;;    succ:       32

;;   basic block 27, loop depth 1
;;    pred:       32
  _38 = &months[i_4];
  _114 = (unsigned long) _38;
  _115 = _114 >> 3;
  _116 = _115 + 2147450880;
  _117 = (signed char *) _116;
  _118 = *_117;
  if (_118 != 0)
    goto <bb 28>; [0.05%]
  else
    goto <bb 29>; [99.95%]
;;    succ:       29
;;                28

;;   basic block 28, loop depth 0
;;    pred:       27
  __builtin___asan_report_load8 (_114);
;;    succ:      

;;   basic block 29, loop depth 1
;;    pred:       27
  _1 = months[i_4];
  _2 = strcasecmp (s_22(D), _1);
  if (_2 == 0)
    goto <bb 30>; [INV]
  else
    goto <bb 31>; [INV]
;;    succ:       30
;;                31

;;   basic block 30, loop depth 0
;;    pred:       29
  _3 = i_4 + 1;
  _24 = (size_t) _3;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 34>; [INV]
;;    succ:       34

;;   basic block 31, loop depth 1
;;    pred:       29
  i_23 = i_4 + 1;
;;    succ:       32

;;   basic block 32, loop depth 1
;;    pred:       26
;;                31
  # i_4 = PHI <i_20(26), i_23(31)>
  if (i_4 <= 11)
    goto <bb 27>; [INV]
  else
    goto <bb 33>; [INV]
;;    succ:       27
;;                33

;;   basic block 33, loop depth 0
;;    pred:       32
  _21 = 18446744073709551615;
;;    succ:       34

;;   basic block 34, loop depth 0
;;    pred:       30
;;                33
  # _5 = PHI <_24(30), _21(33)>
;;    succ:       35

;;   basic block 35, loop depth 0
;;    pred:       34
<L6>:
  return _5;
;;    succ:       EXIT

}



Partition map 

Partition 1 (_1 - 1 )
Partition 2 (_2 - 2 )
Partition 3 (_3 - 3 )
Partition 4 (i_4 - 4 )
Partition 5 (_5 - 5 )
Partition 20 (i_20 - 20 )
Partition 21 (_21 - 21 )
Partition 22 (s_22(D) - 22 )
Partition 23 (i_23 - 23 )
Partition 24 (_24 - 24 )
Partition 25 (_25(D) - 25 )
Partition 26 (_26 - 26 )
Partition 27 (_27 - 27 )
Partition 28 (_28 - 28 )
Partition 29 (_29 - 29 )
Partition 30 (_30 - 30 )
Partition 31 (_31 - 31 )
Partition 32 (_32 - 32 )
Partition 33 (_33 - 33 )
Partition 34 (_34 - 34 )
Partition 35 (_35 - 35 )
Partition 36 (_36 - 36 )
Partition 37 (_37 - 37 )
Partition 38 (_38 - 38 )
Partition 54 (_54 - 54 )
Partition 55 (_55 - 55 )
Partition 56 (_56 - 56 )
Partition 57 (_57 - 57 )
Partition 58 (_58 - 58 )
Partition 59 (_59 - 59 )
Partition 60 (_60 - 60 )
Partition 61 (_61 - 61 )
Partition 62 (_62 - 62 )
Partition 63 (_63 - 63 )
Partition 64 (_64 - 64 )
Partition 65 (_65 - 65 )
Partition 66 (_66 - 66 )
Partition 67 (_67 - 67 )
Partition 68 (_68 - 68 )
Partition 69 (_69 - 69 )
Partition 70 (_70 - 70 )
Partition 71 (_71 - 71 )
Partition 72 (_72 - 72 )
Partition 73 (_73 - 73 )
Partition 74 (_74 - 74 )
Partition 75 (_75 - 75 )
Partition 76 (_76 - 76 )
Partition 77 (_77 - 77 )
Partition 78 (_78 - 78 )
Partition 79 (_79 - 79 )
Partition 80 (_80 - 80 )
Partition 81 (_81 - 81 )
Partition 82 (_82 - 82 )
Partition 83 (_83 - 83 )
Partition 84 (_84 - 84 )
Partition 85 (_85 - 85 )
Partition 86 (_86 - 86 )
Partition 87 (_87 - 87 )
Partition 88 (_88 - 88 )
Partition 89 (_89 - 89 )
Partition 90 (_90 - 90 )
Partition 91 (_91 - 91 )
Partition 92 (_92 - 92 )
Partition 93 (_93 - 93 )
Partition 94 (_94 - 94 )
Partition 95 (_95 - 95 )
Partition 96 (_96 - 96 )
Partition 97 (_97 - 97 )
Partition 98 (_98 - 98 )
Partition 99 (_99 - 99 )
Partition 100 (_100 - 100 )
Partition 101 (_101 - 101 )
Partition 102 (_102 - 102 )
Partition 103 (_103 - 103 )
Partition 104 (_104 - 104 )
Partition 105 (_105 - 105 )
Partition 106 (_106 - 106 )
Partition 107 (_107 - 107 )
Partition 108 (_108 - 108 )
Partition 109 (_109 - 109 )
Partition 110 (_110 - 110 )
Partition 111 (_111 - 111 )
Partition 112 (_112 - 112 )
Partition 113 (_113 - 113 )
Partition 114 (_114 - 114 )
Partition 115 (_115 - 115 )
Partition 116 (_116 - 116 )
Partition 117 (_117 - 117 )
Partition 118 (_118 - 118 )


Coalescible Partition map 

Partition 0, base 0 (i_4 - 4 20 23 )
Partition 1, base 1 (_5 - 5 21 24 )
Partition 4, base 2 (s_22(D) - 22 )
Partition 7, base 3 (_25(D) - 25 )


Partition map 

Partition 0 (i_4 - 4 )
Partition 1 (_5 - 5 )
Partition 2 (i_20 - 20 )
Partition 3 (_21 - 21 )
Partition 4 (s_22(D) - 22 )
Partition 5 (i_23 - 23 )
Partition 6 (_24 - 24 )
Partition 7 (_25(D) - 25 )


Conflict graph:

After sorting:
Sorted Coalesce list:
(2147483646, 0) i_4 <-> i_20
(2147483646, 0) i_4 <-> i_23
(10000, 0) _5 <-> _24
(10000, 0) _5 <-> _21

Partition map 

Partition 0 (i_4 - 4 )
Partition 1 (_5 - 5 )
Partition 2 (i_20 - 20 )
Partition 3 (_21 - 21 )
Partition 4 (s_22(D) - 22 )
Partition 5 (i_23 - 23 )
Partition 6 (_24 - 24 )
Partition 7 (_25(D) - 25 )

Coalesce list: (4)i_4 & (20)i_20 [map: 0, 2] : Success -> 0
Coalesce list: (4)i_4 & (23)i_23 [map: 0, 5] : Success -> 0
Coalesce list: (5)_5 & (24)_24 [map: 1, 6] : Success -> 1
Coalesce list: (5)_5 & (21)_21 [map: 1, 3] : Success -> 1
After Coalescing:

Partition map 

Partition 0 (_1 - 1 )
Partition 1 (_2 - 2 )
Partition 2 (_3 - 3 )
Partition 3 (i_4 - 4 20 23 )
Partition 4 (_5 - 5 21 24 )
Partition 5 (s_22(D) - 22 )
Partition 6 (_25(D) - 25 )
Partition 7 (_26 - 26 )
Partition 8 (_27 - 27 )
Partition 9 (_28 - 28 )
Partition 10 (_29 - 29 )
Partition 11 (_30 - 30 )
Partition 12 (_31 - 31 )
Partition 13 (_32 - 32 )
Partition 14 (_33 - 33 )
Partition 15 (_34 - 34 )
Partition 16 (_35 - 35 )
Partition 17 (_36 - 36 )
Partition 18 (_37 - 37 )
Partition 19 (_38 - 38 )
Partition 20 (_54 - 54 )
Partition 21 (_55 - 55 )
Partition 22 (_56 - 56 )
Partition 23 (_57 - 57 )
Partition 24 (_58 - 58 )
Partition 25 (_59 - 59 )
Partition 26 (_60 - 60 )
Partition 27 (_61 - 61 )
Partition 28 (_62 - 62 )
Partition 29 (_63 - 63 )
Partition 30 (_64 - 64 )
Partition 31 (_65 - 65 )
Partition 32 (_66 - 66 )
Partition 33 (_67 - 67 )
Partition 34 (_68 - 68 )
Partition 35 (_69 - 69 )
Partition 36 (_70 - 70 )
Partition 37 (_71 - 71 )
Partition 38 (_72 - 72 )
Partition 39 (_73 - 73 )
Partition 40 (_74 - 74 )
Partition 41 (_75 - 75 )
Partition 42 (_76 - 76 )
Partition 43 (_77 - 77 )
Partition 44 (_78 - 78 )
Partition 45 (_79 - 79 )
Partition 46 (_80 - 80 )
Partition 47 (_81 - 81 )
Partition 48 (_82 - 82 )
Partition 49 (_83 - 83 )
Partition 50 (_84 - 84 )
Partition 51 (_85 - 85 )
Partition 52 (_86 - 86 )
Partition 53 (_87 - 87 )
Partition 54 (_88 - 88 )
Partition 55 (_89 - 89 )
Partition 56 (_90 - 90 )
Partition 57 (_91 - 91 )
Partition 58 (_92 - 92 )
Partition 59 (_93 - 93 )
Partition 60 (_94 - 94 )
Partition 61 (_95 - 95 )
Partition 62 (_96 - 96 )
Partition 63 (_97 - 97 )
Partition 64 (_98 - 98 )
Partition 65 (_99 - 99 )
Partition 66 (_100 - 100 )
Partition 67 (_101 - 101 )
Partition 68 (_102 - 102 )
Partition 69 (_103 - 103 )
Partition 70 (_104 - 104 )
Partition 71 (_105 - 105 )
Partition 72 (_106 - 106 )
Partition 73 (_107 - 107 )
Partition 74 (_108 - 108 )
Partition 75 (_109 - 109 )
Partition 76 (_110 - 110 )
Partition 77 (_111 - 111 )
Partition 78 (_112 - 112 )
Partition 79 (_113 - 113 )
Partition 80 (_114 - 114 )
Partition 81 (_115 - 115 )
Partition 82 (_116 - 116 )
Partition 83 (_117 - 117 )
Partition 84 (_118 - 118 )

monthToNum (char * s)
{
  int i;
  char * months[12];
  size_t D.3488;
  char * _1;
  int _2;
  int _3;
  size_t _5;
  size_t _21;
  size_t _24;
  char * * _26;
  char * * _27;
  char * * _28;
  char * * _29;
  char * * _30;
  char * * _31;
  char * * _32;
  char * * _33;
  char * * _34;
  char * * _35;
  char * * _36;
  char * * _37;
  char * * _38;
  unsigned long _54;
  unsigned long _55;
  unsigned long _56;
  signed char * _57;
  signed char _58;
  unsigned long _59;
  unsigned long _60;
  unsigned long _61;
  signed char * _62;
  signed char _63;
  unsigned long _64;
  unsigned long _65;
  unsigned long _66;
  signed char * _67;
  signed char _68;
  unsigned long _69;
  unsigned long _70;
  unsigned long _71;
  signed char * _72;
  signed char _73;
  unsigned long _74;
  unsigned long _75;
  unsigned long _76;
  signed char * _77;
  signed char _78;
  unsigned long _79;
  unsigned long _80;
  unsigned long _81;
  signed char * _82;
  signed char _83;
  unsigned long _84;
  unsigned long _85;
  unsigned long _86;
  signed char * _87;
  signed char _88;
  unsigned long _89;
  unsigned long _90;
  unsigned long _91;
  signed char * _92;
  signed char _93;
  unsigned long _94;
  unsigned long _95;
  unsigned long _96;
  signed char * _97;
  signed char _98;
  unsigned long _99;
  unsigned long _100;
  unsigned long _101;
  signed char * _102;
  signed char _103;
  unsigned long _104;
  unsigned long _105;
  unsigned long _106;
  signed char * _107;
  signed char _108;
  unsigned long _109;
  unsigned long _110;
  unsigned long _111;
  signed char * _112;
  signed char _113;
  unsigned long _114;
  unsigned long _115;
  unsigned long _116;
  signed char * _117;
  signed char _118;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _26 = &months[0];
  _54 = (unsigned long) _26;
  _55 = _54 >> 3;
  _56 = _55 + 2147450880;
  _57 = (signed char *) _56;
  _58 = *_57;
  if (_58 != 0)
    goto <bb 3>; [0.05%]
  else
    goto <bb 4>; [99.95%]
;;    succ:       4
;;                3

;;   basic block 3, loop depth 0
;;    pred:       2
  __builtin___asan_report_store8 (_54);
;;    succ:      

;;   basic block 4, loop depth 0
;;    pred:       2
  months[0] = "January";
  _27 = &months[1];
  _59 = (unsigned long) _27;
  _60 = _59 >> 3;
  _61 = _60 + 2147450880;
  _62 = (signed char *) _61;
  _63 = *_62;
  if (_63 != 0)
    goto <bb 5>; [0.05%]
  else
    goto <bb 6>; [99.95%]
;;    succ:       6
;;                5

;;   basic block 5, loop depth 0
;;    pred:       4
  __builtin___asan_report_store8 (_59);
;;    succ:      

;;   basic block 6, loop depth 0
;;    pred:       4
  months[1] = "February";
  _28 = &months[2];
  _64 = (unsigned long) _28;
  _65 = _64 >> 3;
  _66 = _65 + 2147450880;
  _67 = (signed char *) _66;
  _68 = *_67;
  if (_68 != 0)
    goto <bb 7>; [0.05%]
  else
    goto <bb 8>; [99.95%]
;;    succ:       8
;;                7

;;   basic block 7, loop depth 0
;;    pred:       6
  __builtin___asan_report_store8 (_64);
;;    succ:      

;;   basic block 8, loop depth 0
;;    pred:       6
  months[2] = "March";
  _29 = &months[3];
  _69 = (unsigned long) _29;
  _70 = _69 >> 3;
  _71 = _70 + 2147450880;
  _72 = (signed char *) _71;
  _73 = *_72;
  if (_73 != 0)
    goto <bb 9>; [0.05%]
  else
    goto <bb 10>; [99.95%]
;;    succ:       10
;;                9

;;   basic block 9, loop depth 0
;;    pred:       8
  __builtin___asan_report_store8 (_69);
;;    succ:      

;;   basic block 10, loop depth 0
;;    pred:       8
  months[3] = "April";
  _30 = &months[4];
  _74 = (unsigned long) _30;
  _75 = _74 >> 3;
  _76 = _75 + 2147450880;
  _77 = (signed char *) _76;
  _78 = *_77;
  if (_78 != 0)
    goto <bb 11>; [0.05%]
  else
    goto <bb 12>; [99.95%]
;;    succ:       12
;;                11

;;   basic block 11, loop depth 0
;;    pred:       10
  __builtin___asan_report_store8 (_74);
;;    succ:      

;;   basic block 12, loop depth 0
;;    pred:       10
  months[4] = "May";
  _31 = &months[5];
  _79 = (unsigned long) _31;
  _80 = _79 >> 3;
  _81 = _80 + 2147450880;
  _82 = (signed char *) _81;
  _83 = *_82;
  if (_83 != 0)
    goto <bb 13>; [0.05%]
  else
    goto <bb 14>; [99.95%]
;;    succ:       14
;;                13

;;   basic block 13, loop depth 0
;;    pred:       12
  __builtin___asan_report_store8 (_79);
;;    succ:      

;;   basic block 14, loop depth 0
;;    pred:       12
  months[5] = "June";
  _32 = &months[6];
  _84 = (unsigned long) _32;
  _85 = _84 >> 3;
  _86 = _85 + 2147450880;
  _87 = (signed char *) _86;
  _88 = *_87;
  if (_88 != 0)
    goto <bb 15>; [0.05%]
  else
    goto <bb 16>; [99.95%]
;;    succ:       16
;;                15

;;   basic block 15, loop depth 0
;;    pred:       14
  __builtin___asan_report_store8 (_84);
;;    succ:      

;;   basic block 16, loop depth 0
;;    pred:       14
  months[6] = "July";
  _33 = &months[7];
  _89 = (unsigned long) _33;
  _90 = _89 >> 3;
  _91 = _90 + 2147450880;
  _92 = (signed char *) _91;
  _93 = *_92;
  if (_93 != 0)
    goto <bb 17>; [0.05%]
  else
    goto <bb 18>; [99.95%]
;;    succ:       18
;;                17

;;   basic block 17, loop depth 0
;;    pred:       16
  __builtin___asan_report_store8 (_89);
;;    succ:      

;;   basic block 18, loop depth 0
;;    pred:       16
  months[7] = "August";
  _34 = &months[8];
  _94 = (unsigned long) _34;
  _95 = _94 >> 3;
  _96 = _95 + 2147450880;
  _97 = (signed char *) _96;
  _98 = *_97;
  if (_98 != 0)
    goto <bb 19>; [0.05%]
  else
    goto <bb 20>; [99.95%]
;;    succ:       20
;;                19

;;   basic block 19, loop depth 0
;;    pred:       18
  __builtin___asan_report_store8 (_94);
;;    succ:      

;;   basic block 20, loop depth 0
;;    pred:       18
  months[8] = "September";
  _35 = &months[9];
  _99 = (unsigned long) _35;
  _100 = _99 >> 3;
  _101 = _100 + 2147450880;
  _102 = (signed char *) _101;
  _103 = *_102;
  if (_103 != 0)
    goto <bb 21>; [0.05%]
  else
    goto <bb 22>; [99.95%]
;;    succ:       22
;;                21

;;   basic block 21, loop depth 0
;;    pred:       20
  __builtin___asan_report_store8 (_99);
;;    succ:      

;;   basic block 22, loop depth 0
;;    pred:       20
  months[9] = "October";
  _36 = &months[10];
  _104 = (unsigned long) _36;
  _105 = _104 >> 3;
  _106 = _105 + 2147450880;
  _107 = (signed char *) _106;
  _108 = *_107;
  if (_108 != 0)
    goto <bb 23>; [0.05%]
  else
    goto <bb 24>; [99.95%]
;;    succ:       24
;;                23

;;   basic block 23, loop depth 0
;;    pred:       22
  __builtin___asan_report_store8 (_104);
;;    succ:      

;;   basic block 24, loop depth 0
;;    pred:       22
  months[10] = "November";
  _37 = &months[11];
  _109 = (unsigned long) _37;
  _110 = _109 >> 3;
  _111 = _110 + 2147450880;
  _112 = (signed char *) _111;
  _113 = *_112;
  if (_113 != 0)
    goto <bb 25>; [0.05%]
  else
    goto <bb 26>; [99.95%]
;;    succ:       26
;;                25

;;   basic block 25, loop depth 0
;;    pred:       24
  __builtin___asan_report_store8 (_109);
;;    succ:      

;;   basic block 26, loop depth 0
;;    pred:       24
  months[11] = "December";
  i_20 = 0;
  goto <bb 32>; [INV]
;;    succ:       32

;;   basic block 27, loop depth 1
;;    pred:       32
  _38 = &months[i_4];
  _114 = (unsigned long) _38;
  _115 = _114 >> 3;
  _116 = _115 + 2147450880;
  _117 = (signed char *) _116;
  _118 = *_117;
  if (_118 != 0)
    goto <bb 28>; [0.05%]
  else
    goto <bb 29>; [99.95%]
;;    succ:       29
;;                28

;;   basic block 28, loop depth 0
;;    pred:       27
  __builtin___asan_report_load8 (_114);
;;    succ:      

;;   basic block 29, loop depth 1
;;    pred:       27
  _1 = months[i_4];
  _2 = strcasecmp (s_22(D), _1);
  if (_2 == 0)
    goto <bb 30>; [INV]
  else
    goto <bb 31>; [INV]
;;    succ:       30
;;                31

;;   basic block 30, loop depth 0
;;    pred:       29
  _3 = i_4 + 1;
  _24 = (size_t) _3;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 34>; [INV]
;;    succ:       34

;;   basic block 31, loop depth 1
;;    pred:       29
  i_23 = i_4 + 1;
;;    succ:       32

;;   basic block 32, loop depth 1
;;    pred:       26
;;                31
  # i_4 = PHI <i_20(26), i_23(31)>
  if (i_4 <= 11)
    goto <bb 27>; [INV]
  else
    goto <bb 33>; [INV]
;;    succ:       27
;;                33

;;   basic block 33, loop depth 0
;;    pred:       32
  _21 = 18446744073709551615;
;;    succ:       34

;;   basic block 34, loop depth 0
;;    pred:       30
;;                33
  # _5 = PHI <_24(30), _21(33)>
;;    succ:       35

;;   basic block 35, loop depth 0
;;    pred:       34
<L6>:
  return _5;
;;    succ:       EXIT

}


Partition 1: size 96 align 16
	months
Partition 0: size 4 align 4
	i_4
Flushing rzbuffer at offset -192 with: f1 f1 f1 f1 
Flushing rzbuffer at offset -64 with: f3 f3 f3 f3 

;; Generating RTL for gimple basic block 2

;; _26 = &months[0];

(insn 40 39 0 (parallel [
            (set (reg/f:DI 86 [ _26 ])
                (plus:DI (reg:DI 164)
                    (const_int -160 [0xffffffffffffff60])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":39:11 -1
     (nil))

;; _54 = (unsigned long) _26;

(insn 41 40 0 (set (reg:DI 99 [ _54 ])
        (reg/f:DI 86 [ _26 ])) "queryTAD.c":39:11 -1
     (nil))

;; _55 = _54 >> 3;

(insn 42 41 0 (parallel [
            (set (reg:DI 100 [ _55 ])
                (lshiftrt:DI (reg:DI 99 [ _54 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":39:11 -1
     (nil))

;; _56 = _55 + 2147450880;

(insn 43 42 0 (parallel [
            (set (reg:DI 101 [ _56 ])
                (plus:DI (reg:DI 100 [ _55 ])
                    (const_int 2147450880 [0x7fff8000])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":39:11 -1
     (nil))

;; _57 = (signed char *) _56;

(insn 44 43 0 (set (reg/f:DI 102 [ _57 ])
        (reg:DI 101 [ _56 ])) "queryTAD.c":39:11 -1
     (nil))

;; _58 = *_57;

(insn 45 44 0 (set (reg:QI 103 [ _58 ])
        (mem:QI (reg/f:DI 102 [ _57 ]) [10 *_57+0 S1 A8])) "queryTAD.c":39:11 -1
     (nil))

;; if (_58 != 0)

(insn 46 45 47 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 103 [ _58 ])
            (const_int 0 [0]))) "queryTAD.c":39:11 -1
     (nil))

(jump_insn 47 46 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "queryTAD.c":39:11 -1
     (nil))

;; Generating RTL for gimple basic block 3

;; __builtin___asan_report_store8 (_54);

(insn 49 48 50 (set (reg:DI 5 di)
        (reg:DI 99 [ _54 ])) "queryTAD.c":39:11 -1
     (nil))

(call_insn 50 49 51 (call (mem:QI (symbol_ref:DI ("__asan_report_store8") [flags 0x41]  <function_decl 0x7fc58eea5f00 __builtin___asan_report_store8>) [0 __builtin___asan_report_store8 S1 A8])
        (const_int 0 [0])) "queryTAD.c":39:11 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

(barrier 51 50 0)

;; Generating RTL for gimple basic block 4

;; 

(code_label 52 51 53 18 (nil) [0 uses])

(note 53 52 0 NOTE_INSN_BASIC_BLOCK)

;; months[0] = "January";

(insn 54 53 55 (set (reg/f:DI 173)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7fc58ec5eab0 *.LC2>)) "queryTAD.c":39:11 -1
     (nil))

(insn 55 54 0 (set (mem/f/c:DI (plus:DI (reg:DI 164)
                (const_int -160 [0xffffffffffffff60])) [3 months+0 S8 A64])
        (reg/f:DI 173)) "queryTAD.c":39:11 -1
     (nil))

;; _27 = &months[1];

(insn 56 55 57 (parallel [
            (set (reg:DI 174)
                (plus:DI (reg:DI 164)
                    (const_int -160 [0xffffffffffffff60])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":39:11 -1
     (nil))

(insn 57 56 0 (parallel [
            (set (reg/f:DI 87 [ _27 ])
                (plus:DI (reg:DI 174)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":39:11 -1
     (nil))

;; _59 = (unsigned long) _27;

(insn 58 57 0 (set (reg:DI 104 [ _59 ])
        (reg/f:DI 87 [ _27 ])) "queryTAD.c":39:11 -1
     (nil))

;; _60 = _59 >> 3;

(insn 59 58 0 (parallel [
            (set (reg:DI 105 [ _60 ])
                (lshiftrt:DI (reg:DI 104 [ _59 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":39:11 -1
     (nil))

;; _61 = _60 + 2147450880;

(insn 60 59 0 (parallel [
            (set (reg:DI 106 [ _61 ])
                (plus:DI (reg:DI 105 [ _60 ])
                    (const_int 2147450880 [0x7fff8000])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":39:11 -1
     (nil))

;; _62 = (signed char *) _61;

(insn 61 60 0 (set (reg/f:DI 107 [ _62 ])
        (reg:DI 106 [ _61 ])) "queryTAD.c":39:11 -1
     (nil))

;; _63 = *_62;

(insn 62 61 0 (set (reg:QI 108 [ _63 ])
        (mem:QI (reg/f:DI 107 [ _62 ]) [10 *_62+0 S1 A8])) "queryTAD.c":39:11 -1
     (nil))

;; if (_63 != 0)

(insn 63 62 64 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 108 [ _63 ])
            (const_int 0 [0]))) "queryTAD.c":39:11 -1
     (nil))

(jump_insn 64 63 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "queryTAD.c":39:11 -1
     (nil))

;; Generating RTL for gimple basic block 5

;; __builtin___asan_report_store8 (_59);

(insn 66 65 67 (set (reg:DI 5 di)
        (reg:DI 104 [ _59 ])) "queryTAD.c":39:11 -1
     (nil))

(call_insn 67 66 68 (call (mem:QI (symbol_ref:DI ("__asan_report_store8") [flags 0x41]  <function_decl 0x7fc58eea5f00 __builtin___asan_report_store8>) [0 __builtin___asan_report_store8 S1 A8])
        (const_int 0 [0])) "queryTAD.c":39:11 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

(barrier 68 67 0)

;; Generating RTL for gimple basic block 6

;; 

(code_label 69 68 70 19 (nil) [0 uses])

(note 70 69 0 NOTE_INSN_BASIC_BLOCK)

;; months[1] = "February";

(insn 71 70 72 (set (reg/f:DI 175)
        (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x7fc58ec5eb40 *.LC3>)) "queryTAD.c":39:11 -1
     (nil))

(insn 72 71 0 (set (mem/f/c:DI (plus:DI (reg:DI 164)
                (const_int -152 [0xffffffffffffff68])) [3 months+8 S8 A64])
        (reg/f:DI 175)) "queryTAD.c":39:11 -1
     (nil))

;; _28 = &months[2];

(insn 73 72 74 (parallel [
            (set (reg:DI 176)
                (plus:DI (reg:DI 164)
                    (const_int -160 [0xffffffffffffff60])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":39:11 -1
     (nil))

(insn 74 73 0 (parallel [
            (set (reg/f:DI 88 [ _28 ])
                (plus:DI (reg:DI 176)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":39:11 -1
     (nil))

;; _64 = (unsigned long) _28;

(insn 75 74 0 (set (reg:DI 109 [ _64 ])
        (reg/f:DI 88 [ _28 ])) "queryTAD.c":39:11 -1
     (nil))

;; _65 = _64 >> 3;

(insn 76 75 0 (parallel [
            (set (reg:DI 110 [ _65 ])
                (lshiftrt:DI (reg:DI 109 [ _64 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":39:11 -1
     (nil))

;; _66 = _65 + 2147450880;

(insn 77 76 0 (parallel [
            (set (reg:DI 111 [ _66 ])
                (plus:DI (reg:DI 110 [ _65 ])
                    (const_int 2147450880 [0x7fff8000])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":39:11 -1
     (nil))

;; _67 = (signed char *) _66;

(insn 78 77 0 (set (reg/f:DI 112 [ _67 ])
        (reg:DI 111 [ _66 ])) "queryTAD.c":39:11 -1
     (nil))

;; _68 = *_67;

(insn 79 78 0 (set (reg:QI 113 [ _68 ])
        (mem:QI (reg/f:DI 112 [ _67 ]) [10 *_67+0 S1 A8])) "queryTAD.c":39:11 -1
     (nil))

;; if (_68 != 0)

(insn 80 79 81 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 113 [ _68 ])
            (const_int 0 [0]))) "queryTAD.c":39:11 -1
     (nil))

(jump_insn 81 80 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "queryTAD.c":39:11 -1
     (nil))

;; Generating RTL for gimple basic block 7

;; __builtin___asan_report_store8 (_64);

(insn 83 82 84 (set (reg:DI 5 di)
        (reg:DI 109 [ _64 ])) "queryTAD.c":39:11 -1
     (nil))

(call_insn 84 83 85 (call (mem:QI (symbol_ref:DI ("__asan_report_store8") [flags 0x41]  <function_decl 0x7fc58eea5f00 __builtin___asan_report_store8>) [0 __builtin___asan_report_store8 S1 A8])
        (const_int 0 [0])) "queryTAD.c":39:11 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

(barrier 85 84 0)

;; Generating RTL for gimple basic block 8

;; 

(code_label 86 85 87 20 (nil) [0 uses])

(note 87 86 0 NOTE_INSN_BASIC_BLOCK)

;; months[2] = "March";

(insn 88 87 89 (set (reg/f:DI 177)
        (symbol_ref/f:DI ("*.LC4") [flags 0x2]  <var_decl 0x7fc58ec5ebd0 *.LC4>)) "queryTAD.c":39:11 -1
     (nil))

(insn 89 88 0 (set (mem/f/c:DI (plus:DI (reg:DI 164)
                (const_int -144 [0xffffffffffffff70])) [3 months+16 S8 A64])
        (reg/f:DI 177)) "queryTAD.c":39:11 -1
     (nil))

;; _29 = &months[3];

(insn 90 89 91 (parallel [
            (set (reg:DI 178)
                (plus:DI (reg:DI 164)
                    (const_int -160 [0xffffffffffffff60])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":39:11 -1
     (nil))

(insn 91 90 0 (parallel [
            (set (reg/f:DI 89 [ _29 ])
                (plus:DI (reg:DI 178)
                    (const_int 24 [0x18])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":39:11 -1
     (nil))

;; _69 = (unsigned long) _29;

(insn 92 91 0 (set (reg:DI 114 [ _69 ])
        (reg/f:DI 89 [ _29 ])) "queryTAD.c":39:11 -1
     (nil))

;; _70 = _69 >> 3;

(insn 93 92 0 (parallel [
            (set (reg:DI 115 [ _70 ])
                (lshiftrt:DI (reg:DI 114 [ _69 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":39:11 -1
     (nil))

;; _71 = _70 + 2147450880;

(insn 94 93 0 (parallel [
            (set (reg:DI 116 [ _71 ])
                (plus:DI (reg:DI 115 [ _70 ])
                    (const_int 2147450880 [0x7fff8000])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":39:11 -1
     (nil))

;; _72 = (signed char *) _71;

(insn 95 94 0 (set (reg/f:DI 117 [ _72 ])
        (reg:DI 116 [ _71 ])) "queryTAD.c":39:11 -1
     (nil))

;; _73 = *_72;

(insn 96 95 0 (set (reg:QI 118 [ _73 ])
        (mem:QI (reg/f:DI 117 [ _72 ]) [10 *_72+0 S1 A8])) "queryTAD.c":39:11 -1
     (nil))

;; if (_73 != 0)

(insn 97 96 98 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 118 [ _73 ])
            (const_int 0 [0]))) "queryTAD.c":39:11 -1
     (nil))

(jump_insn 98 97 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "queryTAD.c":39:11 -1
     (nil))

;; Generating RTL for gimple basic block 9

;; __builtin___asan_report_store8 (_69);

(insn 100 99 101 (set (reg:DI 5 di)
        (reg:DI 114 [ _69 ])) "queryTAD.c":39:11 -1
     (nil))

(call_insn 101 100 102 (call (mem:QI (symbol_ref:DI ("__asan_report_store8") [flags 0x41]  <function_decl 0x7fc58eea5f00 __builtin___asan_report_store8>) [0 __builtin___asan_report_store8 S1 A8])
        (const_int 0 [0])) "queryTAD.c":39:11 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

(barrier 102 101 0)

;; Generating RTL for gimple basic block 10

;; 

(code_label 103 102 104 21 (nil) [0 uses])

(note 104 103 0 NOTE_INSN_BASIC_BLOCK)

;; months[3] = "April";

(insn 105 104 106 (set (reg/f:DI 179)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7fc58ec5ec60 *.LC5>)) "queryTAD.c":39:11 -1
     (nil))

(insn 106 105 0 (set (mem/f/c:DI (plus:DI (reg:DI 164)
                (const_int -136 [0xffffffffffffff78])) [3 months+24 S8 A64])
        (reg/f:DI 179)) "queryTAD.c":39:11 -1
     (nil))

;; _30 = &months[4];

(insn 107 106 108 (parallel [
            (set (reg:DI 180)
                (plus:DI (reg:DI 164)
                    (const_int -160 [0xffffffffffffff60])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":39:11 -1
     (nil))

(insn 108 107 0 (parallel [
            (set (reg/f:DI 90 [ _30 ])
                (plus:DI (reg:DI 180)
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":39:11 -1
     (nil))

;; _74 = (unsigned long) _30;

(insn 109 108 0 (set (reg:DI 119 [ _74 ])
        (reg/f:DI 90 [ _30 ])) "queryTAD.c":39:11 -1
     (nil))

;; _75 = _74 >> 3;

(insn 110 109 0 (parallel [
            (set (reg:DI 120 [ _75 ])
                (lshiftrt:DI (reg:DI 119 [ _74 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":39:11 -1
     (nil))

;; _76 = _75 + 2147450880;

(insn 111 110 0 (parallel [
            (set (reg:DI 121 [ _76 ])
                (plus:DI (reg:DI 120 [ _75 ])
                    (const_int 2147450880 [0x7fff8000])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":39:11 -1
     (nil))

;; _77 = (signed char *) _76;

(insn 112 111 0 (set (reg/f:DI 122 [ _77 ])
        (reg:DI 121 [ _76 ])) "queryTAD.c":39:11 -1
     (nil))

;; _78 = *_77;

(insn 113 112 0 (set (reg:QI 123 [ _78 ])
        (mem:QI (reg/f:DI 122 [ _77 ]) [10 *_77+0 S1 A8])) "queryTAD.c":39:11 -1
     (nil))

;; if (_78 != 0)

(insn 114 113 115 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 123 [ _78 ])
            (const_int 0 [0]))) "queryTAD.c":39:11 -1
     (nil))

(jump_insn 115 114 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "queryTAD.c":39:11 -1
     (nil))

;; Generating RTL for gimple basic block 11

;; __builtin___asan_report_store8 (_74);

(insn 117 116 118 (set (reg:DI 5 di)
        (reg:DI 119 [ _74 ])) "queryTAD.c":39:11 -1
     (nil))

(call_insn 118 117 119 (call (mem:QI (symbol_ref:DI ("__asan_report_store8") [flags 0x41]  <function_decl 0x7fc58eea5f00 __builtin___asan_report_store8>) [0 __builtin___asan_report_store8 S1 A8])
        (const_int 0 [0])) "queryTAD.c":39:11 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

(barrier 119 118 0)

;; Generating RTL for gimple basic block 12

;; 

(code_label 120 119 121 22 (nil) [0 uses])

(note 121 120 0 NOTE_INSN_BASIC_BLOCK)

;; months[4] = "May";

(insn 122 121 123 (set (reg/f:DI 181)
        (symbol_ref/f:DI ("*.LC6") [flags 0x2]  <var_decl 0x7fc58ec5ecf0 *.LC6>)) "queryTAD.c":39:11 -1
     (nil))

(insn 123 122 0 (set (mem/f/c:DI (plus:DI (reg:DI 164)
                (const_int -128 [0xffffffffffffff80])) [3 months+32 S8 A64])
        (reg/f:DI 181)) "queryTAD.c":39:11 -1
     (nil))

;; _31 = &months[5];

(insn 124 123 125 (parallel [
            (set (reg:DI 182)
                (plus:DI (reg:DI 164)
                    (const_int -160 [0xffffffffffffff60])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":39:11 -1
     (nil))

(insn 125 124 0 (parallel [
            (set (reg/f:DI 91 [ _31 ])
                (plus:DI (reg:DI 182)
                    (const_int 40 [0x28])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":39:11 -1
     (nil))

;; _79 = (unsigned long) _31;

(insn 126 125 0 (set (reg:DI 124 [ _79 ])
        (reg/f:DI 91 [ _31 ])) "queryTAD.c":39:11 -1
     (nil))

;; _80 = _79 >> 3;

(insn 127 126 0 (parallel [
            (set (reg:DI 125 [ _80 ])
                (lshiftrt:DI (reg:DI 124 [ _79 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":39:11 -1
     (nil))

;; _81 = _80 + 2147450880;

(insn 128 127 0 (parallel [
            (set (reg:DI 126 [ _81 ])
                (plus:DI (reg:DI 125 [ _80 ])
                    (const_int 2147450880 [0x7fff8000])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":39:11 -1
     (nil))

;; _82 = (signed char *) _81;

(insn 129 128 0 (set (reg/f:DI 127 [ _82 ])
        (reg:DI 126 [ _81 ])) "queryTAD.c":39:11 -1
     (nil))

;; _83 = *_82;

(insn 130 129 0 (set (reg:QI 128 [ _83 ])
        (mem:QI (reg/f:DI 127 [ _82 ]) [10 *_82+0 S1 A8])) "queryTAD.c":39:11 -1
     (nil))

;; if (_83 != 0)

(insn 131 130 132 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 128 [ _83 ])
            (const_int 0 [0]))) "queryTAD.c":39:11 -1
     (nil))

(jump_insn 132 131 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "queryTAD.c":39:11 -1
     (nil))

;; Generating RTL for gimple basic block 13

;; __builtin___asan_report_store8 (_79);

(insn 134 133 135 (set (reg:DI 5 di)
        (reg:DI 124 [ _79 ])) "queryTAD.c":39:11 -1
     (nil))

(call_insn 135 134 136 (call (mem:QI (symbol_ref:DI ("__asan_report_store8") [flags 0x41]  <function_decl 0x7fc58eea5f00 __builtin___asan_report_store8>) [0 __builtin___asan_report_store8 S1 A8])
        (const_int 0 [0])) "queryTAD.c":39:11 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

(barrier 136 135 0)

;; Generating RTL for gimple basic block 14

;; 

(code_label 137 136 138 23 (nil) [0 uses])

(note 138 137 0 NOTE_INSN_BASIC_BLOCK)

;; months[5] = "June";

(insn 139 138 140 (set (reg/f:DI 183)
        (symbol_ref/f:DI ("*.LC7") [flags 0x2]  <var_decl 0x7fc58ec5ed80 *.LC7>)) "queryTAD.c":39:11 -1
     (nil))

(insn 140 139 0 (set (mem/f/c:DI (plus:DI (reg:DI 164)
                (const_int -120 [0xffffffffffffff88])) [3 months+40 S8 A64])
        (reg/f:DI 183)) "queryTAD.c":39:11 -1
     (nil))

;; _32 = &months[6];

(insn 141 140 142 (parallel [
            (set (reg:DI 184)
                (plus:DI (reg:DI 164)
                    (const_int -160 [0xffffffffffffff60])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":39:11 -1
     (nil))

(insn 142 141 0 (parallel [
            (set (reg/f:DI 92 [ _32 ])
                (plus:DI (reg:DI 184)
                    (const_int 48 [0x30])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":39:11 -1
     (nil))

;; _84 = (unsigned long) _32;

(insn 143 142 0 (set (reg:DI 129 [ _84 ])
        (reg/f:DI 92 [ _32 ])) "queryTAD.c":39:11 -1
     (nil))

;; _85 = _84 >> 3;

(insn 144 143 0 (parallel [
            (set (reg:DI 130 [ _85 ])
                (lshiftrt:DI (reg:DI 129 [ _84 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":39:11 -1
     (nil))

;; _86 = _85 + 2147450880;

(insn 145 144 0 (parallel [
            (set (reg:DI 131 [ _86 ])
                (plus:DI (reg:DI 130 [ _85 ])
                    (const_int 2147450880 [0x7fff8000])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":39:11 -1
     (nil))

;; _87 = (signed char *) _86;

(insn 146 145 0 (set (reg/f:DI 132 [ _87 ])
        (reg:DI 131 [ _86 ])) "queryTAD.c":39:11 -1
     (nil))

;; _88 = *_87;

(insn 147 146 0 (set (reg:QI 133 [ _88 ])
        (mem:QI (reg/f:DI 132 [ _87 ]) [10 *_87+0 S1 A8])) "queryTAD.c":39:11 -1
     (nil))

;; if (_88 != 0)

(insn 148 147 149 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 133 [ _88 ])
            (const_int 0 [0]))) "queryTAD.c":39:11 -1
     (nil))

(jump_insn 149 148 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "queryTAD.c":39:11 -1
     (nil))

;; Generating RTL for gimple basic block 15

;; __builtin___asan_report_store8 (_84);

(insn 151 150 152 (set (reg:DI 5 di)
        (reg:DI 129 [ _84 ])) "queryTAD.c":39:11 -1
     (nil))

(call_insn 152 151 153 (call (mem:QI (symbol_ref:DI ("__asan_report_store8") [flags 0x41]  <function_decl 0x7fc58eea5f00 __builtin___asan_report_store8>) [0 __builtin___asan_report_store8 S1 A8])
        (const_int 0 [0])) "queryTAD.c":39:11 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

(barrier 153 152 0)

;; Generating RTL for gimple basic block 16

;; 

(code_label 154 153 155 24 (nil) [0 uses])

(note 155 154 0 NOTE_INSN_BASIC_BLOCK)

;; months[6] = "July";

(insn 156 155 157 (set (reg/f:DI 185)
        (symbol_ref/f:DI ("*.LC8") [flags 0x2]  <var_decl 0x7fc58ec5ee10 *.LC8>)) "queryTAD.c":39:11 -1
     (nil))

(insn 157 156 0 (set (mem/f/c:DI (plus:DI (reg:DI 164)
                (const_int -112 [0xffffffffffffff90])) [3 months+48 S8 A64])
        (reg/f:DI 185)) "queryTAD.c":39:11 -1
     (nil))

;; _33 = &months[7];

(insn 158 157 159 (parallel [
            (set (reg:DI 186)
                (plus:DI (reg:DI 164)
                    (const_int -160 [0xffffffffffffff60])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":39:11 -1
     (nil))

(insn 159 158 0 (parallel [
            (set (reg/f:DI 93 [ _33 ])
                (plus:DI (reg:DI 186)
                    (const_int 56 [0x38])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":39:11 -1
     (nil))

;; _89 = (unsigned long) _33;

(insn 160 159 0 (set (reg:DI 134 [ _89 ])
        (reg/f:DI 93 [ _33 ])) "queryTAD.c":39:11 -1
     (nil))

;; _90 = _89 >> 3;

(insn 161 160 0 (parallel [
            (set (reg:DI 135 [ _90 ])
                (lshiftrt:DI (reg:DI 134 [ _89 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":39:11 -1
     (nil))

;; _91 = _90 + 2147450880;

(insn 162 161 0 (parallel [
            (set (reg:DI 136 [ _91 ])
                (plus:DI (reg:DI 135 [ _90 ])
                    (const_int 2147450880 [0x7fff8000])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":39:11 -1
     (nil))

;; _92 = (signed char *) _91;

(insn 163 162 0 (set (reg/f:DI 137 [ _92 ])
        (reg:DI 136 [ _91 ])) "queryTAD.c":39:11 -1
     (nil))

;; _93 = *_92;

(insn 164 163 0 (set (reg:QI 138 [ _93 ])
        (mem:QI (reg/f:DI 137 [ _92 ]) [10 *_92+0 S1 A8])) "queryTAD.c":39:11 -1
     (nil))

;; if (_93 != 0)

(insn 165 164 166 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 138 [ _93 ])
            (const_int 0 [0]))) "queryTAD.c":39:11 -1
     (nil))

(jump_insn 166 165 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "queryTAD.c":39:11 -1
     (nil))

;; Generating RTL for gimple basic block 17

;; __builtin___asan_report_store8 (_89);

(insn 168 167 169 (set (reg:DI 5 di)
        (reg:DI 134 [ _89 ])) "queryTAD.c":39:11 -1
     (nil))

(call_insn 169 168 170 (call (mem:QI (symbol_ref:DI ("__asan_report_store8") [flags 0x41]  <function_decl 0x7fc58eea5f00 __builtin___asan_report_store8>) [0 __builtin___asan_report_store8 S1 A8])
        (const_int 0 [0])) "queryTAD.c":39:11 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

(barrier 170 169 0)

;; Generating RTL for gimple basic block 18

;; 

(code_label 171 170 172 25 (nil) [0 uses])

(note 172 171 0 NOTE_INSN_BASIC_BLOCK)

;; months[7] = "August";

(insn 173 172 174 (set (reg/f:DI 187)
        (symbol_ref/f:DI ("*.LC9") [flags 0x2]  <var_decl 0x7fc58ec5eea0 *.LC9>)) "queryTAD.c":39:11 -1
     (nil))

(insn 174 173 0 (set (mem/f/c:DI (plus:DI (reg:DI 164)
                (const_int -104 [0xffffffffffffff98])) [3 months+56 S8 A64])
        (reg/f:DI 187)) "queryTAD.c":39:11 -1
     (nil))

;; _34 = &months[8];

(insn 175 174 176 (parallel [
            (set (reg:DI 188)
                (plus:DI (reg:DI 164)
                    (const_int -160 [0xffffffffffffff60])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":39:11 -1
     (nil))

(insn 176 175 0 (parallel [
            (set (reg/f:DI 94 [ _34 ])
                (plus:DI (reg:DI 188)
                    (const_int 64 [0x40])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":39:11 -1
     (nil))

;; _94 = (unsigned long) _34;

(insn 177 176 0 (set (reg:DI 139 [ _94 ])
        (reg/f:DI 94 [ _34 ])) "queryTAD.c":39:11 -1
     (nil))

;; _95 = _94 >> 3;

(insn 178 177 0 (parallel [
            (set (reg:DI 140 [ _95 ])
                (lshiftrt:DI (reg:DI 139 [ _94 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":39:11 -1
     (nil))

;; _96 = _95 + 2147450880;

(insn 179 178 0 (parallel [
            (set (reg:DI 141 [ _96 ])
                (plus:DI (reg:DI 140 [ _95 ])
                    (const_int 2147450880 [0x7fff8000])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":39:11 -1
     (nil))

;; _97 = (signed char *) _96;

(insn 180 179 0 (set (reg/f:DI 142 [ _97 ])
        (reg:DI 141 [ _96 ])) "queryTAD.c":39:11 -1
     (nil))

;; _98 = *_97;

(insn 181 180 0 (set (reg:QI 143 [ _98 ])
        (mem:QI (reg/f:DI 142 [ _97 ]) [10 *_97+0 S1 A8])) "queryTAD.c":39:11 -1
     (nil))

;; if (_98 != 0)

(insn 182 181 183 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 143 [ _98 ])
            (const_int 0 [0]))) "queryTAD.c":39:11 -1
     (nil))

(jump_insn 183 182 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "queryTAD.c":39:11 -1
     (nil))

;; Generating RTL for gimple basic block 19

;; __builtin___asan_report_store8 (_94);

(insn 185 184 186 (set (reg:DI 5 di)
        (reg:DI 139 [ _94 ])) "queryTAD.c":39:11 -1
     (nil))

(call_insn 186 185 187 (call (mem:QI (symbol_ref:DI ("__asan_report_store8") [flags 0x41]  <function_decl 0x7fc58eea5f00 __builtin___asan_report_store8>) [0 __builtin___asan_report_store8 S1 A8])
        (const_int 0 [0])) "queryTAD.c":39:11 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

(barrier 187 186 0)

;; Generating RTL for gimple basic block 20

;; 

(code_label 188 187 189 26 (nil) [0 uses])

(note 189 188 0 NOTE_INSN_BASIC_BLOCK)

;; months[8] = "September";

(insn 190 189 191 (set (reg/f:DI 189)
        (symbol_ref/f:DI ("*.LC10") [flags 0x2]  <var_decl 0x7fc58ec5ef30 *.LC10>)) "queryTAD.c":39:11 -1
     (nil))

(insn 191 190 0 (set (mem/f/c:DI (plus:DI (reg:DI 164)
                (const_int -96 [0xffffffffffffffa0])) [3 months+64 S8 A64])
        (reg/f:DI 189)) "queryTAD.c":39:11 -1
     (nil))

;; _35 = &months[9];

(insn 192 191 193 (parallel [
            (set (reg:DI 190)
                (plus:DI (reg:DI 164)
                    (const_int -160 [0xffffffffffffff60])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":39:11 -1
     (nil))

(insn 193 192 0 (parallel [
            (set (reg/f:DI 95 [ _35 ])
                (plus:DI (reg:DI 190)
                    (const_int 72 [0x48])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":39:11 -1
     (nil))

;; _99 = (unsigned long) _35;

(insn 194 193 0 (set (reg:DI 144 [ _99 ])
        (reg/f:DI 95 [ _35 ])) "queryTAD.c":39:11 -1
     (nil))

;; _100 = _99 >> 3;

(insn 195 194 0 (parallel [
            (set (reg:DI 145 [ _100 ])
                (lshiftrt:DI (reg:DI 144 [ _99 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":39:11 -1
     (nil))

;; _101 = _100 + 2147450880;

(insn 196 195 0 (parallel [
            (set (reg:DI 146 [ _101 ])
                (plus:DI (reg:DI 145 [ _100 ])
                    (const_int 2147450880 [0x7fff8000])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":39:11 -1
     (nil))

;; _102 = (signed char *) _101;

(insn 197 196 0 (set (reg/f:DI 147 [ _102 ])
        (reg:DI 146 [ _101 ])) "queryTAD.c":39:11 -1
     (nil))

;; _103 = *_102;

(insn 198 197 0 (set (reg:QI 148 [ _103 ])
        (mem:QI (reg/f:DI 147 [ _102 ]) [10 *_102+0 S1 A8])) "queryTAD.c":39:11 -1
     (nil))

;; if (_103 != 0)

(insn 199 198 200 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 148 [ _103 ])
            (const_int 0 [0]))) "queryTAD.c":39:11 -1
     (nil))

(jump_insn 200 199 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "queryTAD.c":39:11 -1
     (nil))

;; Generating RTL for gimple basic block 21

;; __builtin___asan_report_store8 (_99);

(insn 202 201 203 (set (reg:DI 5 di)
        (reg:DI 144 [ _99 ])) "queryTAD.c":39:11 -1
     (nil))

(call_insn 203 202 204 (call (mem:QI (symbol_ref:DI ("__asan_report_store8") [flags 0x41]  <function_decl 0x7fc58eea5f00 __builtin___asan_report_store8>) [0 __builtin___asan_report_store8 S1 A8])
        (const_int 0 [0])) "queryTAD.c":39:11 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

(barrier 204 203 0)

;; Generating RTL for gimple basic block 22

;; 

(code_label 205 204 206 27 (nil) [0 uses])

(note 206 205 0 NOTE_INSN_BASIC_BLOCK)

;; months[9] = "October";

(insn 207 206 208 (set (reg/f:DI 191)
        (symbol_ref/f:DI ("*.LC11") [flags 0x2]  <var_decl 0x7fc58ec72000 *.LC11>)) "queryTAD.c":39:11 -1
     (nil))

(insn 208 207 0 (set (mem/f/c:DI (plus:DI (reg:DI 164)
                (const_int -88 [0xffffffffffffffa8])) [3 months+72 S8 A64])
        (reg/f:DI 191)) "queryTAD.c":39:11 -1
     (nil))

;; _36 = &months[10];

(insn 209 208 210 (parallel [
            (set (reg:DI 192)
                (plus:DI (reg:DI 164)
                    (const_int -160 [0xffffffffffffff60])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":39:11 -1
     (nil))

(insn 210 209 0 (parallel [
            (set (reg/f:DI 96 [ _36 ])
                (plus:DI (reg:DI 192)
                    (const_int 80 [0x50])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":39:11 -1
     (nil))

;; _104 = (unsigned long) _36;

(insn 211 210 0 (set (reg:DI 149 [ _104 ])
        (reg/f:DI 96 [ _36 ])) "queryTAD.c":39:11 -1
     (nil))

;; _105 = _104 >> 3;

(insn 212 211 0 (parallel [
            (set (reg:DI 150 [ _105 ])
                (lshiftrt:DI (reg:DI 149 [ _104 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":39:11 -1
     (nil))

;; _106 = _105 + 2147450880;

(insn 213 212 0 (parallel [
            (set (reg:DI 151 [ _106 ])
                (plus:DI (reg:DI 150 [ _105 ])
                    (const_int 2147450880 [0x7fff8000])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":39:11 -1
     (nil))

;; _107 = (signed char *) _106;

(insn 214 213 0 (set (reg/f:DI 152 [ _107 ])
        (reg:DI 151 [ _106 ])) "queryTAD.c":39:11 -1
     (nil))

;; _108 = *_107;

(insn 215 214 0 (set (reg:QI 153 [ _108 ])
        (mem:QI (reg/f:DI 152 [ _107 ]) [10 *_107+0 S1 A8])) "queryTAD.c":39:11 -1
     (nil))

;; if (_108 != 0)

(insn 216 215 217 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 153 [ _108 ])
            (const_int 0 [0]))) "queryTAD.c":39:11 -1
     (nil))

(jump_insn 217 216 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "queryTAD.c":39:11 -1
     (nil))

;; Generating RTL for gimple basic block 23

;; __builtin___asan_report_store8 (_104);

(insn 219 218 220 (set (reg:DI 5 di)
        (reg:DI 149 [ _104 ])) "queryTAD.c":39:11 -1
     (nil))

(call_insn 220 219 221 (call (mem:QI (symbol_ref:DI ("__asan_report_store8") [flags 0x41]  <function_decl 0x7fc58eea5f00 __builtin___asan_report_store8>) [0 __builtin___asan_report_store8 S1 A8])
        (const_int 0 [0])) "queryTAD.c":39:11 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

(barrier 221 220 0)

;; Generating RTL for gimple basic block 24

;; 

(code_label 222 221 223 28 (nil) [0 uses])

(note 223 222 0 NOTE_INSN_BASIC_BLOCK)

;; months[10] = "November";

(insn 224 223 225 (set (reg/f:DI 193)
        (symbol_ref/f:DI ("*.LC12") [flags 0x2]  <var_decl 0x7fc58ec72090 *.LC12>)) "queryTAD.c":39:11 -1
     (nil))

(insn 225 224 0 (set (mem/f/c:DI (plus:DI (reg:DI 164)
                (const_int -80 [0xffffffffffffffb0])) [3 months+80 S8 A64])
        (reg/f:DI 193)) "queryTAD.c":39:11 -1
     (nil))

;; _37 = &months[11];

(insn 226 225 227 (parallel [
            (set (reg:DI 194)
                (plus:DI (reg:DI 164)
                    (const_int -160 [0xffffffffffffff60])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":39:11 -1
     (nil))

(insn 227 226 0 (parallel [
            (set (reg/f:DI 97 [ _37 ])
                (plus:DI (reg:DI 194)
                    (const_int 88 [0x58])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":39:11 -1
     (nil))

;; _109 = (unsigned long) _37;

(insn 228 227 0 (set (reg:DI 154 [ _109 ])
        (reg/f:DI 97 [ _37 ])) "queryTAD.c":39:11 -1
     (nil))

;; _110 = _109 >> 3;

(insn 229 228 0 (parallel [
            (set (reg:DI 155 [ _110 ])
                (lshiftrt:DI (reg:DI 154 [ _109 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":39:11 -1
     (nil))

;; _111 = _110 + 2147450880;

(insn 230 229 0 (parallel [
            (set (reg:DI 156 [ _111 ])
                (plus:DI (reg:DI 155 [ _110 ])
                    (const_int 2147450880 [0x7fff8000])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":39:11 -1
     (nil))

;; _112 = (signed char *) _111;

(insn 231 230 0 (set (reg/f:DI 157 [ _112 ])
        (reg:DI 156 [ _111 ])) "queryTAD.c":39:11 -1
     (nil))

;; _113 = *_112;

(insn 232 231 0 (set (reg:QI 158 [ _113 ])
        (mem:QI (reg/f:DI 157 [ _112 ]) [10 *_112+0 S1 A8])) "queryTAD.c":39:11 -1
     (nil))

;; if (_113 != 0)

(insn 233 232 234 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 158 [ _113 ])
            (const_int 0 [0]))) "queryTAD.c":39:11 -1
     (nil))

(jump_insn 234 233 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "queryTAD.c":39:11 -1
     (nil))

;; Generating RTL for gimple basic block 25

;; __builtin___asan_report_store8 (_109);

(insn 236 235 237 (set (reg:DI 5 di)
        (reg:DI 154 [ _109 ])) "queryTAD.c":39:11 -1
     (nil))

(call_insn 237 236 238 (call (mem:QI (symbol_ref:DI ("__asan_report_store8") [flags 0x41]  <function_decl 0x7fc58eea5f00 __builtin___asan_report_store8>) [0 __builtin___asan_report_store8 S1 A8])
        (const_int 0 [0])) "queryTAD.c":39:11 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

(barrier 238 237 0)

;; Generating RTL for gimple basic block 26

;; 

(code_label 239 238 240 29 (nil) [0 uses])

(note 240 239 0 NOTE_INSN_BASIC_BLOCK)

;; months[11] = "December";

(insn 241 240 242 (set (reg/f:DI 195)
        (symbol_ref/f:DI ("*.LC13") [flags 0x2]  <var_decl 0x7fc58ec72120 *.LC13>)) "queryTAD.c":39:11 -1
     (nil))

(insn 242 241 0 (set (mem/f/c:DI (plus:DI (reg:DI 164)
                (const_int -72 [0xffffffffffffffb8])) [3 months+88 S8 A64])
        (reg/f:DI 195)) "queryTAD.c":39:11 -1
     (nil))

;; i_20 = 0;

(insn 243 242 0 (set (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -196 [0xffffffffffffff3c])) [13 i+0 S4 A32])
        (const_int 0 [0])) "queryTAD.c":40:14 -1
     (nil))

;; Generating RTL for gimple basic block 27

;; _38 = &months[i_4];

(insn 247 246 248 (parallel [
            (set (reg:DI 196)
                (plus:DI (reg:DI 164)
                    (const_int -160 [0xffffffffffffff60])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":41:33 -1
     (nil))

(insn 248 247 249 (set (reg:SI 198)
        (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -196 [0xffffffffffffff3c])) [13 i+0 S4 A32])) "queryTAD.c":41:33 -1
     (nil))

(insn 249 248 250 (set (reg:DI 197)
        (sign_extend:DI (reg:SI 198))) "queryTAD.c":41:33 -1
     (nil))

(insn 250 249 251 (parallel [
            (set (reg:DI 199)
                (ashift:DI (reg:DI 197)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":41:33 -1
     (nil))

(insn 251 250 0 (parallel [
            (set (reg/f:DI 98 [ _38 ])
                (plus:DI (reg:DI 196)
                    (reg:DI 199)))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":41:33 -1
     (nil))

;; _114 = (unsigned long) _38;

(insn 252 251 0 (set (reg:DI 159 [ _114 ])
        (reg/f:DI 98 [ _38 ])) "queryTAD.c":41:33 -1
     (nil))

;; _115 = _114 >> 3;

(insn 253 252 0 (parallel [
            (set (reg:DI 160 [ _115 ])
                (lshiftrt:DI (reg:DI 159 [ _114 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":41:33 -1
     (nil))

;; _116 = _115 + 2147450880;

(insn 254 253 0 (parallel [
            (set (reg:DI 161 [ _116 ])
                (plus:DI (reg:DI 160 [ _115 ])
                    (const_int 2147450880 [0x7fff8000])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":41:33 -1
     (nil))

;; _117 = (signed char *) _116;

(insn 255 254 0 (set (reg/f:DI 162 [ _117 ])
        (reg:DI 161 [ _116 ])) "queryTAD.c":41:33 -1
     (nil))

;; _118 = *_117;

(insn 256 255 0 (set (reg:QI 163 [ _118 ])
        (mem:QI (reg/f:DI 162 [ _117 ]) [10 *_117+0 S1 A8])) "queryTAD.c":41:33 -1
     (nil))

;; if (_118 != 0)

(insn 257 256 258 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 163 [ _118 ])
            (const_int 0 [0]))) "queryTAD.c":41:33 -1
     (nil))

(jump_insn 258 257 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "queryTAD.c":41:33 -1
     (nil))

;; Generating RTL for gimple basic block 28

;; __builtin___asan_report_load8 (_114);

(insn 260 259 261 (set (reg:DI 5 di)
        (reg:DI 159 [ _114 ])) "queryTAD.c":41:33 -1
     (nil))

(call_insn 261 260 262 (call (mem:QI (symbol_ref:DI ("__asan_report_load8") [flags 0x41]  <function_decl 0x7fc58eea5900 __builtin___asan_report_load8>) [0 __builtin___asan_report_load8 S1 A8])
        (const_int 0 [0])) "queryTAD.c":41:33 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

(barrier 262 261 0)

;; Generating RTL for gimple basic block 29

;; 

(code_label 263 262 264 31 (nil) [0 uses])

(note 264 263 0 NOTE_INSN_BASIC_BLOCK)

;; _1 = months[i_4];

(insn 265 264 266 (set (reg:SI 201)
        (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -196 [0xffffffffffffff3c])) [13 i+0 S4 A32])) "queryTAD.c":41:33 -1
     (nil))

(insn 266 265 267 (set (reg:DI 200)
        (sign_extend:DI (reg:SI 201))) "queryTAD.c":41:33 -1
     (nil))

(insn 267 266 0 (set (reg/f:DI 82 [ _1 ])
        (mem/f:DI (plus:DI (plus:DI (mult:DI (reg:DI 200)
                        (const_int 8 [0x8]))
                    (reg:DI 164))
                (const_int -160 [0xffffffffffffff60])) [3 months S8 A64])) "queryTAD.c":41:33 -1
     (nil))

;; _2 = strcasecmp (s_22(D), _1);

(insn 268 267 269 (set (reg:DI 202)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -216 [0xffffffffffffff28])) [3 s+0 S8 A64])) "queryTAD.c":41:13 -1
     (nil))

(insn 269 268 270 (set (reg:DI 4 si)
        (reg/f:DI 82 [ _1 ])) "queryTAD.c":41:13 -1
     (nil))

(insn 270 269 271 (set (reg:DI 5 di)
        (reg:DI 202)) "queryTAD.c":41:13 -1
     (nil))

(call_insn/i 271 270 272 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcasecmp") [flags 0x41]  <function_decl 0x7fc58ebf9400 strcasecmp>) [0 strcasecmp S1 A8])
            (const_int 0 [0]))) "queryTAD.c":41:13 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))

(insn 272 271 0 (set (reg:SI 83 [ _2 ])
        (reg:SI 0 ax)) "queryTAD.c":41:13 -1
     (nil))

;; if (_2 == 0)

(insn 273 272 274 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 83 [ _2 ])
            (const_int 0 [0]))) "queryTAD.c":41:12 -1
     (nil))

(jump_insn 274 273 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "queryTAD.c":41:12 -1
     (nil))

;; Generating RTL for gimple basic block 30

;; _3 = i_4 + 1;

(insn 276 275 277 (set (reg:SI 203)
        (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -196 [0xffffffffffffff3c])) [13 i+0 S4 A32])) "queryTAD.c":42:21 -1
     (nil))

(insn 277 276 0 (parallel [
            (set (reg:SI 84 [ _3 ])
                (plus:SI (reg:SI 203)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":42:21 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -196 [0xffffffffffffff3c])) [13 i+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))

;; _24 = (size_t) _3;

(insn 278 277 0 (set (reg:DI 85 [ _5 ])
        (sign_extend:DI (reg:SI 84 [ _3 ]))) "queryTAD.c":42:21 -1
     (nil))

;; // predicted unlikely by early return (on trees) predictor.

(nil)

;; Generating RTL for gimple basic block 31

;; 

(code_label 281 280 282 32 (nil) [0 uses])

(note 282 281 0 NOTE_INSN_BASIC_BLOCK)

;; i_23 = i_4 + 1;

(insn 283 282 0 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                        (const_int -196 [0xffffffffffffff3c])) [13 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                            (const_int -196 [0xffffffffffffff3c])) [13 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":40:26 -1
     (nil))

;; Generating RTL for gimple basic block 32

;; 

(code_label 284 283 285 30 (nil) [0 uses])

(note 285 284 0 NOTE_INSN_BASIC_BLOCK)

;; if (i_4 <= 11)

(insn 289 285 290 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -196 [0xffffffffffffff3c])) [13 i+0 S4 A32])
            (const_int 11 [0xb]))) "queryTAD.c":40:5 -1
     (nil))

(jump_insn 290 289 0 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 286)
            (pc))) "queryTAD.c":40:5 -1
     (nil))

;; Generating RTL for gimple basic block 33

;; _21 = 18446744073709551615;

(insn 292 291 0 (set (reg:DI 85 [ _5 ])
        (const_int -1 [0xffffffffffffffff])) "queryTAD.c":45:12 -1
     (nil))

;; Generating RTL for gimple basic block 34

;; 

(code_label 293 292 294 33 (nil) [0 uses])

(note 294 293 0 NOTE_INSN_BASIC_BLOCK)

;; Generating RTL for gimple basic block 35

;; <L6>:

(code_label 295 294 296 35 (nil) [0 uses])

(note 296 295 0 NOTE_INSN_BASIC_BLOCK)

;; return _5;

(insn 297 296 298 (set (reg:DI 172 [ <retval> ])
        (reg:DI 85 [ _5 ])) -1
     (nil))

(jump_insn 298 297 299 (set (pc)
        (label_ref 0)) -1
     (nil))

(barrier 299 298 0)


try_optimize_cfg iteration 1

Merging block 6 into block 5...
Merged blocks 5 and 6.
Merged 5 and 6 without moving.
Redirecting jump 279 from 38 to 39.
Merging block 38 into block 37...
Merged blocks 37 and 38.
Merged 37 and 38 without moving.
Removing jump 298.
Merging block 40 into block 39...
Merged blocks 39 and 40.
Merged 39 and 40 without moving.


try_optimize_cfg iteration 2

fix_loop_structure: fixing up loops for function


;;
;; Full RTL generated for this function:
;;
(note 1 0 38 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
(note 38 1 35 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 35 38 2 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -216 [0xffffffffffffff28])) [3 s+0 S8 A64])
        (reg:DI 5 di [ s ])) "queryTAD.c":38:29 -1
     (nil))
(insn 2 35 3 2 (parallel [
            (set (reg:DI 165)
                (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -192 [0xffffffffffffff40])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":38:29 -1
     (nil))
(insn 3 2 4 2 (set (reg:DI 166)
        (reg:DI 165)) "queryTAD.c":38:29 -1
     (nil))
(insn 4 3 5 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (symbol_ref:DI ("__asan_option_detect_stack_use_after_return") [flags 0x40]  <var_decl 0x7fc58ec5e900 __asan_option_detect_stack_use_after_return>) [13 __asan_option_detect_stack_use_after_return+0 S4 A32])
            (const_int 0 [0]))) "queryTAD.c":38:29 -1
     (nil))
(jump_insn 5 4 309 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 11)
            (pc))) "queryTAD.c":38:29 -1
     (nil)
 -> 11)
;;  succ:       5
;;              3 (FALLTHRU)

;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
(note 309 5 6 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 6 309 7 3 (set (reg:DI 5 di)
        (const_int 160 [0xa0])) "queryTAD.c":38:29 -1
     (nil))
(call_insn 7 6 8 3 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__asan_stack_malloc_2") [flags 0x41]) [0  S1 A8])
            (const_int 0 [0]))) "queryTAD.c":38:29 -1
     (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
        (nil))
    (expr_list (use (reg:DI 5 di))
        (nil)))
(insn 8 7 9 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 0 ax)
            (const_int 0 [0]))) "queryTAD.c":38:29 -1
     (nil))
(jump_insn 9 8 310 3 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 11)
            (pc))) "queryTAD.c":38:29 -1
     (nil)
 -> 11)
;;  succ:       5
;;              4 (FALLTHRU)

;; basic block 4, loop depth 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3 (FALLTHRU)
(note 310 9 10 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 10 310 11 4 (set (reg:DI 165)
        (reg:DI 0 ax)) "queryTAD.c":38:29 -1
     (nil))
;;  succ:       5 (FALLTHRU)

;; basic block 5, loop depth 0, maybe hot
;;  prev block 4, next block 7, flags: (NEW, REACHABLE, RTL)
;;  pred:       2
;;              3
;;              4 (FALLTHRU)
(code_label 11 10 311 5 14 (nil) [2 uses])
(note 311 11 12 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 12 311 13 5 (parallel [
            (set (reg:DI 167)
                (plus:DI (reg:DI 165)
                    (const_int 192 [0xc0])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":38:29 -1
     (nil))
(insn 13 12 14 5 (set (reg:DI 164)
        (reg:DI 167)) "queryTAD.c":38:29 -1
     (nil))
(insn 14 13 15 5 (set (mem:DI (reg:DI 165) [0  S8 A8])
        (const_int 1102416563 [0x41b58ab3])) "queryTAD.c":38:29 -1
     (nil))
(insn 15 14 16 5 (set (reg/f:DI 168)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7fc58ec5e990 *.LC1>)) "queryTAD.c":38:29 -1
     (nil))
(insn 16 15 17 5 (set (mem:DI (plus:DI (reg:DI 165)
                (const_int 8 [0x8])) [0  S8 A8])
        (reg/f:DI 168)) "queryTAD.c":38:29 -1
     (nil))
(insn 17 16 18 5 (set (reg/f:DI 169)
        (symbol_ref:DI ("*.LASANPC3") [flags 0x2]  <var_decl 0x7fc58ec5ea20 *.LASANPC3>)) "queryTAD.c":38:29 -1
     (nil))
(insn 18 17 19 5 (set (mem:DI (plus:DI (reg:DI 165)
                (const_int 16 [0x10])) [0  S8 A8])
        (reg/f:DI 169)) "queryTAD.c":38:29 -1
     (nil))
(insn 19 18 20 5 (parallel [
            (set (reg:DI 170)
                (lshiftrt:DI (reg:DI 165)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":38:29 -1
     (nil))
(insn 20 19 21 5 (set (mem:SI (plus:DI (reg:DI 170)
                (const_int 2147450880 [0x7fff8000])) [10  S4 A8])
        (const_int -235802127 [0xfffffffff1f1f1f1])) "queryTAD.c":38:29 -1
     (nil))
(insn 21 20 36 5 (set (mem:SI (plus:DI (reg:DI 170)
                (const_int 2147450896 [0x7fff8010])) [10  S4 A8])
        (const_int -202116109 [0xfffffffff3f3f3f3])) "queryTAD.c":38:29 -1
     (nil))
(note 36 21 37 5 NOTE_INSN_FUNCTION_BEG)
(insn 37 36 40 5 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [12 D.3543+0 S8 A64])
                (unspec:DI [
                        (mem/v/f:DI (const_int 40 [0x28]) [0 MEM[(<address-space-1> long unsigned int *)40B]+0 S8 A64 AS1])
                    ] UNSPEC_SP_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":38:29 -1
     (nil))
(insn 40 37 41 5 (parallel [
            (set (reg/f:DI 86 [ _26 ])
                (plus:DI (reg:DI 164)
                    (const_int -160 [0xffffffffffffff60])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":39:11 -1
     (nil))
(insn 41 40 42 5 (set (reg:DI 99 [ _54 ])
        (reg/f:DI 86 [ _26 ])) "queryTAD.c":39:11 -1
     (nil))
(insn 42 41 43 5 (parallel [
            (set (reg:DI 100 [ _55 ])
                (lshiftrt:DI (reg:DI 99 [ _54 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":39:11 -1
     (nil))
(insn 43 42 44 5 (parallel [
            (set (reg:DI 101 [ _56 ])
                (plus:DI (reg:DI 100 [ _55 ])
                    (const_int 2147450880 [0x7fff8000])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":39:11 -1
     (nil))
(insn 44 43 45 5 (set (reg/f:DI 102 [ _57 ])
        (reg:DI 101 [ _56 ])) "queryTAD.c":39:11 -1
     (nil))
(insn 45 44 46 5 (set (reg:QI 103 [ _58 ])
        (mem:QI (reg/f:DI 102 [ _57 ]) [10 *_57+0 S1 A8])) "queryTAD.c":39:11 -1
     (nil))
(insn 46 45 47 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 103 [ _58 ])
            (const_int 0 [0]))) "queryTAD.c":39:11 -1
     (nil))
(jump_insn 47 46 48 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 52)
            (pc))) "queryTAD.c":39:11 -1
     (nil)
 -> 52)
;;  succ:       8 [100.0% (guessed)] 
;;              7 [0.0% (guessed)]  (FALLTHRU)

;; basic block 7, loop depth 0, maybe hot
;;  prev block 5, next block 8, flags: (NEW, REACHABLE, RTL)
;;  pred:       5 [0.0% (guessed)]  (FALLTHRU)
(note 48 47 49 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 49 48 50 7 (set (reg:DI 5 di)
        (reg:DI 99 [ _54 ])) "queryTAD.c":39:11 -1
     (nil))
(call_insn 50 49 51 7 (call (mem:QI (symbol_ref:DI ("__asan_report_store8") [flags 0x41]  <function_decl 0x7fc58eea5f00 __builtin___asan_report_store8>) [0 __builtin___asan_report_store8 S1 A8])
        (const_int 0 [0])) "queryTAD.c":39:11 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:      

(barrier 51 50 52)
;; basic block 8, loop depth 0, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL)
;;  pred:       5 [100.0% (guessed)] 
(code_label 52 51 53 8 18 (nil) [1 uses])
(note 53 52 54 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 54 53 55 8 (set (reg/f:DI 173)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7fc58ec5eab0 *.LC2>)) "queryTAD.c":39:11 -1
     (nil))
(insn 55 54 56 8 (set (mem/f/c:DI (plus:DI (reg:DI 164)
                (const_int -160 [0xffffffffffffff60])) [3 months+0 S8 A64])
        (reg/f:DI 173)) "queryTAD.c":39:11 -1
     (nil))
(insn 56 55 57 8 (parallel [
            (set (reg:DI 174)
                (plus:DI (reg:DI 164)
                    (const_int -160 [0xffffffffffffff60])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":39:11 -1
     (nil))
(insn 57 56 58 8 (parallel [
            (set (reg/f:DI 87 [ _27 ])
                (plus:DI (reg:DI 174)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":39:11 -1
     (nil))
(insn 58 57 59 8 (set (reg:DI 104 [ _59 ])
        (reg/f:DI 87 [ _27 ])) "queryTAD.c":39:11 -1
     (nil))
(insn 59 58 60 8 (parallel [
            (set (reg:DI 105 [ _60 ])
                (lshiftrt:DI (reg:DI 104 [ _59 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":39:11 -1
     (nil))
(insn 60 59 61 8 (parallel [
            (set (reg:DI 106 [ _61 ])
                (plus:DI (reg:DI 105 [ _60 ])
                    (const_int 2147450880 [0x7fff8000])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":39:11 -1
     (nil))
(insn 61 60 62 8 (set (reg/f:DI 107 [ _62 ])
        (reg:DI 106 [ _61 ])) "queryTAD.c":39:11 -1
     (nil))
(insn 62 61 63 8 (set (reg:QI 108 [ _63 ])
        (mem:QI (reg/f:DI 107 [ _62 ]) [10 *_62+0 S1 A8])) "queryTAD.c":39:11 -1
     (nil))
(insn 63 62 64 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 108 [ _63 ])
            (const_int 0 [0]))) "queryTAD.c":39:11 -1
     (nil))
(jump_insn 64 63 65 8 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 69)
            (pc))) "queryTAD.c":39:11 -1
     (nil)
 -> 69)
;;  succ:       10 [100.0% (guessed)] 
;;              9 [0.0% (guessed)]  (FALLTHRU)

;; basic block 9, loop depth 0, maybe hot
;;  prev block 8, next block 10, flags: (NEW, REACHABLE, RTL)
;;  pred:       8 [0.0% (guessed)]  (FALLTHRU)
(note 65 64 66 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 66 65 67 9 (set (reg:DI 5 di)
        (reg:DI 104 [ _59 ])) "queryTAD.c":39:11 -1
     (nil))
(call_insn 67 66 68 9 (call (mem:QI (symbol_ref:DI ("__asan_report_store8") [flags 0x41]  <function_decl 0x7fc58eea5f00 __builtin___asan_report_store8>) [0 __builtin___asan_report_store8 S1 A8])
        (const_int 0 [0])) "queryTAD.c":39:11 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:      

(barrier 68 67 69)
;; basic block 10, loop depth 0, maybe hot
;;  prev block 9, next block 11, flags: (NEW, REACHABLE, RTL)
;;  pred:       8 [100.0% (guessed)] 
(code_label 69 68 70 10 19 (nil) [1 uses])
(note 70 69 71 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 71 70 72 10 (set (reg/f:DI 175)
        (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x7fc58ec5eb40 *.LC3>)) "queryTAD.c":39:11 -1
     (nil))
(insn 72 71 73 10 (set (mem/f/c:DI (plus:DI (reg:DI 164)
                (const_int -152 [0xffffffffffffff68])) [3 months+8 S8 A64])
        (reg/f:DI 175)) "queryTAD.c":39:11 -1
     (nil))
(insn 73 72 74 10 (parallel [
            (set (reg:DI 176)
                (plus:DI (reg:DI 164)
                    (const_int -160 [0xffffffffffffff60])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":39:11 -1
     (nil))
(insn 74 73 75 10 (parallel [
            (set (reg/f:DI 88 [ _28 ])
                (plus:DI (reg:DI 176)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":39:11 -1
     (nil))
(insn 75 74 76 10 (set (reg:DI 109 [ _64 ])
        (reg/f:DI 88 [ _28 ])) "queryTAD.c":39:11 -1
     (nil))
(insn 76 75 77 10 (parallel [
            (set (reg:DI 110 [ _65 ])
                (lshiftrt:DI (reg:DI 109 [ _64 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":39:11 -1
     (nil))
(insn 77 76 78 10 (parallel [
            (set (reg:DI 111 [ _66 ])
                (plus:DI (reg:DI 110 [ _65 ])
                    (const_int 2147450880 [0x7fff8000])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":39:11 -1
     (nil))
(insn 78 77 79 10 (set (reg/f:DI 112 [ _67 ])
        (reg:DI 111 [ _66 ])) "queryTAD.c":39:11 -1
     (nil))
(insn 79 78 80 10 (set (reg:QI 113 [ _68 ])
        (mem:QI (reg/f:DI 112 [ _67 ]) [10 *_67+0 S1 A8])) "queryTAD.c":39:11 -1
     (nil))
(insn 80 79 81 10 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 113 [ _68 ])
            (const_int 0 [0]))) "queryTAD.c":39:11 -1
     (nil))
(jump_insn 81 80 82 10 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 86)
            (pc))) "queryTAD.c":39:11 -1
     (nil)
 -> 86)
;;  succ:       12 [100.0% (guessed)] 
;;              11 [0.0% (guessed)]  (FALLTHRU)

;; basic block 11, loop depth 0, maybe hot
;;  prev block 10, next block 12, flags: (NEW, REACHABLE, RTL)
;;  pred:       10 [0.0% (guessed)]  (FALLTHRU)
(note 82 81 83 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 83 82 84 11 (set (reg:DI 5 di)
        (reg:DI 109 [ _64 ])) "queryTAD.c":39:11 -1
     (nil))
(call_insn 84 83 85 11 (call (mem:QI (symbol_ref:DI ("__asan_report_store8") [flags 0x41]  <function_decl 0x7fc58eea5f00 __builtin___asan_report_store8>) [0 __builtin___asan_report_store8 S1 A8])
        (const_int 0 [0])) "queryTAD.c":39:11 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:      

(barrier 85 84 86)
;; basic block 12, loop depth 0, maybe hot
;;  prev block 11, next block 13, flags: (NEW, REACHABLE, RTL)
;;  pred:       10 [100.0% (guessed)] 
(code_label 86 85 87 12 20 (nil) [1 uses])
(note 87 86 88 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 88 87 89 12 (set (reg/f:DI 177)
        (symbol_ref/f:DI ("*.LC4") [flags 0x2]  <var_decl 0x7fc58ec5ebd0 *.LC4>)) "queryTAD.c":39:11 -1
     (nil))
(insn 89 88 90 12 (set (mem/f/c:DI (plus:DI (reg:DI 164)
                (const_int -144 [0xffffffffffffff70])) [3 months+16 S8 A64])
        (reg/f:DI 177)) "queryTAD.c":39:11 -1
     (nil))
(insn 90 89 91 12 (parallel [
            (set (reg:DI 178)
                (plus:DI (reg:DI 164)
                    (const_int -160 [0xffffffffffffff60])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":39:11 -1
     (nil))
(insn 91 90 92 12 (parallel [
            (set (reg/f:DI 89 [ _29 ])
                (plus:DI (reg:DI 178)
                    (const_int 24 [0x18])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":39:11 -1
     (nil))
(insn 92 91 93 12 (set (reg:DI 114 [ _69 ])
        (reg/f:DI 89 [ _29 ])) "queryTAD.c":39:11 -1
     (nil))
(insn 93 92 94 12 (parallel [
            (set (reg:DI 115 [ _70 ])
                (lshiftrt:DI (reg:DI 114 [ _69 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":39:11 -1
     (nil))
(insn 94 93 95 12 (parallel [
            (set (reg:DI 116 [ _71 ])
                (plus:DI (reg:DI 115 [ _70 ])
                    (const_int 2147450880 [0x7fff8000])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":39:11 -1
     (nil))
(insn 95 94 96 12 (set (reg/f:DI 117 [ _72 ])
        (reg:DI 116 [ _71 ])) "queryTAD.c":39:11 -1
     (nil))
(insn 96 95 97 12 (set (reg:QI 118 [ _73 ])
        (mem:QI (reg/f:DI 117 [ _72 ]) [10 *_72+0 S1 A8])) "queryTAD.c":39:11 -1
     (nil))
(insn 97 96 98 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 118 [ _73 ])
            (const_int 0 [0]))) "queryTAD.c":39:11 -1
     (nil))
(jump_insn 98 97 99 12 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 103)
            (pc))) "queryTAD.c":39:11 -1
     (nil)
 -> 103)
;;  succ:       14 [100.0% (guessed)] 
;;              13 [0.0% (guessed)]  (FALLTHRU)

;; basic block 13, loop depth 0, maybe hot
;;  prev block 12, next block 14, flags: (NEW, REACHABLE, RTL)
;;  pred:       12 [0.0% (guessed)]  (FALLTHRU)
(note 99 98 100 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 100 99 101 13 (set (reg:DI 5 di)
        (reg:DI 114 [ _69 ])) "queryTAD.c":39:11 -1
     (nil))
(call_insn 101 100 102 13 (call (mem:QI (symbol_ref:DI ("__asan_report_store8") [flags 0x41]  <function_decl 0x7fc58eea5f00 __builtin___asan_report_store8>) [0 __builtin___asan_report_store8 S1 A8])
        (const_int 0 [0])) "queryTAD.c":39:11 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:      

(barrier 102 101 103)
;; basic block 14, loop depth 0, maybe hot
;;  prev block 13, next block 15, flags: (NEW, REACHABLE, RTL)
;;  pred:       12 [100.0% (guessed)] 
(code_label 103 102 104 14 21 (nil) [1 uses])
(note 104 103 105 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 105 104 106 14 (set (reg/f:DI 179)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7fc58ec5ec60 *.LC5>)) "queryTAD.c":39:11 -1
     (nil))
(insn 106 105 107 14 (set (mem/f/c:DI (plus:DI (reg:DI 164)
                (const_int -136 [0xffffffffffffff78])) [3 months+24 S8 A64])
        (reg/f:DI 179)) "queryTAD.c":39:11 -1
     (nil))
(insn 107 106 108 14 (parallel [
            (set (reg:DI 180)
                (plus:DI (reg:DI 164)
                    (const_int -160 [0xffffffffffffff60])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":39:11 -1
     (nil))
(insn 108 107 109 14 (parallel [
            (set (reg/f:DI 90 [ _30 ])
                (plus:DI (reg:DI 180)
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":39:11 -1
     (nil))
(insn 109 108 110 14 (set (reg:DI 119 [ _74 ])
        (reg/f:DI 90 [ _30 ])) "queryTAD.c":39:11 -1
     (nil))
(insn 110 109 111 14 (parallel [
            (set (reg:DI 120 [ _75 ])
                (lshiftrt:DI (reg:DI 119 [ _74 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":39:11 -1
     (nil))
(insn 111 110 112 14 (parallel [
            (set (reg:DI 121 [ _76 ])
                (plus:DI (reg:DI 120 [ _75 ])
                    (const_int 2147450880 [0x7fff8000])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":39:11 -1
     (nil))
(insn 112 111 113 14 (set (reg/f:DI 122 [ _77 ])
        (reg:DI 121 [ _76 ])) "queryTAD.c":39:11 -1
     (nil))
(insn 113 112 114 14 (set (reg:QI 123 [ _78 ])
        (mem:QI (reg/f:DI 122 [ _77 ]) [10 *_77+0 S1 A8])) "queryTAD.c":39:11 -1
     (nil))
(insn 114 113 115 14 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 123 [ _78 ])
            (const_int 0 [0]))) "queryTAD.c":39:11 -1
     (nil))
(jump_insn 115 114 116 14 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 120)
            (pc))) "queryTAD.c":39:11 -1
     (nil)
 -> 120)
;;  succ:       16 [100.0% (guessed)] 
;;              15 [0.0% (guessed)]  (FALLTHRU)

;; basic block 15, loop depth 0, maybe hot
;;  prev block 14, next block 16, flags: (NEW, REACHABLE, RTL)
;;  pred:       14 [0.0% (guessed)]  (FALLTHRU)
(note 116 115 117 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 117 116 118 15 (set (reg:DI 5 di)
        (reg:DI 119 [ _74 ])) "queryTAD.c":39:11 -1
     (nil))
(call_insn 118 117 119 15 (call (mem:QI (symbol_ref:DI ("__asan_report_store8") [flags 0x41]  <function_decl 0x7fc58eea5f00 __builtin___asan_report_store8>) [0 __builtin___asan_report_store8 S1 A8])
        (const_int 0 [0])) "queryTAD.c":39:11 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:      

(barrier 119 118 120)
;; basic block 16, loop depth 0, maybe hot
;;  prev block 15, next block 17, flags: (NEW, REACHABLE, RTL)
;;  pred:       14 [100.0% (guessed)] 
(code_label 120 119 121 16 22 (nil) [1 uses])
(note 121 120 122 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 122 121 123 16 (set (reg/f:DI 181)
        (symbol_ref/f:DI ("*.LC6") [flags 0x2]  <var_decl 0x7fc58ec5ecf0 *.LC6>)) "queryTAD.c":39:11 -1
     (nil))
(insn 123 122 124 16 (set (mem/f/c:DI (plus:DI (reg:DI 164)
                (const_int -128 [0xffffffffffffff80])) [3 months+32 S8 A64])
        (reg/f:DI 181)) "queryTAD.c":39:11 -1
     (nil))
(insn 124 123 125 16 (parallel [
            (set (reg:DI 182)
                (plus:DI (reg:DI 164)
                    (const_int -160 [0xffffffffffffff60])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":39:11 -1
     (nil))
(insn 125 124 126 16 (parallel [
            (set (reg/f:DI 91 [ _31 ])
                (plus:DI (reg:DI 182)
                    (const_int 40 [0x28])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":39:11 -1
     (nil))
(insn 126 125 127 16 (set (reg:DI 124 [ _79 ])
        (reg/f:DI 91 [ _31 ])) "queryTAD.c":39:11 -1
     (nil))
(insn 127 126 128 16 (parallel [
            (set (reg:DI 125 [ _80 ])
                (lshiftrt:DI (reg:DI 124 [ _79 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":39:11 -1
     (nil))
(insn 128 127 129 16 (parallel [
            (set (reg:DI 126 [ _81 ])
                (plus:DI (reg:DI 125 [ _80 ])
                    (const_int 2147450880 [0x7fff8000])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":39:11 -1
     (nil))
(insn 129 128 130 16 (set (reg/f:DI 127 [ _82 ])
        (reg:DI 126 [ _81 ])) "queryTAD.c":39:11 -1
     (nil))
(insn 130 129 131 16 (set (reg:QI 128 [ _83 ])
        (mem:QI (reg/f:DI 127 [ _82 ]) [10 *_82+0 S1 A8])) "queryTAD.c":39:11 -1
     (nil))
(insn 131 130 132 16 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 128 [ _83 ])
            (const_int 0 [0]))) "queryTAD.c":39:11 -1
     (nil))
(jump_insn 132 131 133 16 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 137)
            (pc))) "queryTAD.c":39:11 -1
     (nil)
 -> 137)
;;  succ:       18 [100.0% (guessed)] 
;;              17 [0.0% (guessed)]  (FALLTHRU)

;; basic block 17, loop depth 0, maybe hot
;;  prev block 16, next block 18, flags: (NEW, REACHABLE, RTL)
;;  pred:       16 [0.0% (guessed)]  (FALLTHRU)
(note 133 132 134 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 134 133 135 17 (set (reg:DI 5 di)
        (reg:DI 124 [ _79 ])) "queryTAD.c":39:11 -1
     (nil))
(call_insn 135 134 136 17 (call (mem:QI (symbol_ref:DI ("__asan_report_store8") [flags 0x41]  <function_decl 0x7fc58eea5f00 __builtin___asan_report_store8>) [0 __builtin___asan_report_store8 S1 A8])
        (const_int 0 [0])) "queryTAD.c":39:11 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:      

(barrier 136 135 137)
;; basic block 18, loop depth 0, maybe hot
;;  prev block 17, next block 19, flags: (NEW, REACHABLE, RTL)
;;  pred:       16 [100.0% (guessed)] 
(code_label 137 136 138 18 23 (nil) [1 uses])
(note 138 137 139 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 139 138 140 18 (set (reg/f:DI 183)
        (symbol_ref/f:DI ("*.LC7") [flags 0x2]  <var_decl 0x7fc58ec5ed80 *.LC7>)) "queryTAD.c":39:11 -1
     (nil))
(insn 140 139 141 18 (set (mem/f/c:DI (plus:DI (reg:DI 164)
                (const_int -120 [0xffffffffffffff88])) [3 months+40 S8 A64])
        (reg/f:DI 183)) "queryTAD.c":39:11 -1
     (nil))
(insn 141 140 142 18 (parallel [
            (set (reg:DI 184)
                (plus:DI (reg:DI 164)
                    (const_int -160 [0xffffffffffffff60])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":39:11 -1
     (nil))
(insn 142 141 143 18 (parallel [
            (set (reg/f:DI 92 [ _32 ])
                (plus:DI (reg:DI 184)
                    (const_int 48 [0x30])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":39:11 -1
     (nil))
(insn 143 142 144 18 (set (reg:DI 129 [ _84 ])
        (reg/f:DI 92 [ _32 ])) "queryTAD.c":39:11 -1
     (nil))
(insn 144 143 145 18 (parallel [
            (set (reg:DI 130 [ _85 ])
                (lshiftrt:DI (reg:DI 129 [ _84 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":39:11 -1
     (nil))
(insn 145 144 146 18 (parallel [
            (set (reg:DI 131 [ _86 ])
                (plus:DI (reg:DI 130 [ _85 ])
                    (const_int 2147450880 [0x7fff8000])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":39:11 -1
     (nil))
(insn 146 145 147 18 (set (reg/f:DI 132 [ _87 ])
        (reg:DI 131 [ _86 ])) "queryTAD.c":39:11 -1
     (nil))
(insn 147 146 148 18 (set (reg:QI 133 [ _88 ])
        (mem:QI (reg/f:DI 132 [ _87 ]) [10 *_87+0 S1 A8])) "queryTAD.c":39:11 -1
     (nil))
(insn 148 147 149 18 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 133 [ _88 ])
            (const_int 0 [0]))) "queryTAD.c":39:11 -1
     (nil))
(jump_insn 149 148 150 18 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 154)
            (pc))) "queryTAD.c":39:11 -1
     (nil)
 -> 154)
;;  succ:       20 [100.0% (guessed)] 
;;              19 [0.0% (guessed)]  (FALLTHRU)

;; basic block 19, loop depth 0, maybe hot
;;  prev block 18, next block 20, flags: (NEW, REACHABLE, RTL)
;;  pred:       18 [0.0% (guessed)]  (FALLTHRU)
(note 150 149 151 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 151 150 152 19 (set (reg:DI 5 di)
        (reg:DI 129 [ _84 ])) "queryTAD.c":39:11 -1
     (nil))
(call_insn 152 151 153 19 (call (mem:QI (symbol_ref:DI ("__asan_report_store8") [flags 0x41]  <function_decl 0x7fc58eea5f00 __builtin___asan_report_store8>) [0 __builtin___asan_report_store8 S1 A8])
        (const_int 0 [0])) "queryTAD.c":39:11 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:      

(barrier 153 152 154)
;; basic block 20, loop depth 0, maybe hot
;;  prev block 19, next block 21, flags: (NEW, REACHABLE, RTL)
;;  pred:       18 [100.0% (guessed)] 
(code_label 154 153 155 20 24 (nil) [1 uses])
(note 155 154 156 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 156 155 157 20 (set (reg/f:DI 185)
        (symbol_ref/f:DI ("*.LC8") [flags 0x2]  <var_decl 0x7fc58ec5ee10 *.LC8>)) "queryTAD.c":39:11 -1
     (nil))
(insn 157 156 158 20 (set (mem/f/c:DI (plus:DI (reg:DI 164)
                (const_int -112 [0xffffffffffffff90])) [3 months+48 S8 A64])
        (reg/f:DI 185)) "queryTAD.c":39:11 -1
     (nil))
(insn 158 157 159 20 (parallel [
            (set (reg:DI 186)
                (plus:DI (reg:DI 164)
                    (const_int -160 [0xffffffffffffff60])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":39:11 -1
     (nil))
(insn 159 158 160 20 (parallel [
            (set (reg/f:DI 93 [ _33 ])
                (plus:DI (reg:DI 186)
                    (const_int 56 [0x38])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":39:11 -1
     (nil))
(insn 160 159 161 20 (set (reg:DI 134 [ _89 ])
        (reg/f:DI 93 [ _33 ])) "queryTAD.c":39:11 -1
     (nil))
(insn 161 160 162 20 (parallel [
            (set (reg:DI 135 [ _90 ])
                (lshiftrt:DI (reg:DI 134 [ _89 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":39:11 -1
     (nil))
(insn 162 161 163 20 (parallel [
            (set (reg:DI 136 [ _91 ])
                (plus:DI (reg:DI 135 [ _90 ])
                    (const_int 2147450880 [0x7fff8000])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":39:11 -1
     (nil))
(insn 163 162 164 20 (set (reg/f:DI 137 [ _92 ])
        (reg:DI 136 [ _91 ])) "queryTAD.c":39:11 -1
     (nil))
(insn 164 163 165 20 (set (reg:QI 138 [ _93 ])
        (mem:QI (reg/f:DI 137 [ _92 ]) [10 *_92+0 S1 A8])) "queryTAD.c":39:11 -1
     (nil))
(insn 165 164 166 20 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 138 [ _93 ])
            (const_int 0 [0]))) "queryTAD.c":39:11 -1
     (nil))
(jump_insn 166 165 167 20 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 171)
            (pc))) "queryTAD.c":39:11 -1
     (nil)
 -> 171)
;;  succ:       22 [100.0% (guessed)] 
;;              21 [0.0% (guessed)]  (FALLTHRU)

;; basic block 21, loop depth 0, maybe hot
;;  prev block 20, next block 22, flags: (NEW, REACHABLE, RTL)
;;  pred:       20 [0.0% (guessed)]  (FALLTHRU)
(note 167 166 168 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 168 167 169 21 (set (reg:DI 5 di)
        (reg:DI 134 [ _89 ])) "queryTAD.c":39:11 -1
     (nil))
(call_insn 169 168 170 21 (call (mem:QI (symbol_ref:DI ("__asan_report_store8") [flags 0x41]  <function_decl 0x7fc58eea5f00 __builtin___asan_report_store8>) [0 __builtin___asan_report_store8 S1 A8])
        (const_int 0 [0])) "queryTAD.c":39:11 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:      

(barrier 170 169 171)
;; basic block 22, loop depth 0, maybe hot
;;  prev block 21, next block 23, flags: (NEW, REACHABLE, RTL)
;;  pred:       20 [100.0% (guessed)] 
(code_label 171 170 172 22 25 (nil) [1 uses])
(note 172 171 173 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 173 172 174 22 (set (reg/f:DI 187)
        (symbol_ref/f:DI ("*.LC9") [flags 0x2]  <var_decl 0x7fc58ec5eea0 *.LC9>)) "queryTAD.c":39:11 -1
     (nil))
(insn 174 173 175 22 (set (mem/f/c:DI (plus:DI (reg:DI 164)
                (const_int -104 [0xffffffffffffff98])) [3 months+56 S8 A64])
        (reg/f:DI 187)) "queryTAD.c":39:11 -1
     (nil))
(insn 175 174 176 22 (parallel [
            (set (reg:DI 188)
                (plus:DI (reg:DI 164)
                    (const_int -160 [0xffffffffffffff60])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":39:11 -1
     (nil))
(insn 176 175 177 22 (parallel [
            (set (reg/f:DI 94 [ _34 ])
                (plus:DI (reg:DI 188)
                    (const_int 64 [0x40])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":39:11 -1
     (nil))
(insn 177 176 178 22 (set (reg:DI 139 [ _94 ])
        (reg/f:DI 94 [ _34 ])) "queryTAD.c":39:11 -1
     (nil))
(insn 178 177 179 22 (parallel [
            (set (reg:DI 140 [ _95 ])
                (lshiftrt:DI (reg:DI 139 [ _94 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":39:11 -1
     (nil))
(insn 179 178 180 22 (parallel [
            (set (reg:DI 141 [ _96 ])
                (plus:DI (reg:DI 140 [ _95 ])
                    (const_int 2147450880 [0x7fff8000])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":39:11 -1
     (nil))
(insn 180 179 181 22 (set (reg/f:DI 142 [ _97 ])
        (reg:DI 141 [ _96 ])) "queryTAD.c":39:11 -1
     (nil))
(insn 181 180 182 22 (set (reg:QI 143 [ _98 ])
        (mem:QI (reg/f:DI 142 [ _97 ]) [10 *_97+0 S1 A8])) "queryTAD.c":39:11 -1
     (nil))
(insn 182 181 183 22 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 143 [ _98 ])
            (const_int 0 [0]))) "queryTAD.c":39:11 -1
     (nil))
(jump_insn 183 182 184 22 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 188)
            (pc))) "queryTAD.c":39:11 -1
     (nil)
 -> 188)
;;  succ:       24 [100.0% (guessed)] 
;;              23 [0.0% (guessed)]  (FALLTHRU)

;; basic block 23, loop depth 0, maybe hot
;;  prev block 22, next block 24, flags: (NEW, REACHABLE, RTL)
;;  pred:       22 [0.0% (guessed)]  (FALLTHRU)
(note 184 183 185 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 185 184 186 23 (set (reg:DI 5 di)
        (reg:DI 139 [ _94 ])) "queryTAD.c":39:11 -1
     (nil))
(call_insn 186 185 187 23 (call (mem:QI (symbol_ref:DI ("__asan_report_store8") [flags 0x41]  <function_decl 0x7fc58eea5f00 __builtin___asan_report_store8>) [0 __builtin___asan_report_store8 S1 A8])
        (const_int 0 [0])) "queryTAD.c":39:11 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:      

(barrier 187 186 188)
;; basic block 24, loop depth 0, maybe hot
;;  prev block 23, next block 25, flags: (NEW, REACHABLE, RTL)
;;  pred:       22 [100.0% (guessed)] 
(code_label 188 187 189 24 26 (nil) [1 uses])
(note 189 188 190 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 190 189 191 24 (set (reg/f:DI 189)
        (symbol_ref/f:DI ("*.LC10") [flags 0x2]  <var_decl 0x7fc58ec5ef30 *.LC10>)) "queryTAD.c":39:11 -1
     (nil))
(insn 191 190 192 24 (set (mem/f/c:DI (plus:DI (reg:DI 164)
                (const_int -96 [0xffffffffffffffa0])) [3 months+64 S8 A64])
        (reg/f:DI 189)) "queryTAD.c":39:11 -1
     (nil))
(insn 192 191 193 24 (parallel [
            (set (reg:DI 190)
                (plus:DI (reg:DI 164)
                    (const_int -160 [0xffffffffffffff60])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":39:11 -1
     (nil))
(insn 193 192 194 24 (parallel [
            (set (reg/f:DI 95 [ _35 ])
                (plus:DI (reg:DI 190)
                    (const_int 72 [0x48])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":39:11 -1
     (nil))
(insn 194 193 195 24 (set (reg:DI 144 [ _99 ])
        (reg/f:DI 95 [ _35 ])) "queryTAD.c":39:11 -1
     (nil))
(insn 195 194 196 24 (parallel [
            (set (reg:DI 145 [ _100 ])
                (lshiftrt:DI (reg:DI 144 [ _99 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":39:11 -1
     (nil))
(insn 196 195 197 24 (parallel [
            (set (reg:DI 146 [ _101 ])
                (plus:DI (reg:DI 145 [ _100 ])
                    (const_int 2147450880 [0x7fff8000])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":39:11 -1
     (nil))
(insn 197 196 198 24 (set (reg/f:DI 147 [ _102 ])
        (reg:DI 146 [ _101 ])) "queryTAD.c":39:11 -1
     (nil))
(insn 198 197 199 24 (set (reg:QI 148 [ _103 ])
        (mem:QI (reg/f:DI 147 [ _102 ]) [10 *_102+0 S1 A8])) "queryTAD.c":39:11 -1
     (nil))
(insn 199 198 200 24 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 148 [ _103 ])
            (const_int 0 [0]))) "queryTAD.c":39:11 -1
     (nil))
(jump_insn 200 199 201 24 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 205)
            (pc))) "queryTAD.c":39:11 -1
     (nil)
 -> 205)
;;  succ:       26 [100.0% (guessed)] 
;;              25 [0.0% (guessed)]  (FALLTHRU)

;; basic block 25, loop depth 0, maybe hot
;;  prev block 24, next block 26, flags: (NEW, REACHABLE, RTL)
;;  pred:       24 [0.0% (guessed)]  (FALLTHRU)
(note 201 200 202 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 202 201 203 25 (set (reg:DI 5 di)
        (reg:DI 144 [ _99 ])) "queryTAD.c":39:11 -1
     (nil))
(call_insn 203 202 204 25 (call (mem:QI (symbol_ref:DI ("__asan_report_store8") [flags 0x41]  <function_decl 0x7fc58eea5f00 __builtin___asan_report_store8>) [0 __builtin___asan_report_store8 S1 A8])
        (const_int 0 [0])) "queryTAD.c":39:11 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:      

(barrier 204 203 205)
;; basic block 26, loop depth 0, maybe hot
;;  prev block 25, next block 27, flags: (NEW, REACHABLE, RTL)
;;  pred:       24 [100.0% (guessed)] 
(code_label 205 204 206 26 27 (nil) [1 uses])
(note 206 205 207 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 207 206 208 26 (set (reg/f:DI 191)
        (symbol_ref/f:DI ("*.LC11") [flags 0x2]  <var_decl 0x7fc58ec72000 *.LC11>)) "queryTAD.c":39:11 -1
     (nil))
(insn 208 207 209 26 (set (mem/f/c:DI (plus:DI (reg:DI 164)
                (const_int -88 [0xffffffffffffffa8])) [3 months+72 S8 A64])
        (reg/f:DI 191)) "queryTAD.c":39:11 -1
     (nil))
(insn 209 208 210 26 (parallel [
            (set (reg:DI 192)
                (plus:DI (reg:DI 164)
                    (const_int -160 [0xffffffffffffff60])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":39:11 -1
     (nil))
(insn 210 209 211 26 (parallel [
            (set (reg/f:DI 96 [ _36 ])
                (plus:DI (reg:DI 192)
                    (const_int 80 [0x50])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":39:11 -1
     (nil))
(insn 211 210 212 26 (set (reg:DI 149 [ _104 ])
        (reg/f:DI 96 [ _36 ])) "queryTAD.c":39:11 -1
     (nil))
(insn 212 211 213 26 (parallel [
            (set (reg:DI 150 [ _105 ])
                (lshiftrt:DI (reg:DI 149 [ _104 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":39:11 -1
     (nil))
(insn 213 212 214 26 (parallel [
            (set (reg:DI 151 [ _106 ])
                (plus:DI (reg:DI 150 [ _105 ])
                    (const_int 2147450880 [0x7fff8000])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":39:11 -1
     (nil))
(insn 214 213 215 26 (set (reg/f:DI 152 [ _107 ])
        (reg:DI 151 [ _106 ])) "queryTAD.c":39:11 -1
     (nil))
(insn 215 214 216 26 (set (reg:QI 153 [ _108 ])
        (mem:QI (reg/f:DI 152 [ _107 ]) [10 *_107+0 S1 A8])) "queryTAD.c":39:11 -1
     (nil))
(insn 216 215 217 26 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 153 [ _108 ])
            (const_int 0 [0]))) "queryTAD.c":39:11 -1
     (nil))
(jump_insn 217 216 218 26 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 222)
            (pc))) "queryTAD.c":39:11 -1
     (nil)
 -> 222)
;;  succ:       28 [100.0% (guessed)] 
;;              27 [0.0% (guessed)]  (FALLTHRU)

;; basic block 27, loop depth 0, maybe hot
;;  prev block 26, next block 28, flags: (NEW, REACHABLE, RTL)
;;  pred:       26 [0.0% (guessed)]  (FALLTHRU)
(note 218 217 219 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn 219 218 220 27 (set (reg:DI 5 di)
        (reg:DI 149 [ _104 ])) "queryTAD.c":39:11 -1
     (nil))
(call_insn 220 219 221 27 (call (mem:QI (symbol_ref:DI ("__asan_report_store8") [flags 0x41]  <function_decl 0x7fc58eea5f00 __builtin___asan_report_store8>) [0 __builtin___asan_report_store8 S1 A8])
        (const_int 0 [0])) "queryTAD.c":39:11 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:      

(barrier 221 220 222)
;; basic block 28, loop depth 0, maybe hot
;;  prev block 27, next block 29, flags: (NEW, REACHABLE, RTL)
;;  pred:       26 [100.0% (guessed)] 
(code_label 222 221 223 28 28 (nil) [1 uses])
(note 223 222 224 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(insn 224 223 225 28 (set (reg/f:DI 193)
        (symbol_ref/f:DI ("*.LC12") [flags 0x2]  <var_decl 0x7fc58ec72090 *.LC12>)) "queryTAD.c":39:11 -1
     (nil))
(insn 225 224 226 28 (set (mem/f/c:DI (plus:DI (reg:DI 164)
                (const_int -80 [0xffffffffffffffb0])) [3 months+80 S8 A64])
        (reg/f:DI 193)) "queryTAD.c":39:11 -1
     (nil))
(insn 226 225 227 28 (parallel [
            (set (reg:DI 194)
                (plus:DI (reg:DI 164)
                    (const_int -160 [0xffffffffffffff60])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":39:11 -1
     (nil))
(insn 227 226 228 28 (parallel [
            (set (reg/f:DI 97 [ _37 ])
                (plus:DI (reg:DI 194)
                    (const_int 88 [0x58])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":39:11 -1
     (nil))
(insn 228 227 229 28 (set (reg:DI 154 [ _109 ])
        (reg/f:DI 97 [ _37 ])) "queryTAD.c":39:11 -1
     (nil))
(insn 229 228 230 28 (parallel [
            (set (reg:DI 155 [ _110 ])
                (lshiftrt:DI (reg:DI 154 [ _109 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":39:11 -1
     (nil))
(insn 230 229 231 28 (parallel [
            (set (reg:DI 156 [ _111 ])
                (plus:DI (reg:DI 155 [ _110 ])
                    (const_int 2147450880 [0x7fff8000])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":39:11 -1
     (nil))
(insn 231 230 232 28 (set (reg/f:DI 157 [ _112 ])
        (reg:DI 156 [ _111 ])) "queryTAD.c":39:11 -1
     (nil))
(insn 232 231 233 28 (set (reg:QI 158 [ _113 ])
        (mem:QI (reg/f:DI 157 [ _112 ]) [10 *_112+0 S1 A8])) "queryTAD.c":39:11 -1
     (nil))
(insn 233 232 234 28 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 158 [ _113 ])
            (const_int 0 [0]))) "queryTAD.c":39:11 -1
     (nil))
(jump_insn 234 233 235 28 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 239)
            (pc))) "queryTAD.c":39:11 -1
     (nil)
 -> 239)
;;  succ:       30 [100.0% (guessed)] 
;;              29 [0.0% (guessed)]  (FALLTHRU)

;; basic block 29, loop depth 0, maybe hot
;;  prev block 28, next block 30, flags: (NEW, REACHABLE, RTL)
;;  pred:       28 [0.0% (guessed)]  (FALLTHRU)
(note 235 234 236 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(insn 236 235 237 29 (set (reg:DI 5 di)
        (reg:DI 154 [ _109 ])) "queryTAD.c":39:11 -1
     (nil))
(call_insn 237 236 238 29 (call (mem:QI (symbol_ref:DI ("__asan_report_store8") [flags 0x41]  <function_decl 0x7fc58eea5f00 __builtin___asan_report_store8>) [0 __builtin___asan_report_store8 S1 A8])
        (const_int 0 [0])) "queryTAD.c":39:11 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:      

(barrier 238 237 239)
;; basic block 30, loop depth 0, maybe hot
;;  prev block 29, next block 31, flags: (NEW, REACHABLE, RTL)
;;  pred:       28 [100.0% (guessed)] 
(code_label 239 238 240 30 29 (nil) [1 uses])
(note 240 239 241 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(insn 241 240 242 30 (set (reg/f:DI 195)
        (symbol_ref/f:DI ("*.LC13") [flags 0x2]  <var_decl 0x7fc58ec72120 *.LC13>)) "queryTAD.c":39:11 -1
     (nil))
(insn 242 241 243 30 (set (mem/f/c:DI (plus:DI (reg:DI 164)
                (const_int -72 [0xffffffffffffffb8])) [3 months+88 S8 A64])
        (reg/f:DI 195)) "queryTAD.c":39:11 -1
     (nil))
(insn 243 242 244 30 (set (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -196 [0xffffffffffffff3c])) [13 i+0 S4 A32])
        (const_int 0 [0])) "queryTAD.c":40:14 -1
     (nil))
(jump_insn 244 243 245 30 (set (pc)
        (label_ref 284)) "queryTAD.c":40:5 -1
     (nil)
 -> 284)
;;  succ:       36

(barrier 245 244 286)
;; basic block 31, loop depth 1, maybe hot
;;  prev block 30, next block 32, flags: (NEW, REACHABLE, RTL)
;;  pred:       36
(code_label 286 245 246 31 34 (nil) [1 uses])
(note 246 286 247 31 [bb 31] NOTE_INSN_BASIC_BLOCK)
(insn 247 246 248 31 (parallel [
            (set (reg:DI 196)
                (plus:DI (reg:DI 164)
                    (const_int -160 [0xffffffffffffff60])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":41:33 -1
     (nil))
(insn 248 247 249 31 (set (reg:SI 198)
        (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -196 [0xffffffffffffff3c])) [13 i+0 S4 A32])) "queryTAD.c":41:33 -1
     (nil))
(insn 249 248 250 31 (set (reg:DI 197)
        (sign_extend:DI (reg:SI 198))) "queryTAD.c":41:33 -1
     (nil))
(insn 250 249 251 31 (parallel [
            (set (reg:DI 199)
                (ashift:DI (reg:DI 197)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":41:33 -1
     (nil))
(insn 251 250 252 31 (parallel [
            (set (reg/f:DI 98 [ _38 ])
                (plus:DI (reg:DI 196)
                    (reg:DI 199)))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":41:33 -1
     (nil))
(insn 252 251 253 31 (set (reg:DI 159 [ _114 ])
        (reg/f:DI 98 [ _38 ])) "queryTAD.c":41:33 -1
     (nil))
(insn 253 252 254 31 (parallel [
            (set (reg:DI 160 [ _115 ])
                (lshiftrt:DI (reg:DI 159 [ _114 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":41:33 -1
     (nil))
(insn 254 253 255 31 (parallel [
            (set (reg:DI 161 [ _116 ])
                (plus:DI (reg:DI 160 [ _115 ])
                    (const_int 2147450880 [0x7fff8000])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":41:33 -1
     (nil))
(insn 255 254 256 31 (set (reg/f:DI 162 [ _117 ])
        (reg:DI 161 [ _116 ])) "queryTAD.c":41:33 -1
     (nil))
(insn 256 255 257 31 (set (reg:QI 163 [ _118 ])
        (mem:QI (reg/f:DI 162 [ _117 ]) [10 *_117+0 S1 A8])) "queryTAD.c":41:33 -1
     (nil))
(insn 257 256 258 31 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 163 [ _118 ])
            (const_int 0 [0]))) "queryTAD.c":41:33 -1
     (nil))
(jump_insn 258 257 259 31 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 263)
            (pc))) "queryTAD.c":41:33 -1
     (nil)
 -> 263)
;;  succ:       33 [100.0% (guessed)] 
;;              32 [0.0% (guessed)]  (FALLTHRU)

;; basic block 32, loop depth 0, maybe hot
;;  prev block 31, next block 33, flags: (NEW, REACHABLE, RTL)
;;  pred:       31 [0.0% (guessed)]  (FALLTHRU)
(note 259 258 260 32 [bb 32] NOTE_INSN_BASIC_BLOCK)
(insn 260 259 261 32 (set (reg:DI 5 di)
        (reg:DI 159 [ _114 ])) "queryTAD.c":41:33 -1
     (nil))
(call_insn 261 260 262 32 (call (mem:QI (symbol_ref:DI ("__asan_report_load8") [flags 0x41]  <function_decl 0x7fc58eea5900 __builtin___asan_report_load8>) [0 __builtin___asan_report_load8 S1 A8])
        (const_int 0 [0])) "queryTAD.c":41:33 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:      

(barrier 262 261 263)
;; basic block 33, loop depth 1, maybe hot
;;  prev block 32, next block 34, flags: (NEW, REACHABLE, RTL)
;;  pred:       31 [100.0% (guessed)] 
(code_label 263 262 264 33 31 (nil) [1 uses])
(note 264 263 265 33 [bb 33] NOTE_INSN_BASIC_BLOCK)
(insn 265 264 266 33 (set (reg:SI 201)
        (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -196 [0xffffffffffffff3c])) [13 i+0 S4 A32])) "queryTAD.c":41:33 -1
     (nil))
(insn 266 265 267 33 (set (reg:DI 200)
        (sign_extend:DI (reg:SI 201))) "queryTAD.c":41:33 -1
     (nil))
(insn 267 266 268 33 (set (reg/f:DI 82 [ _1 ])
        (mem/f:DI (plus:DI (plus:DI (mult:DI (reg:DI 200)
                        (const_int 8 [0x8]))
                    (reg:DI 164))
                (const_int -160 [0xffffffffffffff60])) [3 months S8 A64])) "queryTAD.c":41:33 -1
     (nil))
(insn 268 267 269 33 (set (reg:DI 202)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -216 [0xffffffffffffff28])) [3 s+0 S8 A64])) "queryTAD.c":41:13 -1
     (nil))
(insn 269 268 270 33 (set (reg:DI 4 si)
        (reg/f:DI 82 [ _1 ])) "queryTAD.c":41:13 -1
     (nil))
(insn 270 269 271 33 (set (reg:DI 5 di)
        (reg:DI 202)) "queryTAD.c":41:13 -1
     (nil))
(call_insn/i 271 270 272 33 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcasecmp") [flags 0x41]  <function_decl 0x7fc58ebf9400 strcasecmp>) [0 strcasecmp S1 A8])
            (const_int 0 [0]))) "queryTAD.c":41:13 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 272 271 273 33 (set (reg:SI 83 [ _2 ])
        (reg:SI 0 ax)) "queryTAD.c":41:13 -1
     (nil))
(insn 273 272 274 33 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 83 [ _2 ])
            (const_int 0 [0]))) "queryTAD.c":41:12 -1
     (nil))
(jump_insn 274 273 275 33 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 281)
            (pc))) "queryTAD.c":41:12 -1
     (nil)
 -> 281)
;;  succ:       34 (FALLTHRU)
;;              35

;; basic block 34, loop depth 0, maybe hot
;;  prev block 33, next block 35, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       33 (FALLTHRU)
(note 275 274 276 34 [bb 34] NOTE_INSN_BASIC_BLOCK)
(insn 276 275 277 34 (set (reg:SI 203)
        (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -196 [0xffffffffffffff3c])) [13 i+0 S4 A32])) "queryTAD.c":42:21 -1
     (nil))
(insn 277 276 278 34 (parallel [
            (set (reg:SI 84 [ _3 ])
                (plus:SI (reg:SI 203)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":42:21 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -196 [0xffffffffffffff3c])) [13 i+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 278 277 279 34 (set (reg:DI 85 [ _5 ])
        (sign_extend:DI (reg:SI 84 [ _3 ]))) "queryTAD.c":42:21 -1
     (nil))
(jump_insn 279 278 280 34 (set (pc)
        (label_ref:DI 295)) "queryTAD.c":42:21 660 {jump}
     (nil)
 -> 295)
;;  succ:       39 [always] 

(barrier 280 279 281)
;; basic block 35, loop depth 1, maybe hot
;;  prev block 34, next block 36, flags: (NEW, REACHABLE, RTL)
;;  pred:       33
(code_label 281 280 282 35 32 (nil) [1 uses])
(note 282 281 283 35 [bb 35] NOTE_INSN_BASIC_BLOCK)
(insn 283 282 284 35 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                        (const_int -196 [0xffffffffffffff3c])) [13 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                            (const_int -196 [0xffffffffffffff3c])) [13 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":40:26 -1
     (nil))
;;  succ:       36 (FALLTHRU,DFS_BACK)

;; basic block 36, loop depth 1, maybe hot
;;  prev block 35, next block 37, flags: (NEW, REACHABLE, RTL)
;;  pred:       30
;;              35 (FALLTHRU,DFS_BACK)
(code_label 284 283 285 36 30 (nil) [1 uses])
(note 285 284 289 36 [bb 36] NOTE_INSN_BASIC_BLOCK)
(insn 289 285 290 36 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -196 [0xffffffffffffff3c])) [13 i+0 S4 A32])
            (const_int 11 [0xb]))) "queryTAD.c":40:5 -1
     (nil))
(jump_insn 290 289 291 36 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 286)
            (pc))) "queryTAD.c":40:5 -1
     (nil)
 -> 286)
;;  succ:       31
;;              37 (FALLTHRU)

;; basic block 37, loop depth 0, maybe hot
;;  prev block 36, next block 39, flags: (NEW, REACHABLE, RTL)
;;  pred:       36 (FALLTHRU)
(note 291 290 292 37 [bb 37] NOTE_INSN_BASIC_BLOCK)
(insn 292 291 295 37 (set (reg:DI 85 [ _5 ])
        (const_int -1 [0xffffffffffffffff])) "queryTAD.c":45:12 -1
     (nil))
;;  succ:       39 (FALLTHRU)

;; basic block 39, loop depth 0, maybe hot
;;  prev block 37, next block 41, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       37 (FALLTHRU)
;;              34 [always] 
(code_label 295 292 296 39 35 (nil) [1 uses])
(note 296 295 297 39 [bb 39] NOTE_INSN_BASIC_BLOCK)
(insn 297 296 22 39 (set (reg:DI 172 [ <retval> ])
        (reg:DI 85 [ _5 ])) -1
     (nil))
(insn 22 297 23 39 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 166)
            (reg:DI 165))) "queryTAD.c":38:29 -1
     (nil))
(jump_insn 23 22 312 39 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 31)
            (pc))) "queryTAD.c":38:29 -1
     (nil)
 -> 31)
;;  succ:       42
;;              41 (FALLTHRU)

;; basic block 41, loop depth 0, maybe hot
;;  prev block 39, next block 42, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       39 (FALLTHRU)
(note 312 23 24 41 [bb 41] NOTE_INSN_BASIC_BLOCK)
(insn 24 312 25 41 (set (mem:DI (reg:DI 165) [0  S8 A8])
        (const_int 1172321806 [0x45e0360e])) "queryTAD.c":38:29 -1
     (nil))
(insn 25 24 26 41 (set (mem:TI (plus:DI (reg:DI 170)
                (const_int 2147450880 [0x7fff8000])) [10  S16 A8])
        (const_wide_int 0xf5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5)) "queryTAD.c":38:29 -1
     (nil))
(insn 26 25 27 41 (set (mem:SI (plus:DI (reg:DI 170)
                (const_int 2147450896 [0x7fff8010])) [10  S4 A8])
        (const_int -168430091 [0xfffffffff5f5f5f5])) "queryTAD.c":38:29 -1
     (nil))
(insn 27 26 28 41 (set (reg:DI 171)
        (mem:DI (plus:DI (reg:DI 165)
                (const_int 248 [0xf8])) [0  S8 A8])) "queryTAD.c":38:29 -1
     (nil))
(insn 28 27 29 41 (set (mem:QI (reg:DI 171) [0  S1 A8])
        (const_int 0 [0])) "queryTAD.c":38:29 -1
     (nil))
(jump_insn 29 28 30 41 (set (pc)
        (label_ref 34)) "queryTAD.c":38:29 -1
     (nil)
 -> 34)
;;  succ:       43

(barrier 30 29 31)
;; basic block 42, loop depth 0, maybe hot
;;  prev block 41, next block 43, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       39
(code_label 31 30 313 42 15 (nil) [1 uses])
(note 313 31 32 42 [bb 42] NOTE_INSN_BASIC_BLOCK)
(insn 32 313 33 42 (set (mem:SI (plus:DI (reg:DI 170)
                (const_int 2147450880 [0x7fff8000])) [10  S4 A8])
        (const_int 0 [0])) "queryTAD.c":38:29 -1
     (nil))
(insn 33 32 34 42 (set (mem:SI (plus:DI (reg:DI 170)
                (const_int 2147450896 [0x7fff8010])) [10  S4 A8])
        (const_int 0 [0])) "queryTAD.c":38:29 -1
     (nil))
;;  succ:       43 (FALLTHRU)

;; basic block 43, loop depth 0, maybe hot
;;  prev block 42, next block 44, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       41
;;              42 (FALLTHRU)
(code_label 34 33 314 43 16 (nil) [1 uses])
(note 314 34 301 43 [bb 43] NOTE_INSN_BASIC_BLOCK)
(insn 301 314 302 43 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                                (const_int -8 [0xfffffffffffffff8])) [12 D.3543+0 S8 A64])
                        (mem/v/f:DI (const_int 40 [0x28]) [0 MEM[(<address-space-1> long unsigned int *)40B]+0 S8 A64 AS1])
                    ] UNSPEC_SP_TEST))
            (clobber (scratch:DI))
        ]) "queryTAD.c":46:1 -1
     (nil))
(jump_insn 302 301 315 43 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 305)
            (pc))) "queryTAD.c":46:1 -1
     (nil)
 -> 305)
;;  succ:       45
;;              44 (FALLTHRU)

;; basic block 44, loop depth 0, maybe hot
;;  prev block 43, next block 45, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       43 (FALLTHRU)
(note 315 302 303 44 [bb 44] NOTE_INSN_BASIC_BLOCK)
(call_insn 303 315 304 44 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7fc58ec4c100 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) "queryTAD.c":46:1 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (nil))
;;  succ:      

(barrier 304 303 305)
;; basic block 45, loop depth 0, maybe hot
;;  prev block 44, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       43
(code_label 305 304 316 45 36 (nil) [1 uses])
(note 316 305 306 45 [bb 45] NOTE_INSN_BASIC_BLOCK)
(insn 306 316 307 45 (set (reg/i:DI 0 ax)
        (reg:DI 172 [ <retval> ])) "queryTAD.c":46:1 -1
     (nil))
(insn 307 306 0 45 (use (reg/i:DI 0 ax)) "queryTAD.c":46:1 -1
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)


;; Function dateCmp (dateCmp, funcdef_no=4, decl_uid=3427, cgraph_uid=5, symbol_order=4)

dateCmp (size_t year1, size_t year2, size_t month1, size_t day1, size_t month2, size_t day2, char * usedFlag, size_t time1, size_t time2)
{
  char D.3493;
  char _1;
  _Bool _2;
  _Bool _3;
  char _4;
  char _16;
  char _17;
  char _18;
  char _19;
  char _20;
  char _21;
  char _23;
  unsigned long _25;
  unsigned long _26;
  unsigned long _27;
  signed char * _28;
  signed char _29;
  _Bool _30;
  unsigned long _31;
  signed char _32;
  _Bool _33;
  _Bool _34;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _25 = (unsigned long) usedFlag_7(D);
  _26 = _25 >> 3;
  _27 = _26 + 2147450880;
  _28 = (signed char *) _27;
  _29 = *_28;
  _30 = _29 != 0;
  _31 = _25 & 7;
  _32 = (signed char) _31;
  _33 = _32 >= _29;
  _34 = _30 & _33;
  if (_34 != 0)
    goto <bb 3>; [0.05%]
  else
    goto <bb 4>; [99.95%]
;;    succ:       4
;;                3

;;   basic block 3, loop depth 0
;;    pred:       2
  __builtin___asan_report_load1 (_25);
;;    succ:      

;;   basic block 4, loop depth 0
;;    pred:       2
  _1 = *usedFlag_7(D);
  if (_1 == 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]
;;    succ:       5
;;                6

;;   basic block 5, loop depth 0
;;    pred:       4
  *usedFlag_7(D) = 1;
  _23 = -1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 21>; [INV]
;;    succ:       21

;;   basic block 6, loop depth 0
;;    pred:       4
  if (year1_8(D) < year2_9(D))
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]
;;    succ:       7
;;                8

;;   basic block 7, loop depth 0
;;    pred:       6
  _21 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 21>; [INV]
;;    succ:       21

;;   basic block 8, loop depth 0
;;    pred:       6
  if (month1_10(D) == month2_11(D))
    goto <bb 9>; [INV]
  else
    goto <bb 13>; [INV]
;;    succ:       9
;;                13

;;   basic block 9, loop depth 0
;;    pred:       8
  if (day1_12(D) == day2_13(D))
    goto <bb 10>; [INV]
  else
    goto <bb 13>; [INV]
;;    succ:       10
;;                13

;;   basic block 10, loop depth 0
;;    pred:       9
  if (year1_8(D) == year2_9(D))
    goto <bb 11>; [INV]
  else
    goto <bb 13>; [INV]
;;    succ:       11
;;                13

;;   basic block 11, loop depth 0
;;    pred:       10
  if (time1_14(D) == time2_15(D))
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]
;;    succ:       12
;;                13

;;   basic block 12, loop depth 0
;;    pred:       11
  _16 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 21>; [INV]
;;    succ:       21

;;   basic block 13, loop depth 0
;;    pred:       8
;;                9
;;                10
;;                11
  if (month1_10(D) < month2_11(D))
    goto <bb 14>; [INV]
  else
    goto <bb 15>; [INV]
;;    succ:       14
;;                15

;;   basic block 14, loop depth 0
;;    pred:       13
  _20 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 21>; [INV]
;;    succ:       21

;;   basic block 15, loop depth 0
;;    pred:       13
  if (month1_10(D) == month2_11(D))
    goto <bb 16>; [INV]
  else
    goto <bb 18>; [INV]
;;    succ:       16
;;                18

;;   basic block 16, loop depth 0
;;    pred:       15
  if (day1_12(D) == day2_13(D))
    goto <bb 17>; [INV]
  else
    goto <bb 18>; [INV]
;;    succ:       17
;;                18

;;   basic block 17, loop depth 0
;;    pred:       16
  _2 = time1_14(D) < time2_15(D);
  _17 = (char) _2;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 21>; [INV]
;;    succ:       21

;;   basic block 18, loop depth 0
;;    pred:       15
;;                16
  if (month1_10(D) == month2_11(D))
    goto <bb 19>; [INV]
  else
    goto <bb 20>; [INV]
;;    succ:       19
;;                20

;;   basic block 19, loop depth 0
;;    pred:       18
  _3 = day1_12(D) < day2_13(D);
  _19 = (char) _3;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 21>; [INV]
;;    succ:       21

;;   basic block 20, loop depth 0
;;    pred:       18
  _18 = -1;
;;    succ:       21

;;   basic block 21, loop depth 0
;;    pred:       5
;;                7
;;                12
;;                14
;;                17
;;                19
;;                20
  # _4 = PHI <_23(5), _21(7), _16(12), _20(14), _17(17), _19(19), _18(20)>
<L20>:
  return _4;
;;    succ:       EXIT

}



Partition map 

Partition 1 (_1 - 1 )
Partition 2 (_2 - 2 )
Partition 3 (_3 - 3 )
Partition 4 (_4 - 4 )
Partition 7 (usedFlag_7(D) - 7 )
Partition 8 (year1_8(D) - 8 )
Partition 9 (year2_9(D) - 9 )
Partition 10 (month1_10(D) - 10 )
Partition 11 (month2_11(D) - 11 )
Partition 12 (day1_12(D) - 12 )
Partition 13 (day2_13(D) - 13 )
Partition 14 (time1_14(D) - 14 )
Partition 15 (time2_15(D) - 15 )
Partition 16 (_16 - 16 )
Partition 17 (_17 - 17 )
Partition 18 (_18 - 18 )
Partition 19 (_19 - 19 )
Partition 20 (_20 - 20 )
Partition 21 (_21 - 21 )
Partition 23 (_23 - 23 )
Partition 25 (_25 - 25 )
Partition 26 (_26 - 26 )
Partition 27 (_27 - 27 )
Partition 28 (_28 - 28 )
Partition 29 (_29 - 29 )
Partition 30 (_30 - 30 )
Partition 31 (_31 - 31 )
Partition 32 (_32 - 32 )
Partition 33 (_33 - 33 )
Partition 34 (_34 - 34 )
Partition 36 (_36(D) - 36 )


Coalescible Partition map 

Partition 0, base 0 (_4 - 4 16 17 18 19 20 21 23 )
Partition 1, base 1 (usedFlag_7(D) - 7 )
Partition 2, base 2 (year1_8(D) - 8 )
Partition 3, base 3 (year2_9(D) - 9 )
Partition 4, base 4 (month1_10(D) - 10 )
Partition 5, base 5 (month2_11(D) - 11 )
Partition 6, base 6 (day1_12(D) - 12 )
Partition 7, base 7 (day2_13(D) - 13 )
Partition 8, base 8 (time1_14(D) - 14 )
Partition 9, base 9 (time2_15(D) - 15 )
Partition 17, base 10 (_36(D) - 36 )


Partition map 

Partition 0 (_4 - 4 )
Partition 1 (usedFlag_7(D) - 7 )
Partition 2 (year1_8(D) - 8 )
Partition 3 (year2_9(D) - 9 )
Partition 4 (month1_10(D) - 10 )
Partition 5 (month2_11(D) - 11 )
Partition 6 (day1_12(D) - 12 )
Partition 7 (day2_13(D) - 13 )
Partition 8 (time1_14(D) - 14 )
Partition 9 (time2_15(D) - 15 )
Partition 10 (_16 - 16 )
Partition 11 (_17 - 17 )
Partition 12 (_18 - 18 )
Partition 13 (_19 - 19 )
Partition 14 (_20 - 20 )
Partition 15 (_21 - 21 )
Partition 16 (_23 - 23 )
Partition 17 (_36(D) - 36 )


Conflict graph:

After sorting:
Sorted Coalesce list:
(10000, 0) _4 <-> _23
(10000, 0) _4 <-> _21
(10000, 0) _4 <-> _16
(10000, 0) _4 <-> _20
(10000, 0) _4 <-> _17
(10000, 0) _4 <-> _19
(10000, 0) _4 <-> _18

Partition map 

Partition 0 (_4 - 4 )
Partition 1 (usedFlag_7(D) - 7 )
Partition 2 (year1_8(D) - 8 )
Partition 3 (year2_9(D) - 9 )
Partition 4 (month1_10(D) - 10 )
Partition 5 (month2_11(D) - 11 )
Partition 6 (day1_12(D) - 12 )
Partition 7 (day2_13(D) - 13 )
Partition 8 (time1_14(D) - 14 )
Partition 9 (time2_15(D) - 15 )
Partition 10 (_16 - 16 )
Partition 11 (_17 - 17 )
Partition 12 (_18 - 18 )
Partition 13 (_19 - 19 )
Partition 14 (_20 - 20 )
Partition 15 (_21 - 21 )
Partition 16 (_23 - 23 )
Partition 17 (_36(D) - 36 )

Coalesce list: (4)_4 & (23)_23 [map: 0, 16] : Success -> 0
Coalesce list: (4)_4 & (21)_21 [map: 0, 15] : Success -> 0
Coalesce list: (4)_4 & (16)_16 [map: 0, 10] : Success -> 0
Coalesce list: (4)_4 & (20)_20 [map: 0, 14] : Success -> 0
Coalesce list: (4)_4 & (17)_17 [map: 0, 11] : Success -> 0
Coalesce list: (4)_4 & (19)_19 [map: 0, 13] : Success -> 0
Coalesce list: (4)_4 & (18)_18 [map: 0, 12] : Success -> 0
After Coalescing:

Partition map 

Partition 0 (_1 - 1 )
Partition 1 (_2 - 2 )
Partition 2 (_3 - 3 )
Partition 3 (_4 - 4 16 17 18 19 20 21 23 )
Partition 4 (usedFlag_7(D) - 7 )
Partition 5 (year1_8(D) - 8 )
Partition 6 (year2_9(D) - 9 )
Partition 7 (month1_10(D) - 10 )
Partition 8 (month2_11(D) - 11 )
Partition 9 (day1_12(D) - 12 )
Partition 10 (day2_13(D) - 13 )
Partition 11 (time1_14(D) - 14 )
Partition 12 (time2_15(D) - 15 )
Partition 13 (_25 - 25 )
Partition 14 (_26 - 26 )
Partition 15 (_27 - 27 )
Partition 16 (_28 - 28 )
Partition 17 (_29 - 29 )
Partition 18 (_30 - 30 )
Partition 19 (_31 - 31 )
Partition 20 (_32 - 32 )
Partition 21 (_33 - 33 )
Partition 22 (_34 - 34 )
Partition 23 (_36(D) - 36 )

dateCmp (size_t year1, size_t year2, size_t month1, size_t day1, size_t month2, size_t day2, char * usedFlag, size_t time1, size_t time2)
{
  char D.3493;
  char _1;
  _Bool _2;
  _Bool _3;
  char _4;
  char _16;
  char _17;
  char _18;
  char _19;
  char _20;
  char _21;
  char _23;
  unsigned long _25;
  unsigned long _26;
  unsigned long _27;
  signed char * _28;
  signed char _29;
  _Bool _30;
  unsigned long _31;
  signed char _32;
  _Bool _33;
  _Bool _34;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _25 = (unsigned long) usedFlag_7(D);
  _26 = _25 >> 3;
  _27 = _26 + 2147450880;
  _28 = (signed char *) _27;
  _29 = *_28;
  _30 = _29 != 0;
  _31 = _25 & 7;
  _32 = (signed char) _31;
  _33 = _32 >= _29;
  _34 = _30 & _33;
  if (_34 != 0)
    goto <bb 3>; [0.05%]
  else
    goto <bb 4>; [99.95%]
;;    succ:       4
;;                3

;;   basic block 3, loop depth 0
;;    pred:       2
  __builtin___asan_report_load1 (_25);
;;    succ:      

;;   basic block 4, loop depth 0
;;    pred:       2
  _1 = *usedFlag_7(D);
  if (_1 == 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]
;;    succ:       5
;;                6

;;   basic block 5, loop depth 0
;;    pred:       4
  *usedFlag_7(D) = 1;
  _23 = -1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 21>; [INV]
;;    succ:       21

;;   basic block 6, loop depth 0
;;    pred:       4
  if (year1_8(D) < year2_9(D))
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]
;;    succ:       7
;;                8

;;   basic block 7, loop depth 0
;;    pred:       6
  _21 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 21>; [INV]
;;    succ:       21

;;   basic block 8, loop depth 0
;;    pred:       6
  if (month1_10(D) == month2_11(D))
    goto <bb 9>; [INV]
  else
    goto <bb 13>; [INV]
;;    succ:       9
;;                13

;;   basic block 9, loop depth 0
;;    pred:       8
  if (day1_12(D) == day2_13(D))
    goto <bb 10>; [INV]
  else
    goto <bb 13>; [INV]
;;    succ:       10
;;                13

;;   basic block 10, loop depth 0
;;    pred:       9
  if (year1_8(D) == year2_9(D))
    goto <bb 11>; [INV]
  else
    goto <bb 13>; [INV]
;;    succ:       11
;;                13

;;   basic block 11, loop depth 0
;;    pred:       10
  if (time1_14(D) == time2_15(D))
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]
;;    succ:       12
;;                13

;;   basic block 12, loop depth 0
;;    pred:       11
  _16 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 21>; [INV]
;;    succ:       21

;;   basic block 13, loop depth 0
;;    pred:       8
;;                9
;;                10
;;                11
  if (month1_10(D) < month2_11(D))
    goto <bb 14>; [INV]
  else
    goto <bb 15>; [INV]
;;    succ:       14
;;                15

;;   basic block 14, loop depth 0
;;    pred:       13
  _20 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 21>; [INV]
;;    succ:       21

;;   basic block 15, loop depth 0
;;    pred:       13
  if (month1_10(D) == month2_11(D))
    goto <bb 16>; [INV]
  else
    goto <bb 18>; [INV]
;;    succ:       16
;;                18

;;   basic block 16, loop depth 0
;;    pred:       15
  if (day1_12(D) == day2_13(D))
    goto <bb 17>; [INV]
  else
    goto <bb 18>; [INV]
;;    succ:       17
;;                18

;;   basic block 17, loop depth 0
;;    pred:       16
  _2 = time1_14(D) < time2_15(D);
  _17 = (char) _2;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 21>; [INV]
;;    succ:       21

;;   basic block 18, loop depth 0
;;    pred:       15
;;                16
  if (month1_10(D) == month2_11(D))
    goto <bb 19>; [INV]
  else
    goto <bb 20>; [INV]
;;    succ:       19
;;                20

;;   basic block 19, loop depth 0
;;    pred:       18
  _3 = day1_12(D) < day2_13(D);
  _19 = (char) _3;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 21>; [INV]
;;    succ:       21

;;   basic block 20, loop depth 0
;;    pred:       18
  _18 = -1;
;;    succ:       21

;;   basic block 21, loop depth 0
;;    pred:       5
;;                7
;;                12
;;                14
;;                17
;;                19
;;                20
  # _4 = PHI <_23(5), _21(7), _16(12), _20(14), _17(17), _19(19), _18(20)>
<L20>:
  return _4;
;;    succ:       EXIT

}



;; Generating RTL for gimple basic block 2

;; _25 = (unsigned long) usedFlag_7(D);

(insn 11 10 0 (set (reg:DI 86 [ _25 ])
        (mem/f/c:DI (reg/f:DI 76 virtual-incoming-args) [3 usedFlag+0 S8 A64])) "queryTAD.c":49:8 -1
     (nil))

;; _26 = _25 >> 3;

(insn 12 11 0 (parallel [
            (set (reg:DI 87 [ _26 ])
                (lshiftrt:DI (reg:DI 86 [ _25 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":49:8 -1
     (nil))

;; _27 = _26 + 2147450880;

(insn 13 12 0 (parallel [
            (set (reg:DI 88 [ _27 ])
                (plus:DI (reg:DI 87 [ _26 ])
                    (const_int 2147450880 [0x7fff8000])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":49:8 -1
     (nil))

;; _28 = (signed char *) _27;

(insn 14 13 0 (set (reg/f:DI 89 [ _28 ])
        (reg:DI 88 [ _27 ])) "queryTAD.c":49:8 -1
     (nil))

;; _29 = *_28;

(insn 15 14 0 (set (reg:QI 90 [ _29 ])
        (mem:QI (reg/f:DI 89 [ _28 ]) [10 *_28+0 S1 A8])) "queryTAD.c":49:8 -1
     (nil))

;; _30 = _29 != 0;

(insn 16 15 17 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 90 [ _29 ])
            (const_int 0 [0]))) "queryTAD.c":49:8 -1
     (nil))

(insn 17 16 0 (set (reg:QI 91 [ _30 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) "queryTAD.c":49:8 -1
     (nil))

;; _31 = _25 & 7;

(insn 18 17 0 (parallel [
            (set (reg:DI 92 [ _31 ])
                (and:DI (reg:DI 86 [ _25 ])
                    (const_int 7 [0x7])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":49:8 -1
     (nil))

;; _32 = (signed char) _31;

(insn 19 18 0 (set (reg:QI 93 [ _32 ])
        (subreg:QI (reg:DI 92 [ _31 ]) 0)) "queryTAD.c":49:8 -1
     (nil))

;; _33 = _32 >= _29;

(insn 20 19 21 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:QI 93 [ _32 ])
            (reg:QI 90 [ _29 ]))) "queryTAD.c":49:8 -1
     (nil))

(insn 21 20 0 (set (reg:QI 94 [ _33 ])
        (ge:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "queryTAD.c":49:8 -1
     (nil))

;; _34 = _30 & _33;

(insn 22 21 0 (parallel [
            (set (reg:QI 95 [ _34 ])
                (and:QI (reg:QI 91 [ _30 ])
                    (reg:QI 94 [ _33 ])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":49:8 -1
     (nil))

;; if (_34 != 0)

(insn 23 22 24 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 95 [ _34 ])
            (const_int 0 [0]))) "queryTAD.c":49:8 -1
     (nil))

(jump_insn 24 23 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "queryTAD.c":49:8 -1
     (nil))

;; Generating RTL for gimple basic block 3

;; __builtin___asan_report_load1 (_25);

(insn 26 25 27 (set (reg:DI 5 di)
        (reg:DI 86 [ _25 ])) "queryTAD.c":49:8 -1
     (nil))

(call_insn 27 26 28 (call (mem:QI (symbol_ref:DI ("__asan_report_load1") [flags 0x41]  <function_decl 0x7fc58eea5600 __builtin___asan_report_load1>) [0 __builtin___asan_report_load1 S1 A8])
        (const_int 0 [0])) "queryTAD.c":49:8 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

(barrier 28 27 0)

;; Generating RTL for gimple basic block 4

;; 

(code_label 29 28 30 38 (nil) [0 uses])

(note 30 29 0 NOTE_INSN_BASIC_BLOCK)

;; _1 = *usedFlag_7(D);

(insn 31 30 32 (set (reg/f:DI 97)
        (mem/f/c:DI (reg/f:DI 76 virtual-incoming-args) [3 usedFlag+0 S8 A64])) "queryTAD.c":49:8 -1
     (nil))

(insn 32 31 0 (set (reg:QI 82 [ _1 ])
        (mem:QI (reg/f:DI 97) [0 *usedFlag_7(D)+0 S1 A8])) "queryTAD.c":49:8 -1
     (nil))

;; if (_1 == 0)

(insn 33 32 34 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 82 [ _1 ])
            (const_int 0 [0]))) "queryTAD.c":49:7 -1
     (nil))

(jump_insn 34 33 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "queryTAD.c":49:7 -1
     (nil))

;; Generating RTL for gimple basic block 5

;; *usedFlag_7(D) = 1;

(insn 36 35 37 (set (reg/f:DI 98)
        (mem/f/c:DI (reg/f:DI 76 virtual-incoming-args) [3 usedFlag+0 S8 A64])) "queryTAD.c":50:19 -1
     (nil))

(insn 37 36 0 (set (mem:QI (reg/f:DI 98) [0 *usedFlag_7(D)+0 S1 A8])
        (const_int 1 [0x1])) "queryTAD.c":50:19 -1
     (nil))

;; _23 = -1;

(insn 38 37 0 (set (reg:QI 85 [ _4 ])
        (const_int -1 [0xffffffffffffffff])) "queryTAD.c":51:16 -1
     (nil))

;; // predicted unlikely by early return (on trees) predictor.

(nil)

;; Generating RTL for gimple basic block 6

;; 

(code_label 41 40 42 39 (nil) [0 uses])

(note 42 41 0 NOTE_INSN_BASIC_BLOCK)

;; if (year1_8(D) < year2_9(D))

(insn 43 42 44 (set (reg:DI 99)
        (mem/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [2 year1+0 S8 A64])) "queryTAD.c":53:8 -1
     (nil))

(insn 44 43 45 (set (reg:CC 17 flags)
        (compare:CC (reg:DI 99)
            (mem/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])) [2 year2+0 S8 A64]))) "queryTAD.c":53:8 -1
     (nil))

(jump_insn 45 44 0 (set (pc)
        (if_then_else (geu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "queryTAD.c":53:8 -1
     (nil))

;; Generating RTL for gimple basic block 7

;; _21 = 1;

(insn 47 46 0 (set (reg:QI 85 [ _4 ])
        (const_int 1 [0x1])) "queryTAD.c":54:16 -1
     (nil))

;; // predicted unlikely by early return (on trees) predictor.

(nil)

;; Generating RTL for gimple basic block 8

;; 

(code_label 50 49 51 41 (nil) [0 uses])

(note 51 50 0 NOTE_INSN_BASIC_BLOCK)

;; if (month1_10(D) == month2_11(D))

(insn 52 51 53 (set (reg:DI 100)
        (mem/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [2 month1+0 S8 A64])) "queryTAD.c":56:7 -1
     (nil))

(insn 53 52 54 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 100)
            (mem/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -40 [0xffffffffffffffd8])) [2 month2+0 S8 A64]))) "queryTAD.c":56:7 -1
     (nil))

(jump_insn 54 53 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "queryTAD.c":56:7 -1
     (nil))

;; Generating RTL for gimple basic block 9

;; if (day1_12(D) == day2_13(D))

(insn 56 55 57 (set (reg:DI 101)
        (mem/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [2 day1+0 S8 A64])) "queryTAD.c":56:25 -1
     (nil))

(insn 57 56 58 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 101)
            (mem/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -48 [0xffffffffffffffd0])) [2 day2+0 S8 A64]))) "queryTAD.c":56:25 -1
     (nil))

(jump_insn 58 57 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "queryTAD.c":56:25 -1
     (nil))

;; Generating RTL for gimple basic block 10

;; if (year1_8(D) == year2_9(D))

(insn 60 59 61 (set (reg:DI 102)
        (mem/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [2 year1+0 S8 A64])) "queryTAD.c":56:39 -1
     (nil))

(insn 61 60 62 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 102)
            (mem/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])) [2 year2+0 S8 A64]))) "queryTAD.c":56:39 -1
     (nil))

(jump_insn 62 61 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "queryTAD.c":56:39 -1
     (nil))

;; Generating RTL for gimple basic block 11

;; if (time1_14(D) == time2_15(D))

(insn 64 63 65 (set (reg:DI 103)
        (mem/c:DI (plus:DI (reg/f:DI 76 virtual-incoming-args)
                (const_int 8 [0x8])) [2 time1+0 S8 A64])) "queryTAD.c":56:55 -1
     (nil))

(insn 65 64 66 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 103)
            (mem/c:DI (plus:DI (reg/f:DI 76 virtual-incoming-args)
                    (const_int 16 [0x10])) [2 time2+0 S8 A64]))) "queryTAD.c":56:55 -1
     (nil))

(jump_insn 66 65 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "queryTAD.c":56:55 -1
     (nil))

;; Generating RTL for gimple basic block 12

;; _16 = 0;

(insn 68 67 0 (set (reg:QI 85 [ _4 ])
        (const_int 0 [0])) "queryTAD.c":57:16 -1
     (nil))

;; // predicted unlikely by early return (on trees) predictor.

(nil)

;; Generating RTL for gimple basic block 13

;; 

(code_label 71 70 72 42 (nil) [0 uses])

(note 72 71 0 NOTE_INSN_BASIC_BLOCK)

;; if (month1_10(D) < month2_11(D))

(insn 73 72 74 (set (reg:DI 104)
        (mem/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [2 month1+0 S8 A64])) "queryTAD.c":59:8 -1
     (nil))

(insn 74 73 75 (set (reg:CC 17 flags)
        (compare:CC (reg:DI 104)
            (mem/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -40 [0xffffffffffffffd8])) [2 month2+0 S8 A64]))) "queryTAD.c":59:8 -1
     (nil))

(jump_insn 75 74 0 (set (pc)
        (if_then_else (geu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "queryTAD.c":59:8 -1
     (nil))

;; Generating RTL for gimple basic block 14

;; _20 = 1;

(insn 77 76 0 (set (reg:QI 85 [ _4 ])
        (const_int 1 [0x1])) "queryTAD.c":60:16 -1
     (nil))

;; // predicted unlikely by early return (on trees) predictor.

(nil)

;; Generating RTL for gimple basic block 15

;; 

(code_label 80 79 81 43 (nil) [0 uses])

(note 81 80 0 NOTE_INSN_BASIC_BLOCK)

;; if (month1_10(D) == month2_11(D))

(insn 82 81 83 (set (reg:DI 105)
        (mem/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [2 month1+0 S8 A64])) "queryTAD.c":62:7 -1
     (nil))

(insn 83 82 84 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 105)
            (mem/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -40 [0xffffffffffffffd8])) [2 month2+0 S8 A64]))) "queryTAD.c":62:7 -1
     (nil))

(jump_insn 84 83 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "queryTAD.c":62:7 -1
     (nil))

;; Generating RTL for gimple basic block 16

;; if (day1_12(D) == day2_13(D))

(insn 86 85 87 (set (reg:DI 106)
        (mem/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [2 day1+0 S8 A64])) "queryTAD.c":62:25 -1
     (nil))

(insn 87 86 88 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 106)
            (mem/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -48 [0xffffffffffffffd0])) [2 day2+0 S8 A64]))) "queryTAD.c":62:25 -1
     (nil))

(jump_insn 88 87 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "queryTAD.c":62:25 -1
     (nil))

;; Generating RTL for gimple basic block 17

;; _2 = time1_14(D) < time2_15(D);

(insn 90 89 91 (set (reg:DI 107)
        (mem/c:DI (plus:DI (reg/f:DI 76 virtual-incoming-args)
                (const_int 8 [0x8])) [2 time1+0 S8 A64])) "queryTAD.c":63:21 -1
     (nil))

(insn 91 90 92 (set (reg:CC 17 flags)
        (compare:CC (reg:DI 107)
            (mem/c:DI (plus:DI (reg/f:DI 76 virtual-incoming-args)
                    (const_int 16 [0x10])) [2 time2+0 S8 A64]))) "queryTAD.c":63:21 -1
     (nil))

(insn 92 91 0 (set (reg:QI 83 [ _2 ])
        (ltu:QI (reg:CC 17 flags)
            (const_int 0 [0]))) "queryTAD.c":63:21 -1
     (nil))

;; _17 = (char) _2;

(insn 93 92 0 (set (reg:QI 85 [ _4 ])
        (reg:QI 83 [ _2 ])) "queryTAD.c":63:21 -1
     (nil))

;; // predicted unlikely by early return (on trees) predictor.

(nil)

;; Generating RTL for gimple basic block 18

;; 

(code_label 96 95 97 44 (nil) [0 uses])

(note 97 96 0 NOTE_INSN_BASIC_BLOCK)

;; if (month1_10(D) == month2_11(D))

(insn 98 97 99 (set (reg:DI 108)
        (mem/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [2 month1+0 S8 A64])) "queryTAD.c":65:8 -1
     (nil))

(insn 99 98 100 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 108)
            (mem/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -40 [0xffffffffffffffd8])) [2 month2+0 S8 A64]))) "queryTAD.c":65:8 -1
     (nil))

(jump_insn 100 99 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "queryTAD.c":65:8 -1
     (nil))

;; Generating RTL for gimple basic block 19

;; _3 = day1_12(D) < day2_13(D);

(insn 102 101 103 (set (reg:DI 109)
        (mem/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [2 day1+0 S8 A64])) "queryTAD.c":66:21 -1
     (nil))

(insn 103 102 104 (set (reg:CC 17 flags)
        (compare:CC (reg:DI 109)
            (mem/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -48 [0xffffffffffffffd0])) [2 day2+0 S8 A64]))) "queryTAD.c":66:21 -1
     (nil))

(insn 104 103 0 (set (reg:QI 84 [ _3 ])
        (ltu:QI (reg:CC 17 flags)
            (const_int 0 [0]))) "queryTAD.c":66:21 -1
     (nil))

;; _19 = (char) _3;

(insn 105 104 0 (set (reg:QI 85 [ _4 ])
        (reg:QI 84 [ _3 ])) "queryTAD.c":66:21 -1
     (nil))

;; // predicted unlikely by early return (on trees) predictor.

(nil)

;; Generating RTL for gimple basic block 20

;; 

(code_label 108 107 109 45 (nil) [0 uses])

(note 109 108 0 NOTE_INSN_BASIC_BLOCK)

;; _18 = -1;

(insn 110 109 0 (set (reg:QI 85 [ _4 ])
        (const_int -1 [0xffffffffffffffff])) "queryTAD.c":68:12 -1
     (nil))

;; Generating RTL for gimple basic block 21

;; <L20>:

(code_label 111 110 112 40 (nil) [0 uses])

(note 112 111 0 NOTE_INSN_BASIC_BLOCK)

;; return _4;

(insn 113 112 114 (set (reg:QI 96 [ <retval> ])
        (reg:QI 85 [ _4 ])) -1
     (nil))

(jump_insn 114 113 115 (set (pc)
        (label_ref 0)) -1
     (nil))

(barrier 115 114 0)


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Removing jump 114.
Merging block 23 into block 22...
Merged blocks 22 and 23.
Merged 22 and 23 without moving.


try_optimize_cfg iteration 2

fix_loop_structure: fixing up loops for function


;;
;; Full RTL generated for this function:
;;
(note 1 0 9 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 4, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 9 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 9 3 2 (set (mem/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [2 year1+0 S8 A64])
        (reg:DI 5 di [ year1 ])) "queryTAD.c":48:149 -1
     (nil))
(insn 3 2 4 2 (set (mem/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [2 year2+0 S8 A64])
        (reg:DI 4 si [ year2 ])) "queryTAD.c":48:149 -1
     (nil))
(insn 4 3 5 2 (set (mem/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [2 month1+0 S8 A64])
        (reg:DI 1 dx [ month1 ])) "queryTAD.c":48:149 -1
     (nil))
(insn 5 4 6 2 (set (mem/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [2 day1+0 S8 A64])
        (reg:DI 2 cx [ day1 ])) "queryTAD.c":48:149 -1
     (nil))
(insn 6 5 7 2 (set (mem/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [2 month2+0 S8 A64])
        (reg:DI 36 r8 [ month2 ])) "queryTAD.c":48:149 -1
     (nil))
(insn 7 6 8 2 (set (mem/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [2 day2+0 S8 A64])
        (reg:DI 37 r9 [ day2 ])) "queryTAD.c":48:149 -1
     (nil))
(note 8 7 11 2 NOTE_INSN_FUNCTION_BEG)
(insn 11 8 12 2 (set (reg:DI 86 [ _25 ])
        (mem/f/c:DI (reg/f:DI 76 virtual-incoming-args) [3 usedFlag+0 S8 A64])) "queryTAD.c":49:8 -1
     (nil))
(insn 12 11 13 2 (parallel [
            (set (reg:DI 87 [ _26 ])
                (lshiftrt:DI (reg:DI 86 [ _25 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":49:8 -1
     (nil))
(insn 13 12 14 2 (parallel [
            (set (reg:DI 88 [ _27 ])
                (plus:DI (reg:DI 87 [ _26 ])
                    (const_int 2147450880 [0x7fff8000])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":49:8 -1
     (nil))
(insn 14 13 15 2 (set (reg/f:DI 89 [ _28 ])
        (reg:DI 88 [ _27 ])) "queryTAD.c":49:8 -1
     (nil))
(insn 15 14 16 2 (set (reg:QI 90 [ _29 ])
        (mem:QI (reg/f:DI 89 [ _28 ]) [10 *_28+0 S1 A8])) "queryTAD.c":49:8 -1
     (nil))
(insn 16 15 17 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 90 [ _29 ])
            (const_int 0 [0]))) "queryTAD.c":49:8 -1
     (nil))
(insn 17 16 18 2 (set (reg:QI 91 [ _30 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) "queryTAD.c":49:8 -1
     (nil))
(insn 18 17 19 2 (parallel [
            (set (reg:DI 92 [ _31 ])
                (and:DI (reg:DI 86 [ _25 ])
                    (const_int 7 [0x7])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":49:8 -1
     (nil))
(insn 19 18 20 2 (set (reg:QI 93 [ _32 ])
        (subreg:QI (reg:DI 92 [ _31 ]) 0)) "queryTAD.c":49:8 -1
     (nil))
(insn 20 19 21 2 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:QI 93 [ _32 ])
            (reg:QI 90 [ _29 ]))) "queryTAD.c":49:8 -1
     (nil))
(insn 21 20 22 2 (set (reg:QI 94 [ _33 ])
        (ge:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "queryTAD.c":49:8 -1
     (nil))
(insn 22 21 23 2 (parallel [
            (set (reg:QI 95 [ _34 ])
                (and:QI (reg:QI 91 [ _30 ])
                    (reg:QI 94 [ _33 ])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":49:8 -1
     (nil))
(insn 23 22 24 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 95 [ _34 ])
            (const_int 0 [0]))) "queryTAD.c":49:8 -1
     (nil))
(jump_insn 24 23 25 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 29)
            (pc))) "queryTAD.c":49:8 -1
     (nil)
 -> 29)
;;  succ:       5 [100.0% (guessed)] 
;;              4 [0.0% (guessed)]  (FALLTHRU)

;; basic block 4, loop depth 0, maybe hot
;;  prev block 2, next block 5, flags: (NEW, REACHABLE, RTL)
;;  pred:       2 [0.0% (guessed)]  (FALLTHRU)
(note 25 24 26 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 26 25 27 4 (set (reg:DI 5 di)
        (reg:DI 86 [ _25 ])) "queryTAD.c":49:8 -1
     (nil))
(call_insn 27 26 28 4 (call (mem:QI (symbol_ref:DI ("__asan_report_load1") [flags 0x41]  <function_decl 0x7fc58eea5600 __builtin___asan_report_load1>) [0 __builtin___asan_report_load1 S1 A8])
        (const_int 0 [0])) "queryTAD.c":49:8 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:      

(barrier 28 27 29)
;; basic block 5, loop depth 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL)
;;  pred:       2 [100.0% (guessed)] 
(code_label 29 28 30 5 38 (nil) [1 uses])
(note 30 29 31 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 31 30 32 5 (set (reg/f:DI 97)
        (mem/f/c:DI (reg/f:DI 76 virtual-incoming-args) [3 usedFlag+0 S8 A64])) "queryTAD.c":49:8 -1
     (nil))
(insn 32 31 33 5 (set (reg:QI 82 [ _1 ])
        (mem:QI (reg/f:DI 97) [0 *usedFlag_7(D)+0 S1 A8])) "queryTAD.c":49:8 -1
     (nil))
(insn 33 32 34 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 82 [ _1 ])
            (const_int 0 [0]))) "queryTAD.c":49:7 -1
     (nil))
(jump_insn 34 33 35 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 41)
            (pc))) "queryTAD.c":49:7 -1
     (nil)
 -> 41)
;;  succ:       6 (FALLTHRU)
;;              7

;; basic block 6, loop depth 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL)
;;  pred:       5 (FALLTHRU)
(note 35 34 36 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 36 35 37 6 (set (reg/f:DI 98)
        (mem/f/c:DI (reg/f:DI 76 virtual-incoming-args) [3 usedFlag+0 S8 A64])) "queryTAD.c":50:19 -1
     (nil))
(insn 37 36 38 6 (set (mem:QI (reg/f:DI 98) [0 *usedFlag_7(D)+0 S1 A8])
        (const_int 1 [0x1])) "queryTAD.c":50:19 -1
     (nil))
(insn 38 37 39 6 (set (reg:QI 85 [ _4 ])
        (const_int -1 [0xffffffffffffffff])) "queryTAD.c":51:16 -1
     (nil))
(jump_insn 39 38 40 6 (set (pc)
        (label_ref 111)) "queryTAD.c":51:16 -1
     (nil)
 -> 111)
;;  succ:       22

(barrier 40 39 41)
;; basic block 7, loop depth 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL)
;;  pred:       5
(code_label 41 40 42 7 39 (nil) [1 uses])
(note 42 41 43 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 43 42 44 7 (set (reg:DI 99)
        (mem/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [2 year1+0 S8 A64])) "queryTAD.c":53:8 -1
     (nil))
(insn 44 43 45 7 (set (reg:CC 17 flags)
        (compare:CC (reg:DI 99)
            (mem/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])) [2 year2+0 S8 A64]))) "queryTAD.c":53:8 -1
     (nil))
(jump_insn 45 44 46 7 (set (pc)
        (if_then_else (geu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 50)
            (pc))) "queryTAD.c":53:8 -1
     (nil)
 -> 50)
;;  succ:       8 (FALLTHRU)
;;              9

;; basic block 8, loop depth 0, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL)
;;  pred:       7 (FALLTHRU)
(note 46 45 47 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 47 46 48 8 (set (reg:QI 85 [ _4 ])
        (const_int 1 [0x1])) "queryTAD.c":54:16 -1
     (nil))
(jump_insn 48 47 49 8 (set (pc)
        (label_ref 111)) "queryTAD.c":54:16 -1
     (nil)
 -> 111)
;;  succ:       22

(barrier 49 48 50)
;; basic block 9, loop depth 0, maybe hot
;;  prev block 8, next block 10, flags: (NEW, REACHABLE, RTL)
;;  pred:       7
(code_label 50 49 51 9 41 (nil) [1 uses])
(note 51 50 52 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 52 51 53 9 (set (reg:DI 100)
        (mem/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [2 month1+0 S8 A64])) "queryTAD.c":56:7 -1
     (nil))
(insn 53 52 54 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 100)
            (mem/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -40 [0xffffffffffffffd8])) [2 month2+0 S8 A64]))) "queryTAD.c":56:7 -1
     (nil))
(jump_insn 54 53 55 9 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 71)
            (pc))) "queryTAD.c":56:7 -1
     (nil)
 -> 71)
;;  succ:       10 (FALLTHRU)
;;              14

;; basic block 10, loop depth 0, maybe hot
;;  prev block 9, next block 11, flags: (NEW, REACHABLE, RTL)
;;  pred:       9 (FALLTHRU)
(note 55 54 56 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 56 55 57 10 (set (reg:DI 101)
        (mem/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [2 day1+0 S8 A64])) "queryTAD.c":56:25 -1
     (nil))
(insn 57 56 58 10 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 101)
            (mem/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -48 [0xffffffffffffffd0])) [2 day2+0 S8 A64]))) "queryTAD.c":56:25 -1
     (nil))
(jump_insn 58 57 59 10 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 71)
            (pc))) "queryTAD.c":56:25 -1
     (nil)
 -> 71)
;;  succ:       11 (FALLTHRU)
;;              14

;; basic block 11, loop depth 0, maybe hot
;;  prev block 10, next block 12, flags: (NEW, REACHABLE, RTL)
;;  pred:       10 (FALLTHRU)
(note 59 58 60 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 60 59 61 11 (set (reg:DI 102)
        (mem/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [2 year1+0 S8 A64])) "queryTAD.c":56:39 -1
     (nil))
(insn 61 60 62 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 102)
            (mem/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])) [2 year2+0 S8 A64]))) "queryTAD.c":56:39 -1
     (nil))
(jump_insn 62 61 63 11 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 71)
            (pc))) "queryTAD.c":56:39 -1
     (nil)
 -> 71)
;;  succ:       12 (FALLTHRU)
;;              14

;; basic block 12, loop depth 0, maybe hot
;;  prev block 11, next block 13, flags: (NEW, REACHABLE, RTL)
;;  pred:       11 (FALLTHRU)
(note 63 62 64 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 64 63 65 12 (set (reg:DI 103)
        (mem/c:DI (plus:DI (reg/f:DI 76 virtual-incoming-args)
                (const_int 8 [0x8])) [2 time1+0 S8 A64])) "queryTAD.c":56:55 -1
     (nil))
(insn 65 64 66 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 103)
            (mem/c:DI (plus:DI (reg/f:DI 76 virtual-incoming-args)
                    (const_int 16 [0x10])) [2 time2+0 S8 A64]))) "queryTAD.c":56:55 -1
     (nil))
(jump_insn 66 65 67 12 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 71)
            (pc))) "queryTAD.c":56:55 -1
     (nil)
 -> 71)
;;  succ:       13 (FALLTHRU)
;;              14

;; basic block 13, loop depth 0, maybe hot
;;  prev block 12, next block 14, flags: (NEW, REACHABLE, RTL)
;;  pred:       12 (FALLTHRU)
(note 67 66 68 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 68 67 69 13 (set (reg:QI 85 [ _4 ])
        (const_int 0 [0])) "queryTAD.c":57:16 -1
     (nil))
(jump_insn 69 68 70 13 (set (pc)
        (label_ref 111)) "queryTAD.c":57:16 -1
     (nil)
 -> 111)
;;  succ:       22

(barrier 70 69 71)
;; basic block 14, loop depth 0, maybe hot
;;  prev block 13, next block 15, flags: (NEW, REACHABLE, RTL)
;;  pred:       9
;;              10
;;              11
;;              12
(code_label 71 70 72 14 42 (nil) [4 uses])
(note 72 71 73 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 73 72 74 14 (set (reg:DI 104)
        (mem/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [2 month1+0 S8 A64])) "queryTAD.c":59:8 -1
     (nil))
(insn 74 73 75 14 (set (reg:CC 17 flags)
        (compare:CC (reg:DI 104)
            (mem/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -40 [0xffffffffffffffd8])) [2 month2+0 S8 A64]))) "queryTAD.c":59:8 -1
     (nil))
(jump_insn 75 74 76 14 (set (pc)
        (if_then_else (geu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 80)
            (pc))) "queryTAD.c":59:8 -1
     (nil)
 -> 80)
;;  succ:       15 (FALLTHRU)
;;              16

;; basic block 15, loop depth 0, maybe hot
;;  prev block 14, next block 16, flags: (NEW, REACHABLE, RTL)
;;  pred:       14 (FALLTHRU)
(note 76 75 77 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 77 76 78 15 (set (reg:QI 85 [ _4 ])
        (const_int 1 [0x1])) "queryTAD.c":60:16 -1
     (nil))
(jump_insn 78 77 79 15 (set (pc)
        (label_ref 111)) "queryTAD.c":60:16 -1
     (nil)
 -> 111)
;;  succ:       22

(barrier 79 78 80)
;; basic block 16, loop depth 0, maybe hot
;;  prev block 15, next block 17, flags: (NEW, REACHABLE, RTL)
;;  pred:       14
(code_label 80 79 81 16 43 (nil) [1 uses])
(note 81 80 82 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 82 81 83 16 (set (reg:DI 105)
        (mem/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [2 month1+0 S8 A64])) "queryTAD.c":62:7 -1
     (nil))
(insn 83 82 84 16 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 105)
            (mem/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -40 [0xffffffffffffffd8])) [2 month2+0 S8 A64]))) "queryTAD.c":62:7 -1
     (nil))
(jump_insn 84 83 85 16 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 96)
            (pc))) "queryTAD.c":62:7 -1
     (nil)
 -> 96)
;;  succ:       17 (FALLTHRU)
;;              19

;; basic block 17, loop depth 0, maybe hot
;;  prev block 16, next block 18, flags: (NEW, REACHABLE, RTL)
;;  pred:       16 (FALLTHRU)
(note 85 84 86 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 86 85 87 17 (set (reg:DI 106)
        (mem/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [2 day1+0 S8 A64])) "queryTAD.c":62:25 -1
     (nil))
(insn 87 86 88 17 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 106)
            (mem/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -48 [0xffffffffffffffd0])) [2 day2+0 S8 A64]))) "queryTAD.c":62:25 -1
     (nil))
(jump_insn 88 87 89 17 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 96)
            (pc))) "queryTAD.c":62:25 -1
     (nil)
 -> 96)
;;  succ:       18 (FALLTHRU)
;;              19

;; basic block 18, loop depth 0, maybe hot
;;  prev block 17, next block 19, flags: (NEW, REACHABLE, RTL)
;;  pred:       17 (FALLTHRU)
(note 89 88 90 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 90 89 91 18 (set (reg:DI 107)
        (mem/c:DI (plus:DI (reg/f:DI 76 virtual-incoming-args)
                (const_int 8 [0x8])) [2 time1+0 S8 A64])) "queryTAD.c":63:21 -1
     (nil))
(insn 91 90 92 18 (set (reg:CC 17 flags)
        (compare:CC (reg:DI 107)
            (mem/c:DI (plus:DI (reg/f:DI 76 virtual-incoming-args)
                    (const_int 16 [0x10])) [2 time2+0 S8 A64]))) "queryTAD.c":63:21 -1
     (nil))
(insn 92 91 93 18 (set (reg:QI 83 [ _2 ])
        (ltu:QI (reg:CC 17 flags)
            (const_int 0 [0]))) "queryTAD.c":63:21 -1
     (nil))
(insn 93 92 94 18 (set (reg:QI 85 [ _4 ])
        (reg:QI 83 [ _2 ])) "queryTAD.c":63:21 -1
     (nil))
(jump_insn 94 93 95 18 (set (pc)
        (label_ref 111)) "queryTAD.c":63:21 -1
     (nil)
 -> 111)
;;  succ:       22

(barrier 95 94 96)
;; basic block 19, loop depth 0, maybe hot
;;  prev block 18, next block 20, flags: (NEW, REACHABLE, RTL)
;;  pred:       16
;;              17
(code_label 96 95 97 19 44 (nil) [2 uses])
(note 97 96 98 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 98 97 99 19 (set (reg:DI 108)
        (mem/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [2 month1+0 S8 A64])) "queryTAD.c":65:8 -1
     (nil))
(insn 99 98 100 19 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 108)
            (mem/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -40 [0xffffffffffffffd8])) [2 month2+0 S8 A64]))) "queryTAD.c":65:8 -1
     (nil))
(jump_insn 100 99 101 19 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 108)
            (pc))) "queryTAD.c":65:8 -1
     (nil)
 -> 108)
;;  succ:       20 (FALLTHRU)
;;              21

;; basic block 20, loop depth 0, maybe hot
;;  prev block 19, next block 21, flags: (NEW, REACHABLE, RTL)
;;  pred:       19 (FALLTHRU)
(note 101 100 102 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 102 101 103 20 (set (reg:DI 109)
        (mem/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [2 day1+0 S8 A64])) "queryTAD.c":66:21 -1
     (nil))
(insn 103 102 104 20 (set (reg:CC 17 flags)
        (compare:CC (reg:DI 109)
            (mem/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -48 [0xffffffffffffffd0])) [2 day2+0 S8 A64]))) "queryTAD.c":66:21 -1
     (nil))
(insn 104 103 105 20 (set (reg:QI 84 [ _3 ])
        (ltu:QI (reg:CC 17 flags)
            (const_int 0 [0]))) "queryTAD.c":66:21 -1
     (nil))
(insn 105 104 106 20 (set (reg:QI 85 [ _4 ])
        (reg:QI 84 [ _3 ])) "queryTAD.c":66:21 -1
     (nil))
(jump_insn 106 105 107 20 (set (pc)
        (label_ref 111)) "queryTAD.c":66:21 -1
     (nil)
 -> 111)
;;  succ:       22

(barrier 107 106 108)
;; basic block 21, loop depth 0, maybe hot
;;  prev block 20, next block 22, flags: (NEW, REACHABLE, RTL)
;;  pred:       19
(code_label 108 107 109 21 45 (nil) [1 uses])
(note 109 108 110 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 110 109 111 21 (set (reg:QI 85 [ _4 ])
        (const_int -1 [0xffffffffffffffff])) "queryTAD.c":68:12 -1
     (nil))
;;  succ:       22 (FALLTHRU)

;; basic block 22, loop depth 0, maybe hot
;;  prev block 21, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       6
;;              8
;;              13
;;              15
;;              18
;;              20
;;              21 (FALLTHRU)
(code_label 111 110 112 22 40 (nil) [6 uses])
(note 112 111 113 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 113 112 117 22 (set (reg:QI 96 [ <retval> ])
        (reg:QI 85 [ _4 ])) -1
     (nil))
(insn 117 113 118 22 (set (reg/i:QI 0 ax)
        (reg:QI 96 [ <retval> ])) "queryTAD.c":69:1 -1
     (nil))
(insn 118 117 0 22 (use (reg/i:QI 0 ax)) "queryTAD.c":69:1 -1
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)


;; Function addOldest (addOldest, funcdef_no=5, decl_uid=3382, cgraph_uid=6, symbol_order=5)

addOldest (struct queryCDT * q, size_t ID, size_t month, size_t dayN, size_t time, size_t pedestrians, size_t year)
{
  int c;
  struct TSensor * _1;
  long unsigned int _2;
  sizetype _3;
  struct TSensor * _4;
  long unsigned int _5;
  struct TSensor * _6;
  long unsigned int _7;
  sizetype _8;
  struct TSensor * _9;
  char * _10;
  struct TSensor * _11;
  long unsigned int _12;
  sizetype _13;
  struct TSensor * _14;
  long unsigned int _15;
  struct TSensor * _16;
  long unsigned int _17;
  sizetype _18;
  struct TSensor * _19;
  long unsigned int _20;
  struct TSensor * _21;
  long unsigned int _22;
  sizetype _23;
  struct TSensor * _24;
  long unsigned int _25;
  char _26;
  struct TSensor * _27;
  long unsigned int _28;
  sizetype _29;
  struct TSensor * _30;
  struct TSensor * _31;
  long unsigned int _32;
  sizetype _33;
  struct TSensor * _34;
  struct TSensor * _35;
  long unsigned int _36;
  sizetype _37;
  struct TSensor * _38;
  struct TSensor * _39;
  long unsigned int _40;
  sizetype _41;
  struct TSensor * _42;
  struct TSensor * _43;
  long unsigned int _44;
  sizetype _45;
  struct TSensor * _46;
  struct TSensor * * _63;
  size_t * _64;
  size_t * _65;
  size_t * _66;
  size_t * _67;
  struct TSensor * * _68;
  size_t * _69;
  size_t * _70;
  size_t * _71;
  size_t * _72;
  size_t * _73;
  unsigned long _85;
  unsigned long _86;
  unsigned long _87;
  signed char * _88;
  signed char _89;
  unsigned long _90;
  unsigned long _91;
  unsigned long _92;
  signed char * _93;
  signed char _94;
  unsigned long _95;
  unsigned long _96;
  unsigned long _97;
  signed char * _98;
  signed char _99;
  unsigned long _100;
  unsigned long _101;
  unsigned long _102;
  signed char * _103;
  signed char _104;
  unsigned long _105;
  unsigned long _106;
  unsigned long _107;
  signed char * _108;
  signed char _109;
  unsigned long _110;
  unsigned long _111;
  unsigned long _112;
  signed char * _113;
  signed char _114;
  unsigned long _115;
  unsigned long _116;
  unsigned long _117;
  signed char * _118;
  signed char _119;
  unsigned long _120;
  unsigned long _121;
  unsigned long _122;
  signed char * _123;
  signed char _124;
  unsigned long _125;
  unsigned long _126;
  unsigned long _127;
  signed char * _128;
  signed char _129;
  unsigned long _130;
  unsigned long _131;
  unsigned long _132;
  signed char * _133;
  signed char _134;
  unsigned long _135;
  unsigned long _136;
  unsigned long _137;
  signed char * _138;
  signed char _139;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _63 = &q_49(D)->sensorsID;
  _85 = (unsigned long) _63;
  _86 = _85 >> 3;
  _87 = _86 + 2147450880;
  _88 = (signed char *) _87;
  _89 = *_88;
  if (_89 != 0)
    goto <bb 3>; [0.05%]
  else
    goto <bb 4>; [99.95%]
;;    succ:       4
;;                3

;;   basic block 3, loop depth 0
;;    pred:       2
  __builtin___asan_report_load8 (_85);
;;    succ:      

;;   basic block 4, loop depth 0
;;    pred:       2
  _1 = q_49(D)->sensorsID;
  _2 = ID_50(D) * 80;
  _3 = _2 + 18446744073709551536;
  _4 = _1 + _3;
  _64 = &_4->oldest.time;
  _90 = (unsigned long) _64;
  _91 = _90 >> 3;
  _92 = _91 + 2147450880;
  _93 = (signed char *) _92;
  _94 = *_93;
  if (_94 != 0)
    goto <bb 5>; [0.05%]
  else
    goto <bb 6>; [99.95%]
;;    succ:       6
;;                5

;;   basic block 5, loop depth 0
;;    pred:       4
  __builtin___asan_report_load8 (_90);
;;    succ:      

;;   basic block 6, loop depth 0
;;    pred:       4
  _5 = _4->oldest.time;
  _6 = q_49(D)->sensorsID;
  _7 = ID_50(D) * 80;
  _8 = _7 + 18446744073709551536;
  _9 = _6 + _8;
  _10 = &_9->oldest.used;
  _11 = q_49(D)->sensorsID;
  _12 = ID_50(D) * 80;
  _13 = _12 + 18446744073709551536;
  _14 = _11 + _13;
  _65 = &_14->oldest.dayN;
  _95 = (unsigned long) _65;
  _96 = _95 >> 3;
  _97 = _96 + 2147450880;
  _98 = (signed char *) _97;
  _99 = *_98;
  if (_99 != 0)
    goto <bb 7>; [0.05%]
  else
    goto <bb 8>; [99.95%]
;;    succ:       8
;;                7

;;   basic block 7, loop depth 0
;;    pred:       6
  __builtin___asan_report_load8 (_95);
;;    succ:      

;;   basic block 8, loop depth 0
;;    pred:       6
  _15 = _14->oldest.dayN;
  _16 = q_49(D)->sensorsID;
  _17 = ID_50(D) * 80;
  _18 = _17 + 18446744073709551536;
  _19 = _16 + _18;
  _66 = &_19->oldest.month;
  _100 = (unsigned long) _66;
  _101 = _100 >> 3;
  _102 = _101 + 2147450880;
  _103 = (signed char *) _102;
  _104 = *_103;
  if (_104 != 0)
    goto <bb 9>; [0.05%]
  else
    goto <bb 10>; [99.95%]
;;    succ:       10
;;                9

;;   basic block 9, loop depth 0
;;    pred:       8
  __builtin___asan_report_load8 (_100);
;;    succ:      

;;   basic block 10, loop depth 0
;;    pred:       8
  _20 = _19->oldest.month;
  _21 = q_49(D)->sensorsID;
  _22 = ID_50(D) * 80;
  _23 = _22 + 18446744073709551536;
  _24 = _21 + _23;
  _67 = &_24->oldest.year;
  _105 = (unsigned long) _67;
  _106 = _105 >> 3;
  _107 = _106 + 2147450880;
  _108 = (signed char *) _107;
  _109 = *_108;
  if (_109 != 0)
    goto <bb 11>; [0.05%]
  else
    goto <bb 12>; [99.95%]
;;    succ:       12
;;                11

;;   basic block 11, loop depth 0
;;    pred:       10
  __builtin___asan_report_load8 (_105);
;;    succ:      

;;   basic block 12, loop depth 0
;;    pred:       10
  _25 = _24->oldest.year;
  _26 = dateCmp (_25, year_51(D), _20, month_52(D), _15, dayN_53(D), _10, _5, time_54(D));
  c_56 = (int) _26;
  if (c_56 == -1)
    goto <bb 13>; [INV]
  else
    goto <bb 26>; [INV]
;;    succ:       13
;;                26

;;   basic block 13, loop depth 0
;;    pred:       12
  _68 = &q_49(D)->sensorsID;
  _110 = (unsigned long) _68;
  _111 = _110 >> 3;
  _112 = _111 + 2147450880;
  _113 = (signed char *) _112;
  _114 = *_113;
  if (_114 != 0)
    goto <bb 14>; [0.05%]
  else
    goto <bb 15>; [99.95%]
;;    succ:       15
;;                14

;;   basic block 14, loop depth 0
;;    pred:       13
  __builtin___asan_report_load8 (_110);
;;    succ:      

;;   basic block 15, loop depth 0
;;    pred:       13
  _27 = q_49(D)->sensorsID;
  _28 = ID_50(D) * 80;
  _29 = _28 + 18446744073709551536;
  _30 = _27 + _29;
  _69 = &_30->oldest.year;
  _115 = (unsigned long) _69;
  _116 = _115 >> 3;
  _117 = _116 + 2147450880;
  _118 = (signed char *) _117;
  _119 = *_118;
  if (_119 != 0)
    goto <bb 16>; [0.05%]
  else
    goto <bb 17>; [99.95%]
;;    succ:       17
;;                16

;;   basic block 16, loop depth 0
;;    pred:       15
  __builtin___asan_report_store8 (_115);
;;    succ:      

;;   basic block 17, loop depth 0
;;    pred:       15
  _30->oldest.year = year_51(D);
  _31 = q_49(D)->sensorsID;
  _32 = ID_50(D) * 80;
  _33 = _32 + 18446744073709551536;
  _34 = _31 + _33;
  _70 = &_34->oldest.old_count;
  _120 = (unsigned long) _70;
  _121 = _120 >> 3;
  _122 = _121 + 2147450880;
  _123 = (signed char *) _122;
  _124 = *_123;
  if (_124 != 0)
    goto <bb 18>; [0.05%]
  else
    goto <bb 19>; [99.95%]
;;    succ:       19
;;                18

;;   basic block 18, loop depth 0
;;    pred:       17
  __builtin___asan_report_store8 (_120);
;;    succ:      

;;   basic block 19, loop depth 0
;;    pred:       17
  _34->oldest.old_count = pedestrians_58(D);
  _35 = q_49(D)->sensorsID;
  _36 = ID_50(D) * 80;
  _37 = _36 + 18446744073709551536;
  _38 = _35 + _37;
  _71 = &_38->oldest.dayN;
  _125 = (unsigned long) _71;
  _126 = _125 >> 3;
  _127 = _126 + 2147450880;
  _128 = (signed char *) _127;
  _129 = *_128;
  if (_129 != 0)
    goto <bb 20>; [0.05%]
  else
    goto <bb 21>; [99.95%]
;;    succ:       21
;;                20

;;   basic block 20, loop depth 0
;;    pred:       19
  __builtin___asan_report_store8 (_125);
;;    succ:      

;;   basic block 21, loop depth 0
;;    pred:       19
  _38->oldest.dayN = dayN_53(D);
  _39 = q_49(D)->sensorsID;
  _40 = ID_50(D) * 80;
  _41 = _40 + 18446744073709551536;
  _42 = _39 + _41;
  _72 = &_42->oldest.month;
  _130 = (unsigned long) _72;
  _131 = _130 >> 3;
  _132 = _131 + 2147450880;
  _133 = (signed char *) _132;
  _134 = *_133;
  if (_134 != 0)
    goto <bb 22>; [0.05%]
  else
    goto <bb 23>; [99.95%]
;;    succ:       23
;;                22

;;   basic block 22, loop depth 0
;;    pred:       21
  __builtin___asan_report_store8 (_130);
;;    succ:      

;;   basic block 23, loop depth 0
;;    pred:       21
  _42->oldest.month = month_52(D);
  _43 = q_49(D)->sensorsID;
  _44 = ID_50(D) * 80;
  _45 = _44 + 18446744073709551536;
  _46 = _43 + _45;
  _73 = &_46->oldest.time;
  _135 = (unsigned long) _73;
  _136 = _135 >> 3;
  _137 = _136 + 2147450880;
  _138 = (signed char *) _137;
  _139 = *_138;
  if (_139 != 0)
    goto <bb 24>; [0.05%]
  else
    goto <bb 25>; [99.95%]
;;    succ:       25
;;                24

;;   basic block 24, loop depth 0
;;    pred:       23
  __builtin___asan_report_store8 (_135);
;;    succ:      

;;   basic block 25, loop depth 0
;;    pred:       23
  _46->oldest.time = time_54(D);
;;    succ:       26

;;   basic block 26, loop depth 0
;;    pred:       12
;;                25
  return;
;;    succ:       EXIT

}



Partition map 

Partition 1 (_1 - 1 )
Partition 2 (_2 - 2 )
Partition 3 (_3 - 3 )
Partition 4 (_4 - 4 )
Partition 5 (_5 - 5 )
Partition 6 (_6 - 6 )
Partition 7 (_7 - 7 )
Partition 8 (_8 - 8 )
Partition 9 (_9 - 9 )
Partition 10 (_10 - 10 )
Partition 11 (_11 - 11 )
Partition 12 (_12 - 12 )
Partition 13 (_13 - 13 )
Partition 14 (_14 - 14 )
Partition 15 (_15 - 15 )
Partition 16 (_16 - 16 )
Partition 17 (_17 - 17 )
Partition 18 (_18 - 18 )
Partition 19 (_19 - 19 )
Partition 20 (_20 - 20 )
Partition 21 (_21 - 21 )
Partition 22 (_22 - 22 )
Partition 23 (_23 - 23 )
Partition 24 (_24 - 24 )
Partition 25 (_25 - 25 )
Partition 26 (_26 - 26 )
Partition 27 (_27 - 27 )
Partition 28 (_28 - 28 )
Partition 29 (_29 - 29 )
Partition 30 (_30 - 30 )
Partition 31 (_31 - 31 )
Partition 32 (_32 - 32 )
Partition 33 (_33 - 33 )
Partition 34 (_34 - 34 )
Partition 35 (_35 - 35 )
Partition 36 (_36 - 36 )
Partition 37 (_37 - 37 )
Partition 38 (_38 - 38 )
Partition 39 (_39 - 39 )
Partition 40 (_40 - 40 )
Partition 41 (_41 - 41 )
Partition 42 (_42 - 42 )
Partition 43 (_43 - 43 )
Partition 44 (_44 - 44 )
Partition 45 (_45 - 45 )
Partition 46 (_46 - 46 )
Partition 49 (q_49(D) - 49 )
Partition 50 (ID_50(D) - 50 )
Partition 51 (year_51(D) - 51 )
Partition 52 (month_52(D) - 52 )
Partition 53 (dayN_53(D) - 53 )
Partition 54 (time_54(D) - 54 )
Partition 56 (c_56 - 56 )
Partition 58 (pedestrians_58(D) - 58 )
Partition 63 (_63 - 63 )
Partition 64 (_64 - 64 )
Partition 65 (_65 - 65 )
Partition 66 (_66 - 66 )
Partition 67 (_67 - 67 )
Partition 68 (_68 - 68 )
Partition 69 (_69 - 69 )
Partition 70 (_70 - 70 )
Partition 71 (_71 - 71 )
Partition 72 (_72 - 72 )
Partition 73 (_73 - 73 )
Partition 85 (_85 - 85 )
Partition 86 (_86 - 86 )
Partition 87 (_87 - 87 )
Partition 88 (_88 - 88 )
Partition 89 (_89 - 89 )
Partition 90 (_90 - 90 )
Partition 91 (_91 - 91 )
Partition 92 (_92 - 92 )
Partition 93 (_93 - 93 )
Partition 94 (_94 - 94 )
Partition 95 (_95 - 95 )
Partition 96 (_96 - 96 )
Partition 97 (_97 - 97 )
Partition 98 (_98 - 98 )
Partition 99 (_99 - 99 )
Partition 100 (_100 - 100 )
Partition 101 (_101 - 101 )
Partition 102 (_102 - 102 )
Partition 103 (_103 - 103 )
Partition 104 (_104 - 104 )
Partition 105 (_105 - 105 )
Partition 106 (_106 - 106 )
Partition 107 (_107 - 107 )
Partition 108 (_108 - 108 )
Partition 109 (_109 - 109 )
Partition 110 (_110 - 110 )
Partition 111 (_111 - 111 )
Partition 112 (_112 - 112 )
Partition 113 (_113 - 113 )
Partition 114 (_114 - 114 )
Partition 115 (_115 - 115 )
Partition 116 (_116 - 116 )
Partition 117 (_117 - 117 )
Partition 118 (_118 - 118 )
Partition 119 (_119 - 119 )
Partition 120 (_120 - 120 )
Partition 121 (_121 - 121 )
Partition 122 (_122 - 122 )
Partition 123 (_123 - 123 )
Partition 124 (_124 - 124 )
Partition 125 (_125 - 125 )
Partition 126 (_126 - 126 )
Partition 127 (_127 - 127 )
Partition 128 (_128 - 128 )
Partition 129 (_129 - 129 )
Partition 130 (_130 - 130 )
Partition 131 (_131 - 131 )
Partition 132 (_132 - 132 )
Partition 133 (_133 - 133 )
Partition 134 (_134 - 134 )
Partition 135 (_135 - 135 )
Partition 136 (_136 - 136 )
Partition 137 (_137 - 137 )
Partition 138 (_138 - 138 )
Partition 139 (_139 - 139 )


Coalescible Partition map 

Partition 0, base 0 (q_49(D) - 49 )
Partition 1, base 1 (ID_50(D) - 50 )
Partition 2, base 2 (year_51(D) - 51 )
Partition 3, base 3 (month_52(D) - 52 )
Partition 4, base 4 (dayN_53(D) - 53 )
Partition 5, base 5 (time_54(D) - 54 )
Partition 6, base 6 (pedestrians_58(D) - 58 )


Partition map 

Partition 0 (q_49(D) - 49 )
Partition 1 (ID_50(D) - 50 )
Partition 2 (year_51(D) - 51 )
Partition 3 (month_52(D) - 52 )
Partition 4 (dayN_53(D) - 53 )
Partition 5 (time_54(D) - 54 )
Partition 6 (pedestrians_58(D) - 58 )


Conflict graph:

After sorting:
Coalesce List:

Partition map 

Partition 0 (q_49(D) - 49 )
Partition 1 (ID_50(D) - 50 )
Partition 2 (year_51(D) - 51 )
Partition 3 (month_52(D) - 52 )
Partition 4 (dayN_53(D) - 53 )
Partition 5 (time_54(D) - 54 )
Partition 6 (pedestrians_58(D) - 58 )

After Coalescing:

Partition map 

Partition 0 (_1 - 1 )
Partition 1 (_2 - 2 )
Partition 2 (_3 - 3 )
Partition 3 (_4 - 4 )
Partition 4 (_5 - 5 )
Partition 5 (_6 - 6 )
Partition 6 (_7 - 7 )
Partition 7 (_8 - 8 )
Partition 8 (_9 - 9 )
Partition 9 (_10 - 10 )
Partition 10 (_11 - 11 )
Partition 11 (_12 - 12 )
Partition 12 (_13 - 13 )
Partition 13 (_14 - 14 )
Partition 14 (_15 - 15 )
Partition 15 (_16 - 16 )
Partition 16 (_17 - 17 )
Partition 17 (_18 - 18 )
Partition 18 (_19 - 19 )
Partition 19 (_20 - 20 )
Partition 20 (_21 - 21 )
Partition 21 (_22 - 22 )
Partition 22 (_23 - 23 )
Partition 23 (_24 - 24 )
Partition 24 (_25 - 25 )
Partition 25 (_26 - 26 )
Partition 26 (_27 - 27 )
Partition 27 (_28 - 28 )
Partition 28 (_29 - 29 )
Partition 29 (_30 - 30 )
Partition 30 (_31 - 31 )
Partition 31 (_32 - 32 )
Partition 32 (_33 - 33 )
Partition 33 (_34 - 34 )
Partition 34 (_35 - 35 )
Partition 35 (_36 - 36 )
Partition 36 (_37 - 37 )
Partition 37 (_38 - 38 )
Partition 38 (_39 - 39 )
Partition 39 (_40 - 40 )
Partition 40 (_41 - 41 )
Partition 41 (_42 - 42 )
Partition 42 (_43 - 43 )
Partition 43 (_44 - 44 )
Partition 44 (_45 - 45 )
Partition 45 (_46 - 46 )
Partition 46 (q_49(D) - 49 )
Partition 47 (ID_50(D) - 50 )
Partition 48 (year_51(D) - 51 )
Partition 49 (month_52(D) - 52 )
Partition 50 (dayN_53(D) - 53 )
Partition 51 (time_54(D) - 54 )
Partition 52 (c_56 - 56 )
Partition 53 (pedestrians_58(D) - 58 )
Partition 54 (_63 - 63 )
Partition 55 (_64 - 64 )
Partition 56 (_65 - 65 )
Partition 57 (_66 - 66 )
Partition 58 (_67 - 67 )
Partition 59 (_68 - 68 )
Partition 60 (_69 - 69 )
Partition 61 (_70 - 70 )
Partition 62 (_71 - 71 )
Partition 63 (_72 - 72 )
Partition 64 (_73 - 73 )
Partition 65 (_85 - 85 )
Partition 66 (_86 - 86 )
Partition 67 (_87 - 87 )
Partition 68 (_88 - 88 )
Partition 69 (_89 - 89 )
Partition 70 (_90 - 90 )
Partition 71 (_91 - 91 )
Partition 72 (_92 - 92 )
Partition 73 (_93 - 93 )
Partition 74 (_94 - 94 )
Partition 75 (_95 - 95 )
Partition 76 (_96 - 96 )
Partition 77 (_97 - 97 )
Partition 78 (_98 - 98 )
Partition 79 (_99 - 99 )
Partition 80 (_100 - 100 )
Partition 81 (_101 - 101 )
Partition 82 (_102 - 102 )
Partition 83 (_103 - 103 )
Partition 84 (_104 - 104 )
Partition 85 (_105 - 105 )
Partition 86 (_106 - 106 )
Partition 87 (_107 - 107 )
Partition 88 (_108 - 108 )
Partition 89 (_109 - 109 )
Partition 90 (_110 - 110 )
Partition 91 (_111 - 111 )
Partition 92 (_112 - 112 )
Partition 93 (_113 - 113 )
Partition 94 (_114 - 114 )
Partition 95 (_115 - 115 )
Partition 96 (_116 - 116 )
Partition 97 (_117 - 117 )
Partition 98 (_118 - 118 )
Partition 99 (_119 - 119 )
Partition 100 (_120 - 120 )
Partition 101 (_121 - 121 )
Partition 102 (_122 - 122 )
Partition 103 (_123 - 123 )
Partition 104 (_124 - 124 )
Partition 105 (_125 - 125 )
Partition 106 (_126 - 126 )
Partition 107 (_127 - 127 )
Partition 108 (_128 - 128 )
Partition 109 (_129 - 129 )
Partition 110 (_130 - 130 )
Partition 111 (_131 - 131 )
Partition 112 (_132 - 132 )
Partition 113 (_133 - 133 )
Partition 114 (_134 - 134 )
Partition 115 (_135 - 135 )
Partition 116 (_136 - 136 )
Partition 117 (_137 - 137 )
Partition 118 (_138 - 138 )
Partition 119 (_139 - 139 )

addOldest (struct queryCDT * q, size_t ID, size_t month, size_t dayN, size_t time, size_t pedestrians, size_t year)
{
  int c;
  struct TSensor * _1;
  long unsigned int _2;
  sizetype _3;
  struct TSensor * _4;
  long unsigned int _5;
  struct TSensor * _6;
  long unsigned int _7;
  sizetype _8;
  struct TSensor * _9;
  char * _10;
  struct TSensor * _11;
  long unsigned int _12;
  sizetype _13;
  struct TSensor * _14;
  long unsigned int _15;
  struct TSensor * _16;
  long unsigned int _17;
  sizetype _18;
  struct TSensor * _19;
  long unsigned int _20;
  struct TSensor * _21;
  long unsigned int _22;
  sizetype _23;
  struct TSensor * _24;
  long unsigned int _25;
  char _26;
  struct TSensor * _27;
  long unsigned int _28;
  sizetype _29;
  struct TSensor * _30;
  struct TSensor * _31;
  long unsigned int _32;
  sizetype _33;
  struct TSensor * _34;
  struct TSensor * _35;
  long unsigned int _36;
  sizetype _37;
  struct TSensor * _38;
  struct TSensor * _39;
  long unsigned int _40;
  sizetype _41;
  struct TSensor * _42;
  struct TSensor * _43;
  long unsigned int _44;
  sizetype _45;
  struct TSensor * _46;
  struct TSensor * * _63;
  size_t * _64;
  size_t * _65;
  size_t * _66;
  size_t * _67;
  struct TSensor * * _68;
  size_t * _69;
  size_t * _70;
  size_t * _71;
  size_t * _72;
  size_t * _73;
  unsigned long _85;
  unsigned long _86;
  unsigned long _87;
  signed char * _88;
  signed char _89;
  unsigned long _90;
  unsigned long _91;
  unsigned long _92;
  signed char * _93;
  signed char _94;
  unsigned long _95;
  unsigned long _96;
  unsigned long _97;
  signed char * _98;
  signed char _99;
  unsigned long _100;
  unsigned long _101;
  unsigned long _102;
  signed char * _103;
  signed char _104;
  unsigned long _105;
  unsigned long _106;
  unsigned long _107;
  signed char * _108;
  signed char _109;
  unsigned long _110;
  unsigned long _111;
  unsigned long _112;
  signed char * _113;
  signed char _114;
  unsigned long _115;
  unsigned long _116;
  unsigned long _117;
  signed char * _118;
  signed char _119;
  unsigned long _120;
  unsigned long _121;
  unsigned long _122;
  signed char * _123;
  signed char _124;
  unsigned long _125;
  unsigned long _126;
  unsigned long _127;
  signed char * _128;
  signed char _129;
  unsigned long _130;
  unsigned long _131;
  unsigned long _132;
  signed char * _133;
  signed char _134;
  unsigned long _135;
  unsigned long _136;
  unsigned long _137;
  signed char * _138;
  signed char _139;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _63 = &q_49(D)->sensorsID;
  _85 = (unsigned long) _63;
  _86 = _85 >> 3;
  _87 = _86 + 2147450880;
  _88 = (signed char *) _87;
  _89 = *_88;
  if (_89 != 0)
    goto <bb 3>; [0.05%]
  else
    goto <bb 4>; [99.95%]
;;    succ:       4
;;                3

;;   basic block 3, loop depth 0
;;    pred:       2
  __builtin___asan_report_load8 (_85);
;;    succ:      

;;   basic block 4, loop depth 0
;;    pred:       2
  _1 = q_49(D)->sensorsID;
  _2 = ID_50(D) * 80;
  _3 = _2 + 18446744073709551536;
  _4 = _1 + _3;
  _64 = &_4->oldest.time;
  _90 = (unsigned long) _64;
  _91 = _90 >> 3;
  _92 = _91 + 2147450880;
  _93 = (signed char *) _92;
  _94 = *_93;
  if (_94 != 0)
    goto <bb 5>; [0.05%]
  else
    goto <bb 6>; [99.95%]
;;    succ:       6
;;                5

;;   basic block 5, loop depth 0
;;    pred:       4
  __builtin___asan_report_load8 (_90);
;;    succ:      

;;   basic block 6, loop depth 0
;;    pred:       4
  _5 = _4->oldest.time;
  _6 = q_49(D)->sensorsID;
  _7 = ID_50(D) * 80;
  _8 = _7 + 18446744073709551536;
  _9 = _6 + _8;
  _10 = &_9->oldest.used;
  _11 = q_49(D)->sensorsID;
  _12 = ID_50(D) * 80;
  _13 = _12 + 18446744073709551536;
  _14 = _11 + _13;
  _65 = &_14->oldest.dayN;
  _95 = (unsigned long) _65;
  _96 = _95 >> 3;
  _97 = _96 + 2147450880;
  _98 = (signed char *) _97;
  _99 = *_98;
  if (_99 != 0)
    goto <bb 7>; [0.05%]
  else
    goto <bb 8>; [99.95%]
;;    succ:       8
;;                7

;;   basic block 7, loop depth 0
;;    pred:       6
  __builtin___asan_report_load8 (_95);
;;    succ:      

;;   basic block 8, loop depth 0
;;    pred:       6
  _15 = _14->oldest.dayN;
  _16 = q_49(D)->sensorsID;
  _17 = ID_50(D) * 80;
  _18 = _17 + 18446744073709551536;
  _19 = _16 + _18;
  _66 = &_19->oldest.month;
  _100 = (unsigned long) _66;
  _101 = _100 >> 3;
  _102 = _101 + 2147450880;
  _103 = (signed char *) _102;
  _104 = *_103;
  if (_104 != 0)
    goto <bb 9>; [0.05%]
  else
    goto <bb 10>; [99.95%]
;;    succ:       10
;;                9

;;   basic block 9, loop depth 0
;;    pred:       8
  __builtin___asan_report_load8 (_100);
;;    succ:      

;;   basic block 10, loop depth 0
;;    pred:       8
  _20 = _19->oldest.month;
  _21 = q_49(D)->sensorsID;
  _22 = ID_50(D) * 80;
  _23 = _22 + 18446744073709551536;
  _24 = _21 + _23;
  _67 = &_24->oldest.year;
  _105 = (unsigned long) _67;
  _106 = _105 >> 3;
  _107 = _106 + 2147450880;
  _108 = (signed char *) _107;
  _109 = *_108;
  if (_109 != 0)
    goto <bb 11>; [0.05%]
  else
    goto <bb 12>; [99.95%]
;;    succ:       12
;;                11

;;   basic block 11, loop depth 0
;;    pred:       10
  __builtin___asan_report_load8 (_105);
;;    succ:      

;;   basic block 12, loop depth 0
;;    pred:       10
  _25 = _24->oldest.year;
  _26 = dateCmp (_25, year_51(D), _20, month_52(D), _15, dayN_53(D), _10, _5, time_54(D));
  c_56 = (int) _26;
  if (c_56 == -1)
    goto <bb 13>; [INV]
  else
    goto <bb 26>; [INV]
;;    succ:       13
;;                26

;;   basic block 13, loop depth 0
;;    pred:       12
  _68 = &q_49(D)->sensorsID;
  _110 = (unsigned long) _68;
  _111 = _110 >> 3;
  _112 = _111 + 2147450880;
  _113 = (signed char *) _112;
  _114 = *_113;
  if (_114 != 0)
    goto <bb 14>; [0.05%]
  else
    goto <bb 15>; [99.95%]
;;    succ:       15
;;                14

;;   basic block 14, loop depth 0
;;    pred:       13
  __builtin___asan_report_load8 (_110);
;;    succ:      

;;   basic block 15, loop depth 0
;;    pred:       13
  _27 = q_49(D)->sensorsID;
  _28 = ID_50(D) * 80;
  _29 = _28 + 18446744073709551536;
  _30 = _27 + _29;
  _69 = &_30->oldest.year;
  _115 = (unsigned long) _69;
  _116 = _115 >> 3;
  _117 = _116 + 2147450880;
  _118 = (signed char *) _117;
  _119 = *_118;
  if (_119 != 0)
    goto <bb 16>; [0.05%]
  else
    goto <bb 17>; [99.95%]
;;    succ:       17
;;                16

;;   basic block 16, loop depth 0
;;    pred:       15
  __builtin___asan_report_store8 (_115);
;;    succ:      

;;   basic block 17, loop depth 0
;;    pred:       15
  _30->oldest.year = year_51(D);
  _31 = q_49(D)->sensorsID;
  _32 = ID_50(D) * 80;
  _33 = _32 + 18446744073709551536;
  _34 = _31 + _33;
  _70 = &_34->oldest.old_count;
  _120 = (unsigned long) _70;
  _121 = _120 >> 3;
  _122 = _121 + 2147450880;
  _123 = (signed char *) _122;
  _124 = *_123;
  if (_124 != 0)
    goto <bb 18>; [0.05%]
  else
    goto <bb 19>; [99.95%]
;;    succ:       19
;;                18

;;   basic block 18, loop depth 0
;;    pred:       17
  __builtin___asan_report_store8 (_120);
;;    succ:      

;;   basic block 19, loop depth 0
;;    pred:       17
  _34->oldest.old_count = pedestrians_58(D);
  _35 = q_49(D)->sensorsID;
  _36 = ID_50(D) * 80;
  _37 = _36 + 18446744073709551536;
  _38 = _35 + _37;
  _71 = &_38->oldest.dayN;
  _125 = (unsigned long) _71;
  _126 = _125 >> 3;
  _127 = _126 + 2147450880;
  _128 = (signed char *) _127;
  _129 = *_128;
  if (_129 != 0)
    goto <bb 20>; [0.05%]
  else
    goto <bb 21>; [99.95%]
;;    succ:       21
;;                20

;;   basic block 20, loop depth 0
;;    pred:       19
  __builtin___asan_report_store8 (_125);
;;    succ:      

;;   basic block 21, loop depth 0
;;    pred:       19
  _38->oldest.dayN = dayN_53(D);
  _39 = q_49(D)->sensorsID;
  _40 = ID_50(D) * 80;
  _41 = _40 + 18446744073709551536;
  _42 = _39 + _41;
  _72 = &_42->oldest.month;
  _130 = (unsigned long) _72;
  _131 = _130 >> 3;
  _132 = _131 + 2147450880;
  _133 = (signed char *) _132;
  _134 = *_133;
  if (_134 != 0)
    goto <bb 22>; [0.05%]
  else
    goto <bb 23>; [99.95%]
;;    succ:       23
;;                22

;;   basic block 22, loop depth 0
;;    pred:       21
  __builtin___asan_report_store8 (_130);
;;    succ:      

;;   basic block 23, loop depth 0
;;    pred:       21
  _42->oldest.month = month_52(D);
  _43 = q_49(D)->sensorsID;
  _44 = ID_50(D) * 80;
  _45 = _44 + 18446744073709551536;
  _46 = _43 + _45;
  _73 = &_46->oldest.time;
  _135 = (unsigned long) _73;
  _136 = _135 >> 3;
  _137 = _136 + 2147450880;
  _138 = (signed char *) _137;
  _139 = *_138;
  if (_139 != 0)
    goto <bb 24>; [0.05%]
  else
    goto <bb 25>; [99.95%]
;;    succ:       25
;;                24

;;   basic block 24, loop depth 0
;;    pred:       23
  __builtin___asan_report_store8 (_135);
;;    succ:      

;;   basic block 25, loop depth 0
;;    pred:       23
  _46->oldest.time = time_54(D);
;;    succ:       26

;;   basic block 26, loop depth 0
;;    pred:       12
;;                25
  return;
;;    succ:       EXIT

}


Partition 0: size 4 align 4
	c_56

;; Generating RTL for gimple basic block 2

;; _63 = &q_49(D)->sensorsID;

(insn 11 10 12 (set (reg/f:DI 194)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [11 q+0 S8 A64])) "queryTAD.c":72:177 -1
     (nil))

(insn 12 11 0 (parallel [
            (set (reg/f:DI 128 [ _63 ])
                (plus:DI (reg/f:DI 194)
                    (const_int 24 [0x18])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":72:177 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [11 q+0 S8 A64])
            (const_int 24 [0x18]))
        (nil)))

;; _85 = (unsigned long) _63;

(insn 13 12 0 (set (reg:DI 139 [ _85 ])
        (reg/f:DI 128 [ _63 ])) "queryTAD.c":72:177 -1
     (nil))

;; _86 = _85 >> 3;

(insn 14 13 0 (parallel [
            (set (reg:DI 140 [ _86 ])
                (lshiftrt:DI (reg:DI 139 [ _85 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":72:177 -1
     (nil))

;; _87 = _86 + 2147450880;

(insn 15 14 0 (parallel [
            (set (reg:DI 141 [ _87 ])
                (plus:DI (reg:DI 140 [ _86 ])
                    (const_int 2147450880 [0x7fff8000])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":72:177 -1
     (nil))

;; _88 = (signed char *) _87;

(insn 16 15 0 (set (reg/f:DI 142 [ _88 ])
        (reg:DI 141 [ _87 ])) "queryTAD.c":72:177 -1
     (nil))

;; _89 = *_88;

(insn 17 16 0 (set (reg:QI 143 [ _89 ])
        (mem:QI (reg/f:DI 142 [ _88 ]) [10 *_88+0 S1 A8])) "queryTAD.c":72:177 -1
     (nil))

;; if (_89 != 0)

(insn 18 17 19 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 143 [ _89 ])
            (const_int 0 [0]))) "queryTAD.c":72:177 -1
     (nil))

(jump_insn 19 18 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "queryTAD.c":72:177 -1
     (nil))

;; Generating RTL for gimple basic block 3

;; __builtin___asan_report_load8 (_85);

(insn 21 20 22 (set (reg:DI 5 di)
        (reg:DI 139 [ _85 ])) "queryTAD.c":72:177 -1
     (nil))

(call_insn 22 21 23 (call (mem:QI (symbol_ref:DI ("__asan_report_load8") [flags 0x41]  <function_decl 0x7fc58eea5900 __builtin___asan_report_load8>) [0 __builtin___asan_report_load8 S1 A8])
        (const_int 0 [0])) "queryTAD.c":72:177 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

(barrier 23 22 0)

;; Generating RTL for gimple basic block 4

;; 

(code_label 24 23 25 47 (nil) [0 uses])

(note 25 24 0 NOTE_INSN_BASIC_BLOCK)

;; _1 = q_49(D)->sensorsID;

(insn 26 25 27 (set (reg/f:DI 195)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [11 q+0 S8 A64])) "queryTAD.c":72:177 -1
     (nil))

(insn 27 26 0 (set (reg/f:DI 82 [ _1 ])
        (mem/f:DI (plus:DI (reg/f:DI 195)
                (const_int 24 [0x18])) [7 q_49(D)->sensorsID+0 S8 A64])) "queryTAD.c":72:177 -1
     (nil))

;; _2 = ID_50(D) * 80;

(insn 28 27 29 (set (reg:DI 196)
        (mem/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [2 ID+0 S8 A64])) "queryTAD.c":72:188 -1
     (nil))

(insn 29 28 30 (set (reg:DI 197)
        (reg:DI 196)) "queryTAD.c":72:188 -1
     (nil))

(insn 30 29 31 (parallel [
            (set (reg:DI 197)
                (ashift:DI (reg:DI 197)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":72:188 -1
     (nil))

(insn 31 30 32 (parallel [
            (set (reg:DI 197)
                (plus:DI (reg:DI 197)
                    (reg:DI 196)))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":72:188 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 196)
            (const_int 5 [0x5]))
        (nil)))

(insn 32 31 33 (parallel [
            (set (reg:DI 198)
                (ashift:DI (reg:DI 197)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":72:188 -1
     (nil))

(insn 33 32 34 (set (reg:DI 197)
        (reg:DI 198)) "queryTAD.c":72:188 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 196)
            (const_int 80 [0x50]))
        (nil)))

(insn 34 33 0 (set (reg:DI 83 [ _2 ])
        (reg:DI 197)) "queryTAD.c":72:188 -1
     (nil))

;; _3 = _2 + 18446744073709551536;

(insn 35 34 0 (parallel [
            (set (reg:DI 84 [ _3 ])
                (plus:DI (reg:DI 83 [ _2 ])
                    (const_int -80 [0xffffffffffffffb0])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":72:188 -1
     (nil))

;; _4 = _1 + _3;

(insn 36 35 0 (parallel [
            (set (reg/f:DI 85 [ _4 ])
                (plus:DI (reg/f:DI 82 [ _1 ])
                    (reg:DI 84 [ _3 ])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":72:188 -1
     (nil))

;; _64 = &_4->oldest.time;

(insn 37 36 0 (parallel [
            (set (reg/f:DI 129 [ _64 ])
                (plus:DI (reg/f:DI 85 [ _4 ])
                    (const_int 48 [0x30])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":72:13 -1
     (nil))

;; _90 = (unsigned long) _64;

(insn 38 37 0 (set (reg:DI 144 [ _90 ])
        (reg/f:DI 129 [ _64 ])) "queryTAD.c":72:13 -1
     (nil))

;; _91 = _90 >> 3;

(insn 39 38 0 (parallel [
            (set (reg:DI 145 [ _91 ])
                (lshiftrt:DI (reg:DI 144 [ _90 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":72:13 -1
     (nil))

;; _92 = _91 + 2147450880;

(insn 40 39 0 (parallel [
            (set (reg:DI 146 [ _92 ])
                (plus:DI (reg:DI 145 [ _91 ])
                    (const_int 2147450880 [0x7fff8000])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":72:13 -1
     (nil))

;; _93 = (signed char *) _92;

(insn 41 40 0 (set (reg/f:DI 147 [ _93 ])
        (reg:DI 146 [ _92 ])) "queryTAD.c":72:13 -1
     (nil))

;; _94 = *_93;

(insn 42 41 0 (set (reg:QI 148 [ _94 ])
        (mem:QI (reg/f:DI 147 [ _93 ]) [10 *_93+0 S1 A8])) "queryTAD.c":72:13 -1
     (nil))

;; if (_94 != 0)

(insn 43 42 44 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 148 [ _94 ])
            (const_int 0 [0]))) "queryTAD.c":72:13 -1
     (nil))

(jump_insn 44 43 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "queryTAD.c":72:13 -1
     (nil))

;; Generating RTL for gimple basic block 5

;; __builtin___asan_report_load8 (_90);

(insn 46 45 47 (set (reg:DI 5 di)
        (reg:DI 144 [ _90 ])) "queryTAD.c":72:13 -1
     (nil))

(call_insn 47 46 48 (call (mem:QI (symbol_ref:DI ("__asan_report_load8") [flags 0x41]  <function_decl 0x7fc58eea5900 __builtin___asan_report_load8>) [0 __builtin___asan_report_load8 S1 A8])
        (const_int 0 [0])) "queryTAD.c":72:13 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

(barrier 48 47 0)

;; Generating RTL for gimple basic block 6

;; 

(code_label 49 48 50 48 (nil) [0 uses])

(note 50 49 0 NOTE_INSN_BASIC_BLOCK)

;; _5 = _4->oldest.time;

(insn 51 50 0 (set (reg:DI 86 [ _5 ])
        (mem:DI (plus:DI (reg/f:DI 85 [ _4 ])
                (const_int 48 [0x30])) [2 _4->oldest.time+0 S8 A64])) "queryTAD.c":72:13 -1
     (nil))

;; _6 = q_49(D)->sensorsID;

(insn 52 51 53 (set (reg/f:DI 199)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [11 q+0 S8 A64])) "queryTAD.c":72:145 -1
     (nil))

(insn 53 52 0 (set (reg/f:DI 87 [ _6 ])
        (mem/f:DI (plus:DI (reg/f:DI 199)
                (const_int 24 [0x18])) [7 q_49(D)->sensorsID+0 S8 A64])) "queryTAD.c":72:145 -1
     (nil))

;; _7 = ID_50(D) * 80;

(insn 54 53 55 (set (reg:DI 200)
        (mem/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [2 ID+0 S8 A64])) "queryTAD.c":72:156 -1
     (nil))

(insn 55 54 56 (set (reg:DI 201)
        (reg:DI 200)) "queryTAD.c":72:156 -1
     (nil))

(insn 56 55 57 (parallel [
            (set (reg:DI 201)
                (ashift:DI (reg:DI 201)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":72:156 -1
     (nil))

(insn 57 56 58 (parallel [
            (set (reg:DI 201)
                (plus:DI (reg:DI 201)
                    (reg:DI 200)))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":72:156 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 200)
            (const_int 5 [0x5]))
        (nil)))

(insn 58 57 59 (parallel [
            (set (reg:DI 202)
                (ashift:DI (reg:DI 201)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":72:156 -1
     (nil))

(insn 59 58 60 (set (reg:DI 201)
        (reg:DI 202)) "queryTAD.c":72:156 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 200)
            (const_int 80 [0x50]))
        (nil)))

(insn 60 59 0 (set (reg:DI 88 [ _7 ])
        (reg:DI 201)) "queryTAD.c":72:156 -1
     (nil))

;; _8 = _7 + 18446744073709551536;

(insn 61 60 0 (parallel [
            (set (reg:DI 89 [ _8 ])
                (plus:DI (reg:DI 88 [ _7 ])
                    (const_int -80 [0xffffffffffffffb0])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":72:156 -1
     (nil))

;; _9 = _6 + _8;

(insn 62 61 0 (parallel [
            (set (reg/f:DI 90 [ _9 ])
                (plus:DI (reg/f:DI 87 [ _6 ])
                    (reg:DI 89 [ _8 ])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":72:156 -1
     (nil))

;; _10 = &_9->oldest.used;

(insn 63 62 0 (parallel [
            (set (reg/f:DI 91 [ _10 ])
                (plus:DI (reg/f:DI 90 [ _9 ])
                    (const_int 40 [0x28])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":72:13 -1
     (nil))

;; _11 = q_49(D)->sensorsID;

(insn 64 63 65 (set (reg/f:DI 203)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [11 q+0 S8 A64])) "queryTAD.c":72:103 -1
     (nil))

(insn 65 64 0 (set (reg/f:DI 92 [ _11 ])
        (mem/f:DI (plus:DI (reg/f:DI 203)
                (const_int 24 [0x18])) [7 q_49(D)->sensorsID+0 S8 A64])) "queryTAD.c":72:103 -1
     (nil))

;; _12 = ID_50(D) * 80;

(insn 66 65 67 (set (reg:DI 204)
        (mem/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [2 ID+0 S8 A64])) "queryTAD.c":72:114 -1
     (nil))

(insn 67 66 68 (set (reg:DI 205)
        (reg:DI 204)) "queryTAD.c":72:114 -1
     (nil))

(insn 68 67 69 (parallel [
            (set (reg:DI 205)
                (ashift:DI (reg:DI 205)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":72:114 -1
     (nil))

(insn 69 68 70 (parallel [
            (set (reg:DI 205)
                (plus:DI (reg:DI 205)
                    (reg:DI 204)))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":72:114 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 204)
            (const_int 5 [0x5]))
        (nil)))

(insn 70 69 71 (parallel [
            (set (reg:DI 206)
                (ashift:DI (reg:DI 205)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":72:114 -1
     (nil))

(insn 71 70 72 (set (reg:DI 205)
        (reg:DI 206)) "queryTAD.c":72:114 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 204)
            (const_int 80 [0x50]))
        (nil)))

(insn 72 71 0 (set (reg:DI 93 [ _12 ])
        (reg:DI 205)) "queryTAD.c":72:114 -1
     (nil))

;; _13 = _12 + 18446744073709551536;

(insn 73 72 0 (parallel [
            (set (reg:DI 94 [ _13 ])
                (plus:DI (reg:DI 93 [ _12 ])
                    (const_int -80 [0xffffffffffffffb0])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":72:114 -1
     (nil))

;; _14 = _11 + _13;

(insn 74 73 0 (parallel [
            (set (reg/f:DI 95 [ _14 ])
                (plus:DI (reg/f:DI 92 [ _11 ])
                    (reg:DI 94 [ _13 ])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":72:114 -1
     (nil))

;; _65 = &_14->oldest.dayN;

(insn 75 74 0 (parallel [
            (set (reg/f:DI 130 [ _65 ])
                (plus:DI (reg/f:DI 95 [ _14 ])
                    (const_int 72 [0x48])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":72:13 -1
     (nil))

;; _95 = (unsigned long) _65;

(insn 76 75 0 (set (reg:DI 149 [ _95 ])
        (reg/f:DI 130 [ _65 ])) "queryTAD.c":72:13 -1
     (nil))

;; _96 = _95 >> 3;

(insn 77 76 0 (parallel [
            (set (reg:DI 150 [ _96 ])
                (lshiftrt:DI (reg:DI 149 [ _95 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":72:13 -1
     (nil))

;; _97 = _96 + 2147450880;

(insn 78 77 0 (parallel [
            (set (reg:DI 151 [ _97 ])
                (plus:DI (reg:DI 150 [ _96 ])
                    (const_int 2147450880 [0x7fff8000])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":72:13 -1
     (nil))

;; _98 = (signed char *) _97;

(insn 79 78 0 (set (reg/f:DI 152 [ _98 ])
        (reg:DI 151 [ _97 ])) "queryTAD.c":72:13 -1
     (nil))

;; _99 = *_98;

(insn 80 79 0 (set (reg:QI 153 [ _99 ])
        (mem:QI (reg/f:DI 152 [ _98 ]) [10 *_98+0 S1 A8])) "queryTAD.c":72:13 -1
     (nil))

;; if (_99 != 0)

(insn 81 80 82 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 153 [ _99 ])
            (const_int 0 [0]))) "queryTAD.c":72:13 -1
     (nil))

(jump_insn 82 81 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "queryTAD.c":72:13 -1
     (nil))

;; Generating RTL for gimple basic block 7

;; __builtin___asan_report_load8 (_95);

(insn 84 83 85 (set (reg:DI 5 di)
        (reg:DI 149 [ _95 ])) "queryTAD.c":72:13 -1
     (nil))

(call_insn 85 84 86 (call (mem:QI (symbol_ref:DI ("__asan_report_load8") [flags 0x41]  <function_decl 0x7fc58eea5900 __builtin___asan_report_load8>) [0 __builtin___asan_report_load8 S1 A8])
        (const_int 0 [0])) "queryTAD.c":72:13 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

(barrier 86 85 0)

;; Generating RTL for gimple basic block 8

;; 

(code_label 87 86 88 49 (nil) [0 uses])

(note 88 87 0 NOTE_INSN_BASIC_BLOCK)

;; _15 = _14->oldest.dayN;

(insn 89 88 0 (set (reg:DI 96 [ _15 ])
        (mem:DI (plus:DI (reg/f:DI 95 [ _14 ])
                (const_int 72 [0x48])) [2 _14->oldest.dayN+0 S8 A64])) "queryTAD.c":72:13 -1
     (nil))

;; _16 = q_49(D)->sensorsID;

(insn 90 89 91 (set (reg/f:DI 207)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [11 q+0 S8 A64])) "queryTAD.c":72:61 -1
     (nil))

(insn 91 90 0 (set (reg/f:DI 97 [ _16 ])
        (mem/f:DI (plus:DI (reg/f:DI 207)
                (const_int 24 [0x18])) [7 q_49(D)->sensorsID+0 S8 A64])) "queryTAD.c":72:61 -1
     (nil))

;; _17 = ID_50(D) * 80;

(insn 92 91 93 (set (reg:DI 208)
        (mem/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [2 ID+0 S8 A64])) "queryTAD.c":72:72 -1
     (nil))

(insn 93 92 94 (set (reg:DI 209)
        (reg:DI 208)) "queryTAD.c":72:72 -1
     (nil))

(insn 94 93 95 (parallel [
            (set (reg:DI 209)
                (ashift:DI (reg:DI 209)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":72:72 -1
     (nil))

(insn 95 94 96 (parallel [
            (set (reg:DI 209)
                (plus:DI (reg:DI 209)
                    (reg:DI 208)))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":72:72 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 208)
            (const_int 5 [0x5]))
        (nil)))

(insn 96 95 97 (parallel [
            (set (reg:DI 210)
                (ashift:DI (reg:DI 209)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":72:72 -1
     (nil))

(insn 97 96 98 (set (reg:DI 209)
        (reg:DI 210)) "queryTAD.c":72:72 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 208)
            (const_int 80 [0x50]))
        (nil)))

(insn 98 97 0 (set (reg:DI 98 [ _17 ])
        (reg:DI 209)) "queryTAD.c":72:72 -1
     (nil))

;; _18 = _17 + 18446744073709551536;

(insn 99 98 0 (parallel [
            (set (reg:DI 99 [ _18 ])
                (plus:DI (reg:DI 98 [ _17 ])
                    (const_int -80 [0xffffffffffffffb0])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":72:72 -1
     (nil))

;; _19 = _16 + _18;

(insn 100 99 0 (parallel [
            (set (reg/f:DI 100 [ _19 ])
                (plus:DI (reg/f:DI 97 [ _16 ])
                    (reg:DI 99 [ _18 ])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":72:72 -1
     (nil))

;; _66 = &_19->oldest.month;

(insn 101 100 0 (parallel [
            (set (reg/f:DI 131 [ _66 ])
                (plus:DI (reg/f:DI 100 [ _19 ])
                    (const_int 64 [0x40])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":72:13 -1
     (nil))

;; _100 = (unsigned long) _66;

(insn 102 101 0 (set (reg:DI 154 [ _100 ])
        (reg/f:DI 131 [ _66 ])) "queryTAD.c":72:13 -1
     (nil))

;; _101 = _100 >> 3;

(insn 103 102 0 (parallel [
            (set (reg:DI 155 [ _101 ])
                (lshiftrt:DI (reg:DI 154 [ _100 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":72:13 -1
     (nil))

;; _102 = _101 + 2147450880;

(insn 104 103 0 (parallel [
            (set (reg:DI 156 [ _102 ])
                (plus:DI (reg:DI 155 [ _101 ])
                    (const_int 2147450880 [0x7fff8000])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":72:13 -1
     (nil))

;; _103 = (signed char *) _102;

(insn 105 104 0 (set (reg/f:DI 157 [ _103 ])
        (reg:DI 156 [ _102 ])) "queryTAD.c":72:13 -1
     (nil))

;; _104 = *_103;

(insn 106 105 0 (set (reg:QI 158 [ _104 ])
        (mem:QI (reg/f:DI 157 [ _103 ]) [10 *_103+0 S1 A8])) "queryTAD.c":72:13 -1
     (nil))

;; if (_104 != 0)

(insn 107 106 108 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 158 [ _104 ])
            (const_int 0 [0]))) "queryTAD.c":72:13 -1
     (nil))

(jump_insn 108 107 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "queryTAD.c":72:13 -1
     (nil))

;; Generating RTL for gimple basic block 9

;; __builtin___asan_report_load8 (_100);

(insn 110 109 111 (set (reg:DI 5 di)
        (reg:DI 154 [ _100 ])) "queryTAD.c":72:13 -1
     (nil))

(call_insn 111 110 112 (call (mem:QI (symbol_ref:DI ("__asan_report_load8") [flags 0x41]  <function_decl 0x7fc58eea5900 __builtin___asan_report_load8>) [0 __builtin___asan_report_load8 S1 A8])
        (const_int 0 [0])) "queryTAD.c":72:13 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

(barrier 112 111 0)

;; Generating RTL for gimple basic block 10

;; 

(code_label 113 112 114 50 (nil) [0 uses])

(note 114 113 0 NOTE_INSN_BASIC_BLOCK)

;; _20 = _19->oldest.month;

(insn 115 114 0 (set (reg:DI 101 [ _20 ])
        (mem:DI (plus:DI (reg/f:DI 100 [ _19 ])
                (const_int 64 [0x40])) [2 _19->oldest.month+0 S8 A64])) "queryTAD.c":72:13 -1
     (nil))

;; _21 = q_49(D)->sensorsID;

(insn 116 115 117 (set (reg/f:DI 211)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [11 q+0 S8 A64])) "queryTAD.c":72:22 -1
     (nil))

(insn 117 116 0 (set (reg/f:DI 102 [ _21 ])
        (mem/f:DI (plus:DI (reg/f:DI 211)
                (const_int 24 [0x18])) [7 q_49(D)->sensorsID+0 S8 A64])) "queryTAD.c":72:22 -1
     (nil))

;; _22 = ID_50(D) * 80;

(insn 118 117 119 (set (reg:DI 212)
        (mem/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [2 ID+0 S8 A64])) "queryTAD.c":72:33 -1
     (nil))

(insn 119 118 120 (set (reg:DI 213)
        (reg:DI 212)) "queryTAD.c":72:33 -1
     (nil))

(insn 120 119 121 (parallel [
            (set (reg:DI 213)
                (ashift:DI (reg:DI 213)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":72:33 -1
     (nil))

(insn 121 120 122 (parallel [
            (set (reg:DI 213)
                (plus:DI (reg:DI 213)
                    (reg:DI 212)))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":72:33 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 212)
            (const_int 5 [0x5]))
        (nil)))

(insn 122 121 123 (parallel [
            (set (reg:DI 214)
                (ashift:DI (reg:DI 213)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":72:33 -1
     (nil))

(insn 123 122 124 (set (reg:DI 213)
        (reg:DI 214)) "queryTAD.c":72:33 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 212)
            (const_int 80 [0x50]))
        (nil)))

(insn 124 123 0 (set (reg:DI 103 [ _22 ])
        (reg:DI 213)) "queryTAD.c":72:33 -1
     (nil))

;; _23 = _22 + 18446744073709551536;

(insn 125 124 0 (parallel [
            (set (reg:DI 104 [ _23 ])
                (plus:DI (reg:DI 103 [ _22 ])
                    (const_int -80 [0xffffffffffffffb0])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":72:33 -1
     (nil))

;; _24 = _21 + _23;

(insn 126 125 0 (parallel [
            (set (reg/f:DI 105 [ _24 ])
                (plus:DI (reg/f:DI 102 [ _21 ])
                    (reg:DI 104 [ _23 ])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":72:33 -1
     (nil))

;; _67 = &_24->oldest.year;

(insn 127 126 0 (parallel [
            (set (reg/f:DI 132 [ _67 ])
                (plus:DI (reg/f:DI 105 [ _24 ])
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":72:13 -1
     (nil))

;; _105 = (unsigned long) _67;

(insn 128 127 0 (set (reg:DI 159 [ _105 ])
        (reg/f:DI 132 [ _67 ])) "queryTAD.c":72:13 -1
     (nil))

;; _106 = _105 >> 3;

(insn 129 128 0 (parallel [
            (set (reg:DI 160 [ _106 ])
                (lshiftrt:DI (reg:DI 159 [ _105 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":72:13 -1
     (nil))

;; _107 = _106 + 2147450880;

(insn 130 129 0 (parallel [
            (set (reg:DI 161 [ _107 ])
                (plus:DI (reg:DI 160 [ _106 ])
                    (const_int 2147450880 [0x7fff8000])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":72:13 -1
     (nil))

;; _108 = (signed char *) _107;

(insn 131 130 0 (set (reg/f:DI 162 [ _108 ])
        (reg:DI 161 [ _107 ])) "queryTAD.c":72:13 -1
     (nil))

;; _109 = *_108;

(insn 132 131 0 (set (reg:QI 163 [ _109 ])
        (mem:QI (reg/f:DI 162 [ _108 ]) [10 *_108+0 S1 A8])) "queryTAD.c":72:13 -1
     (nil))

;; if (_109 != 0)

(insn 133 132 134 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 163 [ _109 ])
            (const_int 0 [0]))) "queryTAD.c":72:13 -1
     (nil))

(jump_insn 134 133 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "queryTAD.c":72:13 -1
     (nil))

;; Generating RTL for gimple basic block 11

;; __builtin___asan_report_load8 (_105);

(insn 136 135 137 (set (reg:DI 5 di)
        (reg:DI 159 [ _105 ])) "queryTAD.c":72:13 -1
     (nil))

(call_insn 137 136 138 (call (mem:QI (symbol_ref:DI ("__asan_report_load8") [flags 0x41]  <function_decl 0x7fc58eea5900 __builtin___asan_report_load8>) [0 __builtin___asan_report_load8 S1 A8])
        (const_int 0 [0])) "queryTAD.c":72:13 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

(barrier 138 137 0)

;; Generating RTL for gimple basic block 12

;; 

(code_label 139 138 140 51 (nil) [0 uses])

(note 140 139 0 NOTE_INSN_BASIC_BLOCK)

;; _25 = _24->oldest.year;

(insn 141 140 0 (set (reg:DI 106 [ _25 ])
        (mem:DI (plus:DI (reg/f:DI 105 [ _24 ])
                (const_int 32 [0x20])) [2 _24->oldest.year+0 S8 A64])) "queryTAD.c":72:13 -1
     (nil))

;; _26 = dateCmp (_25, year_51(D), _20, month_52(D), _15, dayN_53(D), _10, _5, time_54(D));

(insn 142 141 143 (set (reg:DI 215)
        (mem/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [2 dayN+0 S8 A64])) "queryTAD.c":72:13 -1
     (nil))

(insn 143 142 144 (set (reg:DI 216)
        (mem/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [2 month+0 S8 A64])) "queryTAD.c":72:13 -1
     (nil))

(insn 144 143 145 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":72:13 -1
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))

(insn 145 144 146 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [2  S8 A64])
        (mem/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [2 time+0 S8 A64])) "queryTAD.c":72:13 -1
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))

(insn 146 145 147 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [2  S8 A64])
        (reg:DI 86 [ _5 ])) "queryTAD.c":72:13 -1
     (expr_list:REG_ARGS_SIZE (const_int 24 [0x18])
        (nil)))

(insn 147 146 148 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [3  S8 A64])
        (reg/f:DI 91 [ _10 ])) "queryTAD.c":72:13 -1
     (expr_list:REG_ARGS_SIZE (const_int 32 [0x20])
        (nil)))

(insn 148 147 149 (set (reg:DI 37 r9)
        (reg:DI 215)) "queryTAD.c":72:13 -1
     (nil))

(insn 149 148 150 (set (reg:DI 36 r8)
        (reg:DI 96 [ _15 ])) "queryTAD.c":72:13 -1
     (nil))

(insn 150 149 151 (set (reg:DI 2 cx)
        (reg:DI 216)) "queryTAD.c":72:13 -1
     (nil))

(insn 151 150 152 (set (reg:DI 1 dx)
        (reg:DI 101 [ _20 ])) "queryTAD.c":72:13 -1
     (nil))

(insn 152 151 153 (set (reg:DI 4 si)
        (mem/c:DI (reg/f:DI 76 virtual-incoming-args) [2 year+0 S8 A64])) "queryTAD.c":72:13 -1
     (nil))

(insn 153 152 154 (set (reg:DI 5 di)
        (reg:DI 106 [ _25 ])) "queryTAD.c":72:13 -1
     (nil))

(call_insn 154 153 155 (set (reg:QI 0 ax)
        (call (mem:QI (symbol_ref:DI ("dateCmp") [flags 0x3]  <function_decl 0x7fc58ec06800 dateCmp>) [0 dateCmp S1 A8])
            (const_int 32 [0x20]))) "queryTAD.c":72:13 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:DI (use (reg:DI 36 r8))
                        (expr_list:DI (use (reg:DI 37 r9))
                            (nil))))))))

(insn 155 154 156 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":72:13 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))

(insn 156 155 0 (set (reg:QI 107 [ _26 ])
        (reg:QI 0 ax)) "queryTAD.c":72:13 -1
     (nil))

;; c_56 = (int) _26;

(insn 157 156 158 (set (reg:SI 217)
        (sign_extend:SI (reg:QI 107 [ _26 ]))) "queryTAD.c":72:9 -1
     (nil))

(insn 158 157 0 (set (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [13 c+0 S4 A32])
        (reg:SI 217)) "queryTAD.c":72:9 -1
     (nil))

;; if (c_56 == -1)

(insn 159 158 160 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [13 c+0 S4 A32])
            (const_int -1 [0xffffffffffffffff]))) "queryTAD.c":74:7 -1
     (nil))

(jump_insn 160 159 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "queryTAD.c":74:7 -1
     (nil))

;; Generating RTL for gimple basic block 13

;; _68 = &q_49(D)->sensorsID;

(insn 162 161 163 (set (reg/f:DI 218)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [11 q+0 S8 A64])) "queryTAD.c":75:10 -1
     (nil))

(insn 163 162 0 (parallel [
            (set (reg/f:DI 133 [ _68 ])
                (plus:DI (reg/f:DI 218)
                    (const_int 24 [0x18])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":75:10 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [11 q+0 S8 A64])
            (const_int 24 [0x18]))
        (nil)))

;; _110 = (unsigned long) _68;

(insn 164 163 0 (set (reg:DI 164 [ _110 ])
        (reg/f:DI 133 [ _68 ])) "queryTAD.c":75:10 -1
     (nil))

;; _111 = _110 >> 3;

(insn 165 164 0 (parallel [
            (set (reg:DI 165 [ _111 ])
                (lshiftrt:DI (reg:DI 164 [ _110 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":75:10 -1
     (nil))

;; _112 = _111 + 2147450880;

(insn 166 165 0 (parallel [
            (set (reg:DI 166 [ _112 ])
                (plus:DI (reg:DI 165 [ _111 ])
                    (const_int 2147450880 [0x7fff8000])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":75:10 -1
     (nil))

;; _113 = (signed char *) _112;

(insn 167 166 0 (set (reg/f:DI 167 [ _113 ])
        (reg:DI 166 [ _112 ])) "queryTAD.c":75:10 -1
     (nil))

;; _114 = *_113;

(insn 168 167 0 (set (reg:QI 168 [ _114 ])
        (mem:QI (reg/f:DI 167 [ _113 ]) [10 *_113+0 S1 A8])) "queryTAD.c":75:10 -1
     (nil))

;; if (_114 != 0)

(insn 169 168 170 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 168 [ _114 ])
            (const_int 0 [0]))) "queryTAD.c":75:10 -1
     (nil))

(jump_insn 170 169 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "queryTAD.c":75:10 -1
     (nil))

;; Generating RTL for gimple basic block 14

;; __builtin___asan_report_load8 (_110);

(insn 172 171 173 (set (reg:DI 5 di)
        (reg:DI 164 [ _110 ])) "queryTAD.c":75:10 -1
     (nil))

(call_insn 173 172 174 (call (mem:QI (symbol_ref:DI ("__asan_report_load8") [flags 0x41]  <function_decl 0x7fc58eea5900 __builtin___asan_report_load8>) [0 __builtin___asan_report_load8 S1 A8])
        (const_int 0 [0])) "queryTAD.c":75:10 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

(barrier 174 173 0)

;; Generating RTL for gimple basic block 15

;; 

(code_label 175 174 176 53 (nil) [0 uses])

(note 176 175 0 NOTE_INSN_BASIC_BLOCK)

;; _27 = q_49(D)->sensorsID;

(insn 177 176 178 (set (reg/f:DI 219)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [11 q+0 S8 A64])) "queryTAD.c":75:10 -1
     (nil))

(insn 178 177 0 (set (reg/f:DI 108 [ _27 ])
        (mem/f:DI (plus:DI (reg/f:DI 219)
                (const_int 24 [0x18])) [7 q_49(D)->sensorsID+0 S8 A64])) "queryTAD.c":75:10 -1
     (nil))

;; _28 = ID_50(D) * 80;

(insn 179 178 180 (set (reg:DI 220)
        (mem/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [2 ID+0 S8 A64])) "queryTAD.c":75:21 -1
     (nil))

(insn 180 179 181 (set (reg:DI 221)
        (reg:DI 220)) "queryTAD.c":75:21 -1
     (nil))

(insn 181 180 182 (parallel [
            (set (reg:DI 221)
                (ashift:DI (reg:DI 221)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":75:21 -1
     (nil))

(insn 182 181 183 (parallel [
            (set (reg:DI 221)
                (plus:DI (reg:DI 221)
                    (reg:DI 220)))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":75:21 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 220)
            (const_int 5 [0x5]))
        (nil)))

(insn 183 182 184 (parallel [
            (set (reg:DI 222)
                (ashift:DI (reg:DI 221)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":75:21 -1
     (nil))

(insn 184 183 185 (set (reg:DI 221)
        (reg:DI 222)) "queryTAD.c":75:21 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 220)
            (const_int 80 [0x50]))
        (nil)))

(insn 185 184 0 (set (reg:DI 109 [ _28 ])
        (reg:DI 221)) "queryTAD.c":75:21 -1
     (nil))

;; _29 = _28 + 18446744073709551536;

(insn 186 185 0 (parallel [
            (set (reg:DI 110 [ _29 ])
                (plus:DI (reg:DI 109 [ _28 ])
                    (const_int -80 [0xffffffffffffffb0])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":75:21 -1
     (nil))

;; _30 = _27 + _29;

(insn 187 186 0 (parallel [
            (set (reg/f:DI 111 [ _30 ])
                (plus:DI (reg/f:DI 108 [ _27 ])
                    (reg:DI 110 [ _29 ])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":75:21 -1
     (nil))

;; _69 = &_30->oldest.year;

(insn 188 187 0 (parallel [
            (set (reg/f:DI 134 [ _69 ])
                (plus:DI (reg/f:DI 111 [ _30 ])
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":75:40 -1
     (nil))

;; _115 = (unsigned long) _69;

(insn 189 188 0 (set (reg:DI 169 [ _115 ])
        (reg/f:DI 134 [ _69 ])) "queryTAD.c":75:40 -1
     (nil))

;; _116 = _115 >> 3;

(insn 190 189 0 (parallel [
            (set (reg:DI 170 [ _116 ])
                (lshiftrt:DI (reg:DI 169 [ _115 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":75:40 -1
     (nil))

;; _117 = _116 + 2147450880;

(insn 191 190 0 (parallel [
            (set (reg:DI 171 [ _117 ])
                (plus:DI (reg:DI 170 [ _116 ])
                    (const_int 2147450880 [0x7fff8000])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":75:40 -1
     (nil))

;; _118 = (signed char *) _117;

(insn 192 191 0 (set (reg/f:DI 172 [ _118 ])
        (reg:DI 171 [ _117 ])) "queryTAD.c":75:40 -1
     (nil))

;; _119 = *_118;

(insn 193 192 0 (set (reg:QI 173 [ _119 ])
        (mem:QI (reg/f:DI 172 [ _118 ]) [10 *_118+0 S1 A8])) "queryTAD.c":75:40 -1
     (nil))

;; if (_119 != 0)

(insn 194 193 195 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 173 [ _119 ])
            (const_int 0 [0]))) "queryTAD.c":75:40 -1
     (nil))

(jump_insn 195 194 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "queryTAD.c":75:40 -1
     (nil))

;; Generating RTL for gimple basic block 16

;; __builtin___asan_report_store8 (_115);

(insn 197 196 198 (set (reg:DI 5 di)
        (reg:DI 169 [ _115 ])) "queryTAD.c":75:40 -1
     (nil))

(call_insn 198 197 199 (call (mem:QI (symbol_ref:DI ("__asan_report_store8") [flags 0x41]  <function_decl 0x7fc58eea5f00 __builtin___asan_report_store8>) [0 __builtin___asan_report_store8 S1 A8])
        (const_int 0 [0])) "queryTAD.c":75:40 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

(barrier 199 198 0)

;; Generating RTL for gimple basic block 17

;; 

(code_label 200 199 201 54 (nil) [0 uses])

(note 201 200 0 NOTE_INSN_BASIC_BLOCK)

;; _30->oldest.year = year_51(D);

(insn 202 201 203 (set (reg:DI 223)
        (mem/c:DI (reg/f:DI 76 virtual-incoming-args) [2 year+0 S8 A64])) "queryTAD.c":75:40 -1
     (nil))

(insn 203 202 0 (set (mem:DI (plus:DI (reg/f:DI 111 [ _30 ])
                (const_int 32 [0x20])) [2 _30->oldest.year+0 S8 A64])
        (reg:DI 223)) "queryTAD.c":75:40 -1
     (nil))

;; _31 = q_49(D)->sensorsID;

(insn 204 203 205 (set (reg/f:DI 224)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [11 q+0 S8 A64])) "queryTAD.c":76:10 -1
     (nil))

(insn 205 204 0 (set (reg/f:DI 112 [ _31 ])
        (mem/f:DI (plus:DI (reg/f:DI 224)
                (const_int 24 [0x18])) [7 q_49(D)->sensorsID+0 S8 A64])) "queryTAD.c":76:10 -1
     (nil))

;; _32 = ID_50(D) * 80;

(insn 206 205 207 (set (reg:DI 225)
        (mem/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [2 ID+0 S8 A64])) "queryTAD.c":76:21 -1
     (nil))

(insn 207 206 208 (set (reg:DI 226)
        (reg:DI 225)) "queryTAD.c":76:21 -1
     (nil))

(insn 208 207 209 (parallel [
            (set (reg:DI 226)
                (ashift:DI (reg:DI 226)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":76:21 -1
     (nil))

(insn 209 208 210 (parallel [
            (set (reg:DI 226)
                (plus:DI (reg:DI 226)
                    (reg:DI 225)))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":76:21 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 225)
            (const_int 5 [0x5]))
        (nil)))

(insn 210 209 211 (parallel [
            (set (reg:DI 227)
                (ashift:DI (reg:DI 226)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":76:21 -1
     (nil))

(insn 211 210 212 (set (reg:DI 226)
        (reg:DI 227)) "queryTAD.c":76:21 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 225)
            (const_int 80 [0x50]))
        (nil)))

(insn 212 211 0 (set (reg:DI 113 [ _32 ])
        (reg:DI 226)) "queryTAD.c":76:21 -1
     (nil))

;; _33 = _32 + 18446744073709551536;

(insn 213 212 0 (parallel [
            (set (reg:DI 114 [ _33 ])
                (plus:DI (reg:DI 113 [ _32 ])
                    (const_int -80 [0xffffffffffffffb0])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":76:21 -1
     (nil))

;; _34 = _31 + _33;

(insn 214 213 0 (parallel [
            (set (reg/f:DI 115 [ _34 ])
                (plus:DI (reg/f:DI 112 [ _31 ])
                    (reg:DI 114 [ _33 ])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":76:21 -1
     (nil))

;; _70 = &_34->oldest.old_count;

(insn 215 214 0 (parallel [
            (set (reg/f:DI 135 [ _70 ])
                (plus:DI (reg/f:DI 115 [ _34 ])
                    (const_int 56 [0x38])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":76:45 -1
     (nil))

;; _120 = (unsigned long) _70;

(insn 216 215 0 (set (reg:DI 174 [ _120 ])
        (reg/f:DI 135 [ _70 ])) "queryTAD.c":76:45 -1
     (nil))

;; _121 = _120 >> 3;

(insn 217 216 0 (parallel [
            (set (reg:DI 175 [ _121 ])
                (lshiftrt:DI (reg:DI 174 [ _120 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":76:45 -1
     (nil))

;; _122 = _121 + 2147450880;

(insn 218 217 0 (parallel [
            (set (reg:DI 176 [ _122 ])
                (plus:DI (reg:DI 175 [ _121 ])
                    (const_int 2147450880 [0x7fff8000])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":76:45 -1
     (nil))

;; _123 = (signed char *) _122;

(insn 219 218 0 (set (reg/f:DI 177 [ _123 ])
        (reg:DI 176 [ _122 ])) "queryTAD.c":76:45 -1
     (nil))

;; _124 = *_123;

(insn 220 219 0 (set (reg:QI 178 [ _124 ])
        (mem:QI (reg/f:DI 177 [ _123 ]) [10 *_123+0 S1 A8])) "queryTAD.c":76:45 -1
     (nil))

;; if (_124 != 0)

(insn 221 220 222 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 178 [ _124 ])
            (const_int 0 [0]))) "queryTAD.c":76:45 -1
     (nil))

(jump_insn 222 221 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "queryTAD.c":76:45 -1
     (nil))

;; Generating RTL for gimple basic block 18

;; __builtin___asan_report_store8 (_120);

(insn 224 223 225 (set (reg:DI 5 di)
        (reg:DI 174 [ _120 ])) "queryTAD.c":76:45 -1
     (nil))

(call_insn 225 224 226 (call (mem:QI (symbol_ref:DI ("__asan_report_store8") [flags 0x41]  <function_decl 0x7fc58eea5f00 __builtin___asan_report_store8>) [0 __builtin___asan_report_store8 S1 A8])
        (const_int 0 [0])) "queryTAD.c":76:45 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

(barrier 226 225 0)

;; Generating RTL for gimple basic block 19

;; 

(code_label 227 226 228 55 (nil) [0 uses])

(note 228 227 0 NOTE_INSN_BASIC_BLOCK)

;; _34->oldest.old_count = pedestrians_58(D);

(insn 229 228 230 (set (reg:DI 228)
        (mem/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -64 [0xffffffffffffffc0])) [2 pedestrians+0 S8 A64])) "queryTAD.c":76:45 -1
     (nil))

(insn 230 229 0 (set (mem:DI (plus:DI (reg/f:DI 115 [ _34 ])
                (const_int 56 [0x38])) [2 _34->oldest.old_count+0 S8 A64])
        (reg:DI 228)) "queryTAD.c":76:45 -1
     (nil))

;; _35 = q_49(D)->sensorsID;

(insn 231 230 232 (set (reg/f:DI 229)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [11 q+0 S8 A64])) "queryTAD.c":77:10 -1
     (nil))

(insn 232 231 0 (set (reg/f:DI 116 [ _35 ])
        (mem/f:DI (plus:DI (reg/f:DI 229)
                (const_int 24 [0x18])) [7 q_49(D)->sensorsID+0 S8 A64])) "queryTAD.c":77:10 -1
     (nil))

;; _36 = ID_50(D) * 80;

(insn 233 232 234 (set (reg:DI 230)
        (mem/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [2 ID+0 S8 A64])) "queryTAD.c":77:21 -1
     (nil))

(insn 234 233 235 (set (reg:DI 231)
        (reg:DI 230)) "queryTAD.c":77:21 -1
     (nil))

(insn 235 234 236 (parallel [
            (set (reg:DI 231)
                (ashift:DI (reg:DI 231)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":77:21 -1
     (nil))

(insn 236 235 237 (parallel [
            (set (reg:DI 231)
                (plus:DI (reg:DI 231)
                    (reg:DI 230)))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":77:21 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 230)
            (const_int 5 [0x5]))
        (nil)))

(insn 237 236 238 (parallel [
            (set (reg:DI 232)
                (ashift:DI (reg:DI 231)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":77:21 -1
     (nil))

(insn 238 237 239 (set (reg:DI 231)
        (reg:DI 232)) "queryTAD.c":77:21 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 230)
            (const_int 80 [0x50]))
        (nil)))

(insn 239 238 0 (set (reg:DI 117 [ _36 ])
        (reg:DI 231)) "queryTAD.c":77:21 -1
     (nil))

;; _37 = _36 + 18446744073709551536;

(insn 240 239 0 (parallel [
            (set (reg:DI 118 [ _37 ])
                (plus:DI (reg:DI 117 [ _36 ])
                    (const_int -80 [0xffffffffffffffb0])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":77:21 -1
     (nil))

;; _38 = _35 + _37;

(insn 241 240 0 (parallel [
            (set (reg/f:DI 119 [ _38 ])
                (plus:DI (reg/f:DI 116 [ _35 ])
                    (reg:DI 118 [ _37 ])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":77:21 -1
     (nil))

;; _71 = &_38->oldest.dayN;

(insn 242 241 0 (parallel [
            (set (reg/f:DI 136 [ _71 ])
                (plus:DI (reg/f:DI 119 [ _38 ])
                    (const_int 72 [0x48])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":77:40 -1
     (nil))

;; _125 = (unsigned long) _71;

(insn 243 242 0 (set (reg:DI 179 [ _125 ])
        (reg/f:DI 136 [ _71 ])) "queryTAD.c":77:40 -1
     (nil))

;; _126 = _125 >> 3;

(insn 244 243 0 (parallel [
            (set (reg:DI 180 [ _126 ])
                (lshiftrt:DI (reg:DI 179 [ _125 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":77:40 -1
     (nil))

;; _127 = _126 + 2147450880;

(insn 245 244 0 (parallel [
            (set (reg:DI 181 [ _127 ])
                (plus:DI (reg:DI 180 [ _126 ])
                    (const_int 2147450880 [0x7fff8000])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":77:40 -1
     (nil))

;; _128 = (signed char *) _127;

(insn 246 245 0 (set (reg/f:DI 182 [ _128 ])
        (reg:DI 181 [ _127 ])) "queryTAD.c":77:40 -1
     (nil))

;; _129 = *_128;

(insn 247 246 0 (set (reg:QI 183 [ _129 ])
        (mem:QI (reg/f:DI 182 [ _128 ]) [10 *_128+0 S1 A8])) "queryTAD.c":77:40 -1
     (nil))

;; if (_129 != 0)

(insn 248 247 249 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 183 [ _129 ])
            (const_int 0 [0]))) "queryTAD.c":77:40 -1
     (nil))

(jump_insn 249 248 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "queryTAD.c":77:40 -1
     (nil))

;; Generating RTL for gimple basic block 20

;; __builtin___asan_report_store8 (_125);

(insn 251 250 252 (set (reg:DI 5 di)
        (reg:DI 179 [ _125 ])) "queryTAD.c":77:40 -1
     (nil))

(call_insn 252 251 253 (call (mem:QI (symbol_ref:DI ("__asan_report_store8") [flags 0x41]  <function_decl 0x7fc58eea5f00 __builtin___asan_report_store8>) [0 __builtin___asan_report_store8 S1 A8])
        (const_int 0 [0])) "queryTAD.c":77:40 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

(barrier 253 252 0)

;; Generating RTL for gimple basic block 21

;; 

(code_label 254 253 255 56 (nil) [0 uses])

(note 255 254 0 NOTE_INSN_BASIC_BLOCK)

;; _38->oldest.dayN = dayN_53(D);

(insn 256 255 257 (set (reg:DI 233)
        (mem/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [2 dayN+0 S8 A64])) "queryTAD.c":77:40 -1
     (nil))

(insn 257 256 0 (set (mem:DI (plus:DI (reg/f:DI 119 [ _38 ])
                (const_int 72 [0x48])) [2 _38->oldest.dayN+0 S8 A64])
        (reg:DI 233)) "queryTAD.c":77:40 -1
     (nil))

;; _39 = q_49(D)->sensorsID;

(insn 258 257 259 (set (reg/f:DI 234)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [11 q+0 S8 A64])) "queryTAD.c":78:10 -1
     (nil))

(insn 259 258 0 (set (reg/f:DI 120 [ _39 ])
        (mem/f:DI (plus:DI (reg/f:DI 234)
                (const_int 24 [0x18])) [7 q_49(D)->sensorsID+0 S8 A64])) "queryTAD.c":78:10 -1
     (nil))

;; _40 = ID_50(D) * 80;

(insn 260 259 261 (set (reg:DI 235)
        (mem/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [2 ID+0 S8 A64])) "queryTAD.c":78:21 -1
     (nil))

(insn 261 260 262 (set (reg:DI 236)
        (reg:DI 235)) "queryTAD.c":78:21 -1
     (nil))

(insn 262 261 263 (parallel [
            (set (reg:DI 236)
                (ashift:DI (reg:DI 236)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":78:21 -1
     (nil))

(insn 263 262 264 (parallel [
            (set (reg:DI 236)
                (plus:DI (reg:DI 236)
                    (reg:DI 235)))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":78:21 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 235)
            (const_int 5 [0x5]))
        (nil)))

(insn 264 263 265 (parallel [
            (set (reg:DI 237)
                (ashift:DI (reg:DI 236)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":78:21 -1
     (nil))

(insn 265 264 266 (set (reg:DI 236)
        (reg:DI 237)) "queryTAD.c":78:21 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 235)
            (const_int 80 [0x50]))
        (nil)))

(insn 266 265 0 (set (reg:DI 121 [ _40 ])
        (reg:DI 236)) "queryTAD.c":78:21 -1
     (nil))

;; _41 = _40 + 18446744073709551536;

(insn 267 266 0 (parallel [
            (set (reg:DI 122 [ _41 ])
                (plus:DI (reg:DI 121 [ _40 ])
                    (const_int -80 [0xffffffffffffffb0])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":78:21 -1
     (nil))

;; _42 = _39 + _41;

(insn 268 267 0 (parallel [
            (set (reg/f:DI 123 [ _42 ])
                (plus:DI (reg/f:DI 120 [ _39 ])
                    (reg:DI 122 [ _41 ])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":78:21 -1
     (nil))

;; _72 = &_42->oldest.month;

(insn 269 268 0 (parallel [
            (set (reg/f:DI 137 [ _72 ])
                (plus:DI (reg/f:DI 123 [ _42 ])
                    (const_int 64 [0x40])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":78:41 -1
     (nil))

;; _130 = (unsigned long) _72;

(insn 270 269 0 (set (reg:DI 184 [ _130 ])
        (reg/f:DI 137 [ _72 ])) "queryTAD.c":78:41 -1
     (nil))

;; _131 = _130 >> 3;

(insn 271 270 0 (parallel [
            (set (reg:DI 185 [ _131 ])
                (lshiftrt:DI (reg:DI 184 [ _130 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":78:41 -1
     (nil))

;; _132 = _131 + 2147450880;

(insn 272 271 0 (parallel [
            (set (reg:DI 186 [ _132 ])
                (plus:DI (reg:DI 185 [ _131 ])
                    (const_int 2147450880 [0x7fff8000])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":78:41 -1
     (nil))

;; _133 = (signed char *) _132;

(insn 273 272 0 (set (reg/f:DI 187 [ _133 ])
        (reg:DI 186 [ _132 ])) "queryTAD.c":78:41 -1
     (nil))

;; _134 = *_133;

(insn 274 273 0 (set (reg:QI 188 [ _134 ])
        (mem:QI (reg/f:DI 187 [ _133 ]) [10 *_133+0 S1 A8])) "queryTAD.c":78:41 -1
     (nil))

;; if (_134 != 0)

(insn 275 274 276 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 188 [ _134 ])
            (const_int 0 [0]))) "queryTAD.c":78:41 -1
     (nil))

(jump_insn 276 275 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "queryTAD.c":78:41 -1
     (nil))

;; Generating RTL for gimple basic block 22

;; __builtin___asan_report_store8 (_130);

(insn 278 277 279 (set (reg:DI 5 di)
        (reg:DI 184 [ _130 ])) "queryTAD.c":78:41 -1
     (nil))

(call_insn 279 278 280 (call (mem:QI (symbol_ref:DI ("__asan_report_store8") [flags 0x41]  <function_decl 0x7fc58eea5f00 __builtin___asan_report_store8>) [0 __builtin___asan_report_store8 S1 A8])
        (const_int 0 [0])) "queryTAD.c":78:41 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

(barrier 280 279 0)

;; Generating RTL for gimple basic block 23

;; 

(code_label 281 280 282 57 (nil) [0 uses])

(note 282 281 0 NOTE_INSN_BASIC_BLOCK)

;; _42->oldest.month = month_52(D);

(insn 283 282 284 (set (reg:DI 238)
        (mem/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [2 month+0 S8 A64])) "queryTAD.c":78:41 -1
     (nil))

(insn 284 283 0 (set (mem:DI (plus:DI (reg/f:DI 123 [ _42 ])
                (const_int 64 [0x40])) [2 _42->oldest.month+0 S8 A64])
        (reg:DI 238)) "queryTAD.c":78:41 -1
     (nil))

;; _43 = q_49(D)->sensorsID;

(insn 285 284 286 (set (reg/f:DI 239)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [11 q+0 S8 A64])) "queryTAD.c":79:10 -1
     (nil))

(insn 286 285 0 (set (reg/f:DI 124 [ _43 ])
        (mem/f:DI (plus:DI (reg/f:DI 239)
                (const_int 24 [0x18])) [7 q_49(D)->sensorsID+0 S8 A64])) "queryTAD.c":79:10 -1
     (nil))

;; _44 = ID_50(D) * 80;

(insn 287 286 288 (set (reg:DI 240)
        (mem/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [2 ID+0 S8 A64])) "queryTAD.c":79:21 -1
     (nil))

(insn 288 287 289 (set (reg:DI 241)
        (reg:DI 240)) "queryTAD.c":79:21 -1
     (nil))

(insn 289 288 290 (parallel [
            (set (reg:DI 241)
                (ashift:DI (reg:DI 241)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":79:21 -1
     (nil))

(insn 290 289 291 (parallel [
            (set (reg:DI 241)
                (plus:DI (reg:DI 241)
                    (reg:DI 240)))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":79:21 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 240)
            (const_int 5 [0x5]))
        (nil)))

(insn 291 290 292 (parallel [
            (set (reg:DI 242)
                (ashift:DI (reg:DI 241)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":79:21 -1
     (nil))

(insn 292 291 293 (set (reg:DI 241)
        (reg:DI 242)) "queryTAD.c":79:21 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 240)
            (const_int 80 [0x50]))
        (nil)))

(insn 293 292 0 (set (reg:DI 125 [ _44 ])
        (reg:DI 241)) "queryTAD.c":79:21 -1
     (nil))

;; _45 = _44 + 18446744073709551536;

(insn 294 293 0 (parallel [
            (set (reg:DI 126 [ _45 ])
                (plus:DI (reg:DI 125 [ _44 ])
                    (const_int -80 [0xffffffffffffffb0])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":79:21 -1
     (nil))

;; _46 = _43 + _45;

(insn 295 294 0 (parallel [
            (set (reg/f:DI 127 [ _46 ])
                (plus:DI (reg/f:DI 124 [ _43 ])
                    (reg:DI 126 [ _45 ])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":79:21 -1
     (nil))

;; _73 = &_46->oldest.time;

(insn 296 295 0 (parallel [
            (set (reg/f:DI 138 [ _73 ])
                (plus:DI (reg/f:DI 127 [ _46 ])
                    (const_int 48 [0x30])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":79:40 -1
     (nil))

;; _135 = (unsigned long) _73;

(insn 297 296 0 (set (reg:DI 189 [ _135 ])
        (reg/f:DI 138 [ _73 ])) "queryTAD.c":79:40 -1
     (nil))

;; _136 = _135 >> 3;

(insn 298 297 0 (parallel [
            (set (reg:DI 190 [ _136 ])
                (lshiftrt:DI (reg:DI 189 [ _135 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":79:40 -1
     (nil))

;; _137 = _136 + 2147450880;

(insn 299 298 0 (parallel [
            (set (reg:DI 191 [ _137 ])
                (plus:DI (reg:DI 190 [ _136 ])
                    (const_int 2147450880 [0x7fff8000])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":79:40 -1
     (nil))

;; _138 = (signed char *) _137;

(insn 300 299 0 (set (reg/f:DI 192 [ _138 ])
        (reg:DI 191 [ _137 ])) "queryTAD.c":79:40 -1
     (nil))

;; _139 = *_138;

(insn 301 300 0 (set (reg:QI 193 [ _139 ])
        (mem:QI (reg/f:DI 192 [ _138 ]) [10 *_138+0 S1 A8])) "queryTAD.c":79:40 -1
     (nil))

;; if (_139 != 0)

(insn 302 301 303 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 193 [ _139 ])
            (const_int 0 [0]))) "queryTAD.c":79:40 -1
     (nil))

(jump_insn 303 302 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "queryTAD.c":79:40 -1
     (nil))

;; Generating RTL for gimple basic block 24

;; __builtin___asan_report_store8 (_135);

(insn 305 304 306 (set (reg:DI 5 di)
        (reg:DI 189 [ _135 ])) "queryTAD.c":79:40 -1
     (nil))

(call_insn 306 305 307 (call (mem:QI (symbol_ref:DI ("__asan_report_store8") [flags 0x41]  <function_decl 0x7fc58eea5f00 __builtin___asan_report_store8>) [0 __builtin___asan_report_store8 S1 A8])
        (const_int 0 [0])) "queryTAD.c":79:40 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

(barrier 307 306 0)

;; Generating RTL for gimple basic block 25

;; 

(code_label 308 307 309 58 (nil) [0 uses])

(note 309 308 0 NOTE_INSN_BASIC_BLOCK)

;; _46->oldest.time = time_54(D);

(insn 310 309 311 (set (reg:DI 243)
        (mem/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [2 time+0 S8 A64])) "queryTAD.c":79:40 -1
     (nil))

(insn 311 310 0 (set (mem:DI (plus:DI (reg/f:DI 127 [ _46 ])
                (const_int 48 [0x30])) [2 _46->oldest.time+0 S8 A64])
        (reg:DI 243)) "queryTAD.c":79:40 -1
     (nil))

;; Generating RTL for gimple basic block 26

;; 

(code_label 312 311 313 52 (nil) [0 uses])

(note 313 312 0 NOTE_INSN_BASIC_BLOCK)


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Edge 13->27 redirected to 28
Merging block 27 into block 26...
Merged blocks 26 and 27.
Merged 26 and 27 without moving.


try_optimize_cfg iteration 2

fix_loop_structure: fixing up loops for function


;;
;; Full RTL generated for this function:
;;
(note 1 0 9 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 4, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 9 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 9 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [11 q+0 S8 A64])
        (reg:DI 5 di [ q ])) "queryTAD.c":71:111 -1
     (nil))
(insn 3 2 4 2 (set (mem/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [2 ID+0 S8 A64])
        (reg:DI 4 si [ ID ])) "queryTAD.c":71:111 -1
     (nil))
(insn 4 3 5 2 (set (mem/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [2 month+0 S8 A64])
        (reg:DI 1 dx [ month ])) "queryTAD.c":71:111 -1
     (nil))
(insn 5 4 6 2 (set (mem/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [2 dayN+0 S8 A64])
        (reg:DI 2 cx [ dayN ])) "queryTAD.c":71:111 -1
     (nil))
(insn 6 5 7 2 (set (mem/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [2 time+0 S8 A64])
        (reg:DI 36 r8 [ time ])) "queryTAD.c":71:111 -1
     (nil))
(insn 7 6 8 2 (set (mem/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -64 [0xffffffffffffffc0])) [2 pedestrians+0 S8 A64])
        (reg:DI 37 r9 [ pedestrians ])) "queryTAD.c":71:111 -1
     (nil))
(note 8 7 11 2 NOTE_INSN_FUNCTION_BEG)
(insn 11 8 12 2 (set (reg/f:DI 194)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [11 q+0 S8 A64])) "queryTAD.c":72:177 -1
     (nil))
(insn 12 11 13 2 (parallel [
            (set (reg/f:DI 128 [ _63 ])
                (plus:DI (reg/f:DI 194)
                    (const_int 24 [0x18])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":72:177 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [11 q+0 S8 A64])
            (const_int 24 [0x18]))
        (nil)))
(insn 13 12 14 2 (set (reg:DI 139 [ _85 ])
        (reg/f:DI 128 [ _63 ])) "queryTAD.c":72:177 -1
     (nil))
(insn 14 13 15 2 (parallel [
            (set (reg:DI 140 [ _86 ])
                (lshiftrt:DI (reg:DI 139 [ _85 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":72:177 -1
     (nil))
(insn 15 14 16 2 (parallel [
            (set (reg:DI 141 [ _87 ])
                (plus:DI (reg:DI 140 [ _86 ])
                    (const_int 2147450880 [0x7fff8000])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":72:177 -1
     (nil))
(insn 16 15 17 2 (set (reg/f:DI 142 [ _88 ])
        (reg:DI 141 [ _87 ])) "queryTAD.c":72:177 -1
     (nil))
(insn 17 16 18 2 (set (reg:QI 143 [ _89 ])
        (mem:QI (reg/f:DI 142 [ _88 ]) [10 *_88+0 S1 A8])) "queryTAD.c":72:177 -1
     (nil))
(insn 18 17 19 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 143 [ _89 ])
            (const_int 0 [0]))) "queryTAD.c":72:177 -1
     (nil))
(jump_insn 19 18 20 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 24)
            (pc))) "queryTAD.c":72:177 -1
     (nil)
 -> 24)
;;  succ:       5 [100.0% (guessed)] 
;;              4 [0.0% (guessed)]  (FALLTHRU)

;; basic block 4, loop depth 0, maybe hot
;;  prev block 2, next block 5, flags: (NEW, REACHABLE, RTL)
;;  pred:       2 [0.0% (guessed)]  (FALLTHRU)
(note 20 19 21 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 21 20 22 4 (set (reg:DI 5 di)
        (reg:DI 139 [ _85 ])) "queryTAD.c":72:177 -1
     (nil))
(call_insn 22 21 23 4 (call (mem:QI (symbol_ref:DI ("__asan_report_load8") [flags 0x41]  <function_decl 0x7fc58eea5900 __builtin___asan_report_load8>) [0 __builtin___asan_report_load8 S1 A8])
        (const_int 0 [0])) "queryTAD.c":72:177 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:      

(barrier 23 22 24)
;; basic block 5, loop depth 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL)
;;  pred:       2 [100.0% (guessed)] 
(code_label 24 23 25 5 47 (nil) [1 uses])
(note 25 24 26 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 26 25 27 5 (set (reg/f:DI 195)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [11 q+0 S8 A64])) "queryTAD.c":72:177 -1
     (nil))
(insn 27 26 28 5 (set (reg/f:DI 82 [ _1 ])
        (mem/f:DI (plus:DI (reg/f:DI 195)
                (const_int 24 [0x18])) [7 q_49(D)->sensorsID+0 S8 A64])) "queryTAD.c":72:177 -1
     (nil))
(insn 28 27 29 5 (set (reg:DI 196)
        (mem/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [2 ID+0 S8 A64])) "queryTAD.c":72:188 -1
     (nil))
(insn 29 28 30 5 (set (reg:DI 197)
        (reg:DI 196)) "queryTAD.c":72:188 -1
     (nil))
(insn 30 29 31 5 (parallel [
            (set (reg:DI 197)
                (ashift:DI (reg:DI 197)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":72:188 -1
     (nil))
(insn 31 30 32 5 (parallel [
            (set (reg:DI 197)
                (plus:DI (reg:DI 197)
                    (reg:DI 196)))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":72:188 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 196)
            (const_int 5 [0x5]))
        (nil)))
(insn 32 31 33 5 (parallel [
            (set (reg:DI 198)
                (ashift:DI (reg:DI 197)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":72:188 -1
     (nil))
(insn 33 32 34 5 (set (reg:DI 197)
        (reg:DI 198)) "queryTAD.c":72:188 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 196)
            (const_int 80 [0x50]))
        (nil)))
(insn 34 33 35 5 (set (reg:DI 83 [ _2 ])
        (reg:DI 197)) "queryTAD.c":72:188 -1
     (nil))
(insn 35 34 36 5 (parallel [
            (set (reg:DI 84 [ _3 ])
                (plus:DI (reg:DI 83 [ _2 ])
                    (const_int -80 [0xffffffffffffffb0])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":72:188 -1
     (nil))
(insn 36 35 37 5 (parallel [
            (set (reg/f:DI 85 [ _4 ])
                (plus:DI (reg/f:DI 82 [ _1 ])
                    (reg:DI 84 [ _3 ])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":72:188 -1
     (nil))
(insn 37 36 38 5 (parallel [
            (set (reg/f:DI 129 [ _64 ])
                (plus:DI (reg/f:DI 85 [ _4 ])
                    (const_int 48 [0x30])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":72:13 -1
     (nil))
(insn 38 37 39 5 (set (reg:DI 144 [ _90 ])
        (reg/f:DI 129 [ _64 ])) "queryTAD.c":72:13 -1
     (nil))
(insn 39 38 40 5 (parallel [
            (set (reg:DI 145 [ _91 ])
                (lshiftrt:DI (reg:DI 144 [ _90 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":72:13 -1
     (nil))
(insn 40 39 41 5 (parallel [
            (set (reg:DI 146 [ _92 ])
                (plus:DI (reg:DI 145 [ _91 ])
                    (const_int 2147450880 [0x7fff8000])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":72:13 -1
     (nil))
(insn 41 40 42 5 (set (reg/f:DI 147 [ _93 ])
        (reg:DI 146 [ _92 ])) "queryTAD.c":72:13 -1
     (nil))
(insn 42 41 43 5 (set (reg:QI 148 [ _94 ])
        (mem:QI (reg/f:DI 147 [ _93 ]) [10 *_93+0 S1 A8])) "queryTAD.c":72:13 -1
     (nil))
(insn 43 42 44 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 148 [ _94 ])
            (const_int 0 [0]))) "queryTAD.c":72:13 -1
     (nil))
(jump_insn 44 43 45 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 49)
            (pc))) "queryTAD.c":72:13 -1
     (nil)
 -> 49)
;;  succ:       7 [100.0% (guessed)] 
;;              6 [0.0% (guessed)]  (FALLTHRU)

;; basic block 6, loop depth 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL)
;;  pred:       5 [0.0% (guessed)]  (FALLTHRU)
(note 45 44 46 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 46 45 47 6 (set (reg:DI 5 di)
        (reg:DI 144 [ _90 ])) "queryTAD.c":72:13 -1
     (nil))
(call_insn 47 46 48 6 (call (mem:QI (symbol_ref:DI ("__asan_report_load8") [flags 0x41]  <function_decl 0x7fc58eea5900 __builtin___asan_report_load8>) [0 __builtin___asan_report_load8 S1 A8])
        (const_int 0 [0])) "queryTAD.c":72:13 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:      

(barrier 48 47 49)
;; basic block 7, loop depth 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL)
;;  pred:       5 [100.0% (guessed)] 
(code_label 49 48 50 7 48 (nil) [1 uses])
(note 50 49 51 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 51 50 52 7 (set (reg:DI 86 [ _5 ])
        (mem:DI (plus:DI (reg/f:DI 85 [ _4 ])
                (const_int 48 [0x30])) [2 _4->oldest.time+0 S8 A64])) "queryTAD.c":72:13 -1
     (nil))
(insn 52 51 53 7 (set (reg/f:DI 199)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [11 q+0 S8 A64])) "queryTAD.c":72:145 -1
     (nil))
(insn 53 52 54 7 (set (reg/f:DI 87 [ _6 ])
        (mem/f:DI (plus:DI (reg/f:DI 199)
                (const_int 24 [0x18])) [7 q_49(D)->sensorsID+0 S8 A64])) "queryTAD.c":72:145 -1
     (nil))
(insn 54 53 55 7 (set (reg:DI 200)
        (mem/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [2 ID+0 S8 A64])) "queryTAD.c":72:156 -1
     (nil))
(insn 55 54 56 7 (set (reg:DI 201)
        (reg:DI 200)) "queryTAD.c":72:156 -1
     (nil))
(insn 56 55 57 7 (parallel [
            (set (reg:DI 201)
                (ashift:DI (reg:DI 201)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":72:156 -1
     (nil))
(insn 57 56 58 7 (parallel [
            (set (reg:DI 201)
                (plus:DI (reg:DI 201)
                    (reg:DI 200)))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":72:156 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 200)
            (const_int 5 [0x5]))
        (nil)))
(insn 58 57 59 7 (parallel [
            (set (reg:DI 202)
                (ashift:DI (reg:DI 201)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":72:156 -1
     (nil))
(insn 59 58 60 7 (set (reg:DI 201)
        (reg:DI 202)) "queryTAD.c":72:156 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 200)
            (const_int 80 [0x50]))
        (nil)))
(insn 60 59 61 7 (set (reg:DI 88 [ _7 ])
        (reg:DI 201)) "queryTAD.c":72:156 -1
     (nil))
(insn 61 60 62 7 (parallel [
            (set (reg:DI 89 [ _8 ])
                (plus:DI (reg:DI 88 [ _7 ])
                    (const_int -80 [0xffffffffffffffb0])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":72:156 -1
     (nil))
(insn 62 61 63 7 (parallel [
            (set (reg/f:DI 90 [ _9 ])
                (plus:DI (reg/f:DI 87 [ _6 ])
                    (reg:DI 89 [ _8 ])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":72:156 -1
     (nil))
(insn 63 62 64 7 (parallel [
            (set (reg/f:DI 91 [ _10 ])
                (plus:DI (reg/f:DI 90 [ _9 ])
                    (const_int 40 [0x28])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":72:13 -1
     (nil))
(insn 64 63 65 7 (set (reg/f:DI 203)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [11 q+0 S8 A64])) "queryTAD.c":72:103 -1
     (nil))
(insn 65 64 66 7 (set (reg/f:DI 92 [ _11 ])
        (mem/f:DI (plus:DI (reg/f:DI 203)
                (const_int 24 [0x18])) [7 q_49(D)->sensorsID+0 S8 A64])) "queryTAD.c":72:103 -1
     (nil))
(insn 66 65 67 7 (set (reg:DI 204)
        (mem/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [2 ID+0 S8 A64])) "queryTAD.c":72:114 -1
     (nil))
(insn 67 66 68 7 (set (reg:DI 205)
        (reg:DI 204)) "queryTAD.c":72:114 -1
     (nil))
(insn 68 67 69 7 (parallel [
            (set (reg:DI 205)
                (ashift:DI (reg:DI 205)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":72:114 -1
     (nil))
(insn 69 68 70 7 (parallel [
            (set (reg:DI 205)
                (plus:DI (reg:DI 205)
                    (reg:DI 204)))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":72:114 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 204)
            (const_int 5 [0x5]))
        (nil)))
(insn 70 69 71 7 (parallel [
            (set (reg:DI 206)
                (ashift:DI (reg:DI 205)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":72:114 -1
     (nil))
(insn 71 70 72 7 (set (reg:DI 205)
        (reg:DI 206)) "queryTAD.c":72:114 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 204)
            (const_int 80 [0x50]))
        (nil)))
(insn 72 71 73 7 (set (reg:DI 93 [ _12 ])
        (reg:DI 205)) "queryTAD.c":72:114 -1
     (nil))
(insn 73 72 74 7 (parallel [
            (set (reg:DI 94 [ _13 ])
                (plus:DI (reg:DI 93 [ _12 ])
                    (const_int -80 [0xffffffffffffffb0])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":72:114 -1
     (nil))
(insn 74 73 75 7 (parallel [
            (set (reg/f:DI 95 [ _14 ])
                (plus:DI (reg/f:DI 92 [ _11 ])
                    (reg:DI 94 [ _13 ])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":72:114 -1
     (nil))
(insn 75 74 76 7 (parallel [
            (set (reg/f:DI 130 [ _65 ])
                (plus:DI (reg/f:DI 95 [ _14 ])
                    (const_int 72 [0x48])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":72:13 -1
     (nil))
(insn 76 75 77 7 (set (reg:DI 149 [ _95 ])
        (reg/f:DI 130 [ _65 ])) "queryTAD.c":72:13 -1
     (nil))
(insn 77 76 78 7 (parallel [
            (set (reg:DI 150 [ _96 ])
                (lshiftrt:DI (reg:DI 149 [ _95 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":72:13 -1
     (nil))
(insn 78 77 79 7 (parallel [
            (set (reg:DI 151 [ _97 ])
                (plus:DI (reg:DI 150 [ _96 ])
                    (const_int 2147450880 [0x7fff8000])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":72:13 -1
     (nil))
(insn 79 78 80 7 (set (reg/f:DI 152 [ _98 ])
        (reg:DI 151 [ _97 ])) "queryTAD.c":72:13 -1
     (nil))
(insn 80 79 81 7 (set (reg:QI 153 [ _99 ])
        (mem:QI (reg/f:DI 152 [ _98 ]) [10 *_98+0 S1 A8])) "queryTAD.c":72:13 -1
     (nil))
(insn 81 80 82 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 153 [ _99 ])
            (const_int 0 [0]))) "queryTAD.c":72:13 -1
     (nil))
(jump_insn 82 81 83 7 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 87)
            (pc))) "queryTAD.c":72:13 -1
     (nil)
 -> 87)
;;  succ:       9 [100.0% (guessed)] 
;;              8 [0.0% (guessed)]  (FALLTHRU)

;; basic block 8, loop depth 0, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL)
;;  pred:       7 [0.0% (guessed)]  (FALLTHRU)
(note 83 82 84 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 84 83 85 8 (set (reg:DI 5 di)
        (reg:DI 149 [ _95 ])) "queryTAD.c":72:13 -1
     (nil))
(call_insn 85 84 86 8 (call (mem:QI (symbol_ref:DI ("__asan_report_load8") [flags 0x41]  <function_decl 0x7fc58eea5900 __builtin___asan_report_load8>) [0 __builtin___asan_report_load8 S1 A8])
        (const_int 0 [0])) "queryTAD.c":72:13 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:      

(barrier 86 85 87)
;; basic block 9, loop depth 0, maybe hot
;;  prev block 8, next block 10, flags: (NEW, REACHABLE, RTL)
;;  pred:       7 [100.0% (guessed)] 
(code_label 87 86 88 9 49 (nil) [1 uses])
(note 88 87 89 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 89 88 90 9 (set (reg:DI 96 [ _15 ])
        (mem:DI (plus:DI (reg/f:DI 95 [ _14 ])
                (const_int 72 [0x48])) [2 _14->oldest.dayN+0 S8 A64])) "queryTAD.c":72:13 -1
     (nil))
(insn 90 89 91 9 (set (reg/f:DI 207)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [11 q+0 S8 A64])) "queryTAD.c":72:61 -1
     (nil))
(insn 91 90 92 9 (set (reg/f:DI 97 [ _16 ])
        (mem/f:DI (plus:DI (reg/f:DI 207)
                (const_int 24 [0x18])) [7 q_49(D)->sensorsID+0 S8 A64])) "queryTAD.c":72:61 -1
     (nil))
(insn 92 91 93 9 (set (reg:DI 208)
        (mem/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [2 ID+0 S8 A64])) "queryTAD.c":72:72 -1
     (nil))
(insn 93 92 94 9 (set (reg:DI 209)
        (reg:DI 208)) "queryTAD.c":72:72 -1
     (nil))
(insn 94 93 95 9 (parallel [
            (set (reg:DI 209)
                (ashift:DI (reg:DI 209)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":72:72 -1
     (nil))
(insn 95 94 96 9 (parallel [
            (set (reg:DI 209)
                (plus:DI (reg:DI 209)
                    (reg:DI 208)))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":72:72 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 208)
            (const_int 5 [0x5]))
        (nil)))
(insn 96 95 97 9 (parallel [
            (set (reg:DI 210)
                (ashift:DI (reg:DI 209)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":72:72 -1
     (nil))
(insn 97 96 98 9 (set (reg:DI 209)
        (reg:DI 210)) "queryTAD.c":72:72 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 208)
            (const_int 80 [0x50]))
        (nil)))
(insn 98 97 99 9 (set (reg:DI 98 [ _17 ])
        (reg:DI 209)) "queryTAD.c":72:72 -1
     (nil))
(insn 99 98 100 9 (parallel [
            (set (reg:DI 99 [ _18 ])
                (plus:DI (reg:DI 98 [ _17 ])
                    (const_int -80 [0xffffffffffffffb0])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":72:72 -1
     (nil))
(insn 100 99 101 9 (parallel [
            (set (reg/f:DI 100 [ _19 ])
                (plus:DI (reg/f:DI 97 [ _16 ])
                    (reg:DI 99 [ _18 ])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":72:72 -1
     (nil))
(insn 101 100 102 9 (parallel [
            (set (reg/f:DI 131 [ _66 ])
                (plus:DI (reg/f:DI 100 [ _19 ])
                    (const_int 64 [0x40])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":72:13 -1
     (nil))
(insn 102 101 103 9 (set (reg:DI 154 [ _100 ])
        (reg/f:DI 131 [ _66 ])) "queryTAD.c":72:13 -1
     (nil))
(insn 103 102 104 9 (parallel [
            (set (reg:DI 155 [ _101 ])
                (lshiftrt:DI (reg:DI 154 [ _100 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":72:13 -1
     (nil))
(insn 104 103 105 9 (parallel [
            (set (reg:DI 156 [ _102 ])
                (plus:DI (reg:DI 155 [ _101 ])
                    (const_int 2147450880 [0x7fff8000])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":72:13 -1
     (nil))
(insn 105 104 106 9 (set (reg/f:DI 157 [ _103 ])
        (reg:DI 156 [ _102 ])) "queryTAD.c":72:13 -1
     (nil))
(insn 106 105 107 9 (set (reg:QI 158 [ _104 ])
        (mem:QI (reg/f:DI 157 [ _103 ]) [10 *_103+0 S1 A8])) "queryTAD.c":72:13 -1
     (nil))
(insn 107 106 108 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 158 [ _104 ])
            (const_int 0 [0]))) "queryTAD.c":72:13 -1
     (nil))
(jump_insn 108 107 109 9 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 113)
            (pc))) "queryTAD.c":72:13 -1
     (nil)
 -> 113)
;;  succ:       11 [100.0% (guessed)] 
;;              10 [0.0% (guessed)]  (FALLTHRU)

;; basic block 10, loop depth 0, maybe hot
;;  prev block 9, next block 11, flags: (NEW, REACHABLE, RTL)
;;  pred:       9 [0.0% (guessed)]  (FALLTHRU)
(note 109 108 110 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 110 109 111 10 (set (reg:DI 5 di)
        (reg:DI 154 [ _100 ])) "queryTAD.c":72:13 -1
     (nil))
(call_insn 111 110 112 10 (call (mem:QI (symbol_ref:DI ("__asan_report_load8") [flags 0x41]  <function_decl 0x7fc58eea5900 __builtin___asan_report_load8>) [0 __builtin___asan_report_load8 S1 A8])
        (const_int 0 [0])) "queryTAD.c":72:13 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:      

(barrier 112 111 113)
;; basic block 11, loop depth 0, maybe hot
;;  prev block 10, next block 12, flags: (NEW, REACHABLE, RTL)
;;  pred:       9 [100.0% (guessed)] 
(code_label 113 112 114 11 50 (nil) [1 uses])
(note 114 113 115 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 115 114 116 11 (set (reg:DI 101 [ _20 ])
        (mem:DI (plus:DI (reg/f:DI 100 [ _19 ])
                (const_int 64 [0x40])) [2 _19->oldest.month+0 S8 A64])) "queryTAD.c":72:13 -1
     (nil))
(insn 116 115 117 11 (set (reg/f:DI 211)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [11 q+0 S8 A64])) "queryTAD.c":72:22 -1
     (nil))
(insn 117 116 118 11 (set (reg/f:DI 102 [ _21 ])
        (mem/f:DI (plus:DI (reg/f:DI 211)
                (const_int 24 [0x18])) [7 q_49(D)->sensorsID+0 S8 A64])) "queryTAD.c":72:22 -1
     (nil))
(insn 118 117 119 11 (set (reg:DI 212)
        (mem/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [2 ID+0 S8 A64])) "queryTAD.c":72:33 -1
     (nil))
(insn 119 118 120 11 (set (reg:DI 213)
        (reg:DI 212)) "queryTAD.c":72:33 -1
     (nil))
(insn 120 119 121 11 (parallel [
            (set (reg:DI 213)
                (ashift:DI (reg:DI 213)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":72:33 -1
     (nil))
(insn 121 120 122 11 (parallel [
            (set (reg:DI 213)
                (plus:DI (reg:DI 213)
                    (reg:DI 212)))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":72:33 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 212)
            (const_int 5 [0x5]))
        (nil)))
(insn 122 121 123 11 (parallel [
            (set (reg:DI 214)
                (ashift:DI (reg:DI 213)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":72:33 -1
     (nil))
(insn 123 122 124 11 (set (reg:DI 213)
        (reg:DI 214)) "queryTAD.c":72:33 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 212)
            (const_int 80 [0x50]))
        (nil)))
(insn 124 123 125 11 (set (reg:DI 103 [ _22 ])
        (reg:DI 213)) "queryTAD.c":72:33 -1
     (nil))
(insn 125 124 126 11 (parallel [
            (set (reg:DI 104 [ _23 ])
                (plus:DI (reg:DI 103 [ _22 ])
                    (const_int -80 [0xffffffffffffffb0])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":72:33 -1
     (nil))
(insn 126 125 127 11 (parallel [
            (set (reg/f:DI 105 [ _24 ])
                (plus:DI (reg/f:DI 102 [ _21 ])
                    (reg:DI 104 [ _23 ])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":72:33 -1
     (nil))
(insn 127 126 128 11 (parallel [
            (set (reg/f:DI 132 [ _67 ])
                (plus:DI (reg/f:DI 105 [ _24 ])
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":72:13 -1
     (nil))
(insn 128 127 129 11 (set (reg:DI 159 [ _105 ])
        (reg/f:DI 132 [ _67 ])) "queryTAD.c":72:13 -1
     (nil))
(insn 129 128 130 11 (parallel [
            (set (reg:DI 160 [ _106 ])
                (lshiftrt:DI (reg:DI 159 [ _105 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":72:13 -1
     (nil))
(insn 130 129 131 11 (parallel [
            (set (reg:DI 161 [ _107 ])
                (plus:DI (reg:DI 160 [ _106 ])
                    (const_int 2147450880 [0x7fff8000])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":72:13 -1
     (nil))
(insn 131 130 132 11 (set (reg/f:DI 162 [ _108 ])
        (reg:DI 161 [ _107 ])) "queryTAD.c":72:13 -1
     (nil))
(insn 132 131 133 11 (set (reg:QI 163 [ _109 ])
        (mem:QI (reg/f:DI 162 [ _108 ]) [10 *_108+0 S1 A8])) "queryTAD.c":72:13 -1
     (nil))
(insn 133 132 134 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 163 [ _109 ])
            (const_int 0 [0]))) "queryTAD.c":72:13 -1
     (nil))
(jump_insn 134 133 135 11 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 139)
            (pc))) "queryTAD.c":72:13 -1
     (nil)
 -> 139)
;;  succ:       13 [100.0% (guessed)] 
;;              12 [0.0% (guessed)]  (FALLTHRU)

;; basic block 12, loop depth 0, maybe hot
;;  prev block 11, next block 13, flags: (NEW, REACHABLE, RTL)
;;  pred:       11 [0.0% (guessed)]  (FALLTHRU)
(note 135 134 136 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 136 135 137 12 (set (reg:DI 5 di)
        (reg:DI 159 [ _105 ])) "queryTAD.c":72:13 -1
     (nil))
(call_insn 137 136 138 12 (call (mem:QI (symbol_ref:DI ("__asan_report_load8") [flags 0x41]  <function_decl 0x7fc58eea5900 __builtin___asan_report_load8>) [0 __builtin___asan_report_load8 S1 A8])
        (const_int 0 [0])) "queryTAD.c":72:13 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:      

(barrier 138 137 139)
;; basic block 13, loop depth 0, maybe hot
;;  prev block 12, next block 14, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       11 [100.0% (guessed)] 
(code_label 139 138 140 13 51 (nil) [1 uses])
(note 140 139 141 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 141 140 142 13 (set (reg:DI 106 [ _25 ])
        (mem:DI (plus:DI (reg/f:DI 105 [ _24 ])
                (const_int 32 [0x20])) [2 _24->oldest.year+0 S8 A64])) "queryTAD.c":72:13 -1
     (nil))
(insn 142 141 143 13 (set (reg:DI 215)
        (mem/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [2 dayN+0 S8 A64])) "queryTAD.c":72:13 -1
     (nil))
(insn 143 142 144 13 (set (reg:DI 216)
        (mem/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [2 month+0 S8 A64])) "queryTAD.c":72:13 -1
     (nil))
(insn 144 143 145 13 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":72:13 -1
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 145 144 146 13 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [2  S8 A64])
        (mem/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [2 time+0 S8 A64])) "queryTAD.c":72:13 -1
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 146 145 147 13 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [2  S8 A64])
        (reg:DI 86 [ _5 ])) "queryTAD.c":72:13 -1
     (expr_list:REG_ARGS_SIZE (const_int 24 [0x18])
        (nil)))
(insn 147 146 148 13 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [3  S8 A64])
        (reg/f:DI 91 [ _10 ])) "queryTAD.c":72:13 -1
     (expr_list:REG_ARGS_SIZE (const_int 32 [0x20])
        (nil)))
(insn 148 147 149 13 (set (reg:DI 37 r9)
        (reg:DI 215)) "queryTAD.c":72:13 -1
     (nil))
(insn 149 148 150 13 (set (reg:DI 36 r8)
        (reg:DI 96 [ _15 ])) "queryTAD.c":72:13 -1
     (nil))
(insn 150 149 151 13 (set (reg:DI 2 cx)
        (reg:DI 216)) "queryTAD.c":72:13 -1
     (nil))
(insn 151 150 152 13 (set (reg:DI 1 dx)
        (reg:DI 101 [ _20 ])) "queryTAD.c":72:13 -1
     (nil))
(insn 152 151 153 13 (set (reg:DI 4 si)
        (mem/c:DI (reg/f:DI 76 virtual-incoming-args) [2 year+0 S8 A64])) "queryTAD.c":72:13 -1
     (nil))
(insn 153 152 154 13 (set (reg:DI 5 di)
        (reg:DI 106 [ _25 ])) "queryTAD.c":72:13 -1
     (nil))
(call_insn 154 153 155 13 (set (reg:QI 0 ax)
        (call (mem:QI (symbol_ref:DI ("dateCmp") [flags 0x3]  <function_decl 0x7fc58ec06800 dateCmp>) [0 dateCmp S1 A8])
            (const_int 32 [0x20]))) "queryTAD.c":72:13 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:DI (use (reg:DI 36 r8))
                        (expr_list:DI (use (reg:DI 37 r9))
                            (nil))))))))
(insn 155 154 156 13 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":72:13 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 156 155 157 13 (set (reg:QI 107 [ _26 ])
        (reg:QI 0 ax)) "queryTAD.c":72:13 -1
     (nil))
(insn 157 156 158 13 (set (reg:SI 217)
        (sign_extend:SI (reg:QI 107 [ _26 ]))) "queryTAD.c":72:9 -1
     (nil))
(insn 158 157 159 13 (set (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [13 c+0 S4 A32])
        (reg:SI 217)) "queryTAD.c":72:9 -1
     (nil))
(insn 159 158 160 13 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [13 c+0 S4 A32])
            (const_int -1 [0xffffffffffffffff]))) "queryTAD.c":74:7 -1
     (nil))
(jump_insn 160 159 161 13 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 314)
            (pc))) "queryTAD.c":74:7 659 {*jcc}
     (nil)
 -> 314)
;;  succ:       14 (FALLTHRU)
;;              28

;; basic block 14, loop depth 0, maybe hot
;;  prev block 13, next block 15, flags: (NEW, REACHABLE, RTL)
;;  pred:       13 (FALLTHRU)
(note 161 160 162 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 162 161 163 14 (set (reg/f:DI 218)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [11 q+0 S8 A64])) "queryTAD.c":75:10 -1
     (nil))
(insn 163 162 164 14 (parallel [
            (set (reg/f:DI 133 [ _68 ])
                (plus:DI (reg/f:DI 218)
                    (const_int 24 [0x18])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":75:10 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [11 q+0 S8 A64])
            (const_int 24 [0x18]))
        (nil)))
(insn 164 163 165 14 (set (reg:DI 164 [ _110 ])
        (reg/f:DI 133 [ _68 ])) "queryTAD.c":75:10 -1
     (nil))
(insn 165 164 166 14 (parallel [
            (set (reg:DI 165 [ _111 ])
                (lshiftrt:DI (reg:DI 164 [ _110 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":75:10 -1
     (nil))
(insn 166 165 167 14 (parallel [
            (set (reg:DI 166 [ _112 ])
                (plus:DI (reg:DI 165 [ _111 ])
                    (const_int 2147450880 [0x7fff8000])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":75:10 -1
     (nil))
(insn 167 166 168 14 (set (reg/f:DI 167 [ _113 ])
        (reg:DI 166 [ _112 ])) "queryTAD.c":75:10 -1
     (nil))
(insn 168 167 169 14 (set (reg:QI 168 [ _114 ])
        (mem:QI (reg/f:DI 167 [ _113 ]) [10 *_113+0 S1 A8])) "queryTAD.c":75:10 -1
     (nil))
(insn 169 168 170 14 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 168 [ _114 ])
            (const_int 0 [0]))) "queryTAD.c":75:10 -1
     (nil))
(jump_insn 170 169 171 14 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 175)
            (pc))) "queryTAD.c":75:10 -1
     (nil)
 -> 175)
;;  succ:       16 [100.0% (guessed)] 
;;              15 [0.0% (guessed)]  (FALLTHRU)

;; basic block 15, loop depth 0, maybe hot
;;  prev block 14, next block 16, flags: (NEW, REACHABLE, RTL)
;;  pred:       14 [0.0% (guessed)]  (FALLTHRU)
(note 171 170 172 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 172 171 173 15 (set (reg:DI 5 di)
        (reg:DI 164 [ _110 ])) "queryTAD.c":75:10 -1
     (nil))
(call_insn 173 172 174 15 (call (mem:QI (symbol_ref:DI ("__asan_report_load8") [flags 0x41]  <function_decl 0x7fc58eea5900 __builtin___asan_report_load8>) [0 __builtin___asan_report_load8 S1 A8])
        (const_int 0 [0])) "queryTAD.c":75:10 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:      

(barrier 174 173 175)
;; basic block 16, loop depth 0, maybe hot
;;  prev block 15, next block 17, flags: (NEW, REACHABLE, RTL)
;;  pred:       14 [100.0% (guessed)] 
(code_label 175 174 176 16 53 (nil) [1 uses])
(note 176 175 177 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 177 176 178 16 (set (reg/f:DI 219)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [11 q+0 S8 A64])) "queryTAD.c":75:10 -1
     (nil))
(insn 178 177 179 16 (set (reg/f:DI 108 [ _27 ])
        (mem/f:DI (plus:DI (reg/f:DI 219)
                (const_int 24 [0x18])) [7 q_49(D)->sensorsID+0 S8 A64])) "queryTAD.c":75:10 -1
     (nil))
(insn 179 178 180 16 (set (reg:DI 220)
        (mem/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [2 ID+0 S8 A64])) "queryTAD.c":75:21 -1
     (nil))
(insn 180 179 181 16 (set (reg:DI 221)
        (reg:DI 220)) "queryTAD.c":75:21 -1
     (nil))
(insn 181 180 182 16 (parallel [
            (set (reg:DI 221)
                (ashift:DI (reg:DI 221)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":75:21 -1
     (nil))
(insn 182 181 183 16 (parallel [
            (set (reg:DI 221)
                (plus:DI (reg:DI 221)
                    (reg:DI 220)))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":75:21 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 220)
            (const_int 5 [0x5]))
        (nil)))
(insn 183 182 184 16 (parallel [
            (set (reg:DI 222)
                (ashift:DI (reg:DI 221)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":75:21 -1
     (nil))
(insn 184 183 185 16 (set (reg:DI 221)
        (reg:DI 222)) "queryTAD.c":75:21 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 220)
            (const_int 80 [0x50]))
        (nil)))
(insn 185 184 186 16 (set (reg:DI 109 [ _28 ])
        (reg:DI 221)) "queryTAD.c":75:21 -1
     (nil))
(insn 186 185 187 16 (parallel [
            (set (reg:DI 110 [ _29 ])
                (plus:DI (reg:DI 109 [ _28 ])
                    (const_int -80 [0xffffffffffffffb0])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":75:21 -1
     (nil))
(insn 187 186 188 16 (parallel [
            (set (reg/f:DI 111 [ _30 ])
                (plus:DI (reg/f:DI 108 [ _27 ])
                    (reg:DI 110 [ _29 ])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":75:21 -1
     (nil))
(insn 188 187 189 16 (parallel [
            (set (reg/f:DI 134 [ _69 ])
                (plus:DI (reg/f:DI 111 [ _30 ])
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":75:40 -1
     (nil))
(insn 189 188 190 16 (set (reg:DI 169 [ _115 ])
        (reg/f:DI 134 [ _69 ])) "queryTAD.c":75:40 -1
     (nil))
(insn 190 189 191 16 (parallel [
            (set (reg:DI 170 [ _116 ])
                (lshiftrt:DI (reg:DI 169 [ _115 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":75:40 -1
     (nil))
(insn 191 190 192 16 (parallel [
            (set (reg:DI 171 [ _117 ])
                (plus:DI (reg:DI 170 [ _116 ])
                    (const_int 2147450880 [0x7fff8000])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":75:40 -1
     (nil))
(insn 192 191 193 16 (set (reg/f:DI 172 [ _118 ])
        (reg:DI 171 [ _117 ])) "queryTAD.c":75:40 -1
     (nil))
(insn 193 192 194 16 (set (reg:QI 173 [ _119 ])
        (mem:QI (reg/f:DI 172 [ _118 ]) [10 *_118+0 S1 A8])) "queryTAD.c":75:40 -1
     (nil))
(insn 194 193 195 16 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 173 [ _119 ])
            (const_int 0 [0]))) "queryTAD.c":75:40 -1
     (nil))
(jump_insn 195 194 196 16 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 200)
            (pc))) "queryTAD.c":75:40 -1
     (nil)
 -> 200)
;;  succ:       18 [100.0% (guessed)] 
;;              17 [0.0% (guessed)]  (FALLTHRU)

;; basic block 17, loop depth 0, maybe hot
;;  prev block 16, next block 18, flags: (NEW, REACHABLE, RTL)
;;  pred:       16 [0.0% (guessed)]  (FALLTHRU)
(note 196 195 197 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 197 196 198 17 (set (reg:DI 5 di)
        (reg:DI 169 [ _115 ])) "queryTAD.c":75:40 -1
     (nil))
(call_insn 198 197 199 17 (call (mem:QI (symbol_ref:DI ("__asan_report_store8") [flags 0x41]  <function_decl 0x7fc58eea5f00 __builtin___asan_report_store8>) [0 __builtin___asan_report_store8 S1 A8])
        (const_int 0 [0])) "queryTAD.c":75:40 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:      

(barrier 199 198 200)
;; basic block 18, loop depth 0, maybe hot
;;  prev block 17, next block 19, flags: (NEW, REACHABLE, RTL)
;;  pred:       16 [100.0% (guessed)] 
(code_label 200 199 201 18 54 (nil) [1 uses])
(note 201 200 202 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 202 201 203 18 (set (reg:DI 223)
        (mem/c:DI (reg/f:DI 76 virtual-incoming-args) [2 year+0 S8 A64])) "queryTAD.c":75:40 -1
     (nil))
(insn 203 202 204 18 (set (mem:DI (plus:DI (reg/f:DI 111 [ _30 ])
                (const_int 32 [0x20])) [2 _30->oldest.year+0 S8 A64])
        (reg:DI 223)) "queryTAD.c":75:40 -1
     (nil))
(insn 204 203 205 18 (set (reg/f:DI 224)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [11 q+0 S8 A64])) "queryTAD.c":76:10 -1
     (nil))
(insn 205 204 206 18 (set (reg/f:DI 112 [ _31 ])
        (mem/f:DI (plus:DI (reg/f:DI 224)
                (const_int 24 [0x18])) [7 q_49(D)->sensorsID+0 S8 A64])) "queryTAD.c":76:10 -1
     (nil))
(insn 206 205 207 18 (set (reg:DI 225)
        (mem/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [2 ID+0 S8 A64])) "queryTAD.c":76:21 -1
     (nil))
(insn 207 206 208 18 (set (reg:DI 226)
        (reg:DI 225)) "queryTAD.c":76:21 -1
     (nil))
(insn 208 207 209 18 (parallel [
            (set (reg:DI 226)
                (ashift:DI (reg:DI 226)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":76:21 -1
     (nil))
(insn 209 208 210 18 (parallel [
            (set (reg:DI 226)
                (plus:DI (reg:DI 226)
                    (reg:DI 225)))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":76:21 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 225)
            (const_int 5 [0x5]))
        (nil)))
(insn 210 209 211 18 (parallel [
            (set (reg:DI 227)
                (ashift:DI (reg:DI 226)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":76:21 -1
     (nil))
(insn 211 210 212 18 (set (reg:DI 226)
        (reg:DI 227)) "queryTAD.c":76:21 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 225)
            (const_int 80 [0x50]))
        (nil)))
(insn 212 211 213 18 (set (reg:DI 113 [ _32 ])
        (reg:DI 226)) "queryTAD.c":76:21 -1
     (nil))
(insn 213 212 214 18 (parallel [
            (set (reg:DI 114 [ _33 ])
                (plus:DI (reg:DI 113 [ _32 ])
                    (const_int -80 [0xffffffffffffffb0])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":76:21 -1
     (nil))
(insn 214 213 215 18 (parallel [
            (set (reg/f:DI 115 [ _34 ])
                (plus:DI (reg/f:DI 112 [ _31 ])
                    (reg:DI 114 [ _33 ])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":76:21 -1
     (nil))
(insn 215 214 216 18 (parallel [
            (set (reg/f:DI 135 [ _70 ])
                (plus:DI (reg/f:DI 115 [ _34 ])
                    (const_int 56 [0x38])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":76:45 -1
     (nil))
(insn 216 215 217 18 (set (reg:DI 174 [ _120 ])
        (reg/f:DI 135 [ _70 ])) "queryTAD.c":76:45 -1
     (nil))
(insn 217 216 218 18 (parallel [
            (set (reg:DI 175 [ _121 ])
                (lshiftrt:DI (reg:DI 174 [ _120 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":76:45 -1
     (nil))
(insn 218 217 219 18 (parallel [
            (set (reg:DI 176 [ _122 ])
                (plus:DI (reg:DI 175 [ _121 ])
                    (const_int 2147450880 [0x7fff8000])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":76:45 -1
     (nil))
(insn 219 218 220 18 (set (reg/f:DI 177 [ _123 ])
        (reg:DI 176 [ _122 ])) "queryTAD.c":76:45 -1
     (nil))
(insn 220 219 221 18 (set (reg:QI 178 [ _124 ])
        (mem:QI (reg/f:DI 177 [ _123 ]) [10 *_123+0 S1 A8])) "queryTAD.c":76:45 -1
     (nil))
(insn 221 220 222 18 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 178 [ _124 ])
            (const_int 0 [0]))) "queryTAD.c":76:45 -1
     (nil))
(jump_insn 222 221 223 18 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 227)
            (pc))) "queryTAD.c":76:45 -1
     (nil)
 -> 227)
;;  succ:       20 [100.0% (guessed)] 
;;              19 [0.0% (guessed)]  (FALLTHRU)

;; basic block 19, loop depth 0, maybe hot
;;  prev block 18, next block 20, flags: (NEW, REACHABLE, RTL)
;;  pred:       18 [0.0% (guessed)]  (FALLTHRU)
(note 223 222 224 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 224 223 225 19 (set (reg:DI 5 di)
        (reg:DI 174 [ _120 ])) "queryTAD.c":76:45 -1
     (nil))
(call_insn 225 224 226 19 (call (mem:QI (symbol_ref:DI ("__asan_report_store8") [flags 0x41]  <function_decl 0x7fc58eea5f00 __builtin___asan_report_store8>) [0 __builtin___asan_report_store8 S1 A8])
        (const_int 0 [0])) "queryTAD.c":76:45 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:      

(barrier 226 225 227)
;; basic block 20, loop depth 0, maybe hot
;;  prev block 19, next block 21, flags: (NEW, REACHABLE, RTL)
;;  pred:       18 [100.0% (guessed)] 
(code_label 227 226 228 20 55 (nil) [1 uses])
(note 228 227 229 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 229 228 230 20 (set (reg:DI 228)
        (mem/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -64 [0xffffffffffffffc0])) [2 pedestrians+0 S8 A64])) "queryTAD.c":76:45 -1
     (nil))
(insn 230 229 231 20 (set (mem:DI (plus:DI (reg/f:DI 115 [ _34 ])
                (const_int 56 [0x38])) [2 _34->oldest.old_count+0 S8 A64])
        (reg:DI 228)) "queryTAD.c":76:45 -1
     (nil))
(insn 231 230 232 20 (set (reg/f:DI 229)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [11 q+0 S8 A64])) "queryTAD.c":77:10 -1
     (nil))
(insn 232 231 233 20 (set (reg/f:DI 116 [ _35 ])
        (mem/f:DI (plus:DI (reg/f:DI 229)
                (const_int 24 [0x18])) [7 q_49(D)->sensorsID+0 S8 A64])) "queryTAD.c":77:10 -1
     (nil))
(insn 233 232 234 20 (set (reg:DI 230)
        (mem/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [2 ID+0 S8 A64])) "queryTAD.c":77:21 -1
     (nil))
(insn 234 233 235 20 (set (reg:DI 231)
        (reg:DI 230)) "queryTAD.c":77:21 -1
     (nil))
(insn 235 234 236 20 (parallel [
            (set (reg:DI 231)
                (ashift:DI (reg:DI 231)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":77:21 -1
     (nil))
(insn 236 235 237 20 (parallel [
            (set (reg:DI 231)
                (plus:DI (reg:DI 231)
                    (reg:DI 230)))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":77:21 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 230)
            (const_int 5 [0x5]))
        (nil)))
(insn 237 236 238 20 (parallel [
            (set (reg:DI 232)
                (ashift:DI (reg:DI 231)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":77:21 -1
     (nil))
(insn 238 237 239 20 (set (reg:DI 231)
        (reg:DI 232)) "queryTAD.c":77:21 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 230)
            (const_int 80 [0x50]))
        (nil)))
(insn 239 238 240 20 (set (reg:DI 117 [ _36 ])
        (reg:DI 231)) "queryTAD.c":77:21 -1
     (nil))
(insn 240 239 241 20 (parallel [
            (set (reg:DI 118 [ _37 ])
                (plus:DI (reg:DI 117 [ _36 ])
                    (const_int -80 [0xffffffffffffffb0])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":77:21 -1
     (nil))
(insn 241 240 242 20 (parallel [
            (set (reg/f:DI 119 [ _38 ])
                (plus:DI (reg/f:DI 116 [ _35 ])
                    (reg:DI 118 [ _37 ])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":77:21 -1
     (nil))
(insn 242 241 243 20 (parallel [
            (set (reg/f:DI 136 [ _71 ])
                (plus:DI (reg/f:DI 119 [ _38 ])
                    (const_int 72 [0x48])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":77:40 -1
     (nil))
(insn 243 242 244 20 (set (reg:DI 179 [ _125 ])
        (reg/f:DI 136 [ _71 ])) "queryTAD.c":77:40 -1
     (nil))
(insn 244 243 245 20 (parallel [
            (set (reg:DI 180 [ _126 ])
                (lshiftrt:DI (reg:DI 179 [ _125 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":77:40 -1
     (nil))
(insn 245 244 246 20 (parallel [
            (set (reg:DI 181 [ _127 ])
                (plus:DI (reg:DI 180 [ _126 ])
                    (const_int 2147450880 [0x7fff8000])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":77:40 -1
     (nil))
(insn 246 245 247 20 (set (reg/f:DI 182 [ _128 ])
        (reg:DI 181 [ _127 ])) "queryTAD.c":77:40 -1
     (nil))
(insn 247 246 248 20 (set (reg:QI 183 [ _129 ])
        (mem:QI (reg/f:DI 182 [ _128 ]) [10 *_128+0 S1 A8])) "queryTAD.c":77:40 -1
     (nil))
(insn 248 247 249 20 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 183 [ _129 ])
            (const_int 0 [0]))) "queryTAD.c":77:40 -1
     (nil))
(jump_insn 249 248 250 20 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 254)
            (pc))) "queryTAD.c":77:40 -1
     (nil)
 -> 254)
;;  succ:       22 [100.0% (guessed)] 
;;              21 [0.0% (guessed)]  (FALLTHRU)

;; basic block 21, loop depth 0, maybe hot
;;  prev block 20, next block 22, flags: (NEW, REACHABLE, RTL)
;;  pred:       20 [0.0% (guessed)]  (FALLTHRU)
(note 250 249 251 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 251 250 252 21 (set (reg:DI 5 di)
        (reg:DI 179 [ _125 ])) "queryTAD.c":77:40 -1
     (nil))
(call_insn 252 251 253 21 (call (mem:QI (symbol_ref:DI ("__asan_report_store8") [flags 0x41]  <function_decl 0x7fc58eea5f00 __builtin___asan_report_store8>) [0 __builtin___asan_report_store8 S1 A8])
        (const_int 0 [0])) "queryTAD.c":77:40 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:      

(barrier 253 252 254)
;; basic block 22, loop depth 0, maybe hot
;;  prev block 21, next block 23, flags: (NEW, REACHABLE, RTL)
;;  pred:       20 [100.0% (guessed)] 
(code_label 254 253 255 22 56 (nil) [1 uses])
(note 255 254 256 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 256 255 257 22 (set (reg:DI 233)
        (mem/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [2 dayN+0 S8 A64])) "queryTAD.c":77:40 -1
     (nil))
(insn 257 256 258 22 (set (mem:DI (plus:DI (reg/f:DI 119 [ _38 ])
                (const_int 72 [0x48])) [2 _38->oldest.dayN+0 S8 A64])
        (reg:DI 233)) "queryTAD.c":77:40 -1
     (nil))
(insn 258 257 259 22 (set (reg/f:DI 234)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [11 q+0 S8 A64])) "queryTAD.c":78:10 -1
     (nil))
(insn 259 258 260 22 (set (reg/f:DI 120 [ _39 ])
        (mem/f:DI (plus:DI (reg/f:DI 234)
                (const_int 24 [0x18])) [7 q_49(D)->sensorsID+0 S8 A64])) "queryTAD.c":78:10 -1
     (nil))
(insn 260 259 261 22 (set (reg:DI 235)
        (mem/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [2 ID+0 S8 A64])) "queryTAD.c":78:21 -1
     (nil))
(insn 261 260 262 22 (set (reg:DI 236)
        (reg:DI 235)) "queryTAD.c":78:21 -1
     (nil))
(insn 262 261 263 22 (parallel [
            (set (reg:DI 236)
                (ashift:DI (reg:DI 236)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":78:21 -1
     (nil))
(insn 263 262 264 22 (parallel [
            (set (reg:DI 236)
                (plus:DI (reg:DI 236)
                    (reg:DI 235)))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":78:21 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 235)
            (const_int 5 [0x5]))
        (nil)))
(insn 264 263 265 22 (parallel [
            (set (reg:DI 237)
                (ashift:DI (reg:DI 236)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":78:21 -1
     (nil))
(insn 265 264 266 22 (set (reg:DI 236)
        (reg:DI 237)) "queryTAD.c":78:21 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 235)
            (const_int 80 [0x50]))
        (nil)))
(insn 266 265 267 22 (set (reg:DI 121 [ _40 ])
        (reg:DI 236)) "queryTAD.c":78:21 -1
     (nil))
(insn 267 266 268 22 (parallel [
            (set (reg:DI 122 [ _41 ])
                (plus:DI (reg:DI 121 [ _40 ])
                    (const_int -80 [0xffffffffffffffb0])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":78:21 -1
     (nil))
(insn 268 267 269 22 (parallel [
            (set (reg/f:DI 123 [ _42 ])
                (plus:DI (reg/f:DI 120 [ _39 ])
                    (reg:DI 122 [ _41 ])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":78:21 -1
     (nil))
(insn 269 268 270 22 (parallel [
            (set (reg/f:DI 137 [ _72 ])
                (plus:DI (reg/f:DI 123 [ _42 ])
                    (const_int 64 [0x40])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":78:41 -1
     (nil))
(insn 270 269 271 22 (set (reg:DI 184 [ _130 ])
        (reg/f:DI 137 [ _72 ])) "queryTAD.c":78:41 -1
     (nil))
(insn 271 270 272 22 (parallel [
            (set (reg:DI 185 [ _131 ])
                (lshiftrt:DI (reg:DI 184 [ _130 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":78:41 -1
     (nil))
(insn 272 271 273 22 (parallel [
            (set (reg:DI 186 [ _132 ])
                (plus:DI (reg:DI 185 [ _131 ])
                    (const_int 2147450880 [0x7fff8000])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":78:41 -1
     (nil))
(insn 273 272 274 22 (set (reg/f:DI 187 [ _133 ])
        (reg:DI 186 [ _132 ])) "queryTAD.c":78:41 -1
     (nil))
(insn 274 273 275 22 (set (reg:QI 188 [ _134 ])
        (mem:QI (reg/f:DI 187 [ _133 ]) [10 *_133+0 S1 A8])) "queryTAD.c":78:41 -1
     (nil))
(insn 275 274 276 22 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 188 [ _134 ])
            (const_int 0 [0]))) "queryTAD.c":78:41 -1
     (nil))
(jump_insn 276 275 277 22 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 281)
            (pc))) "queryTAD.c":78:41 -1
     (nil)
 -> 281)
;;  succ:       24 [100.0% (guessed)] 
;;              23 [0.0% (guessed)]  (FALLTHRU)

;; basic block 23, loop depth 0, maybe hot
;;  prev block 22, next block 24, flags: (NEW, REACHABLE, RTL)
;;  pred:       22 [0.0% (guessed)]  (FALLTHRU)
(note 277 276 278 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 278 277 279 23 (set (reg:DI 5 di)
        (reg:DI 184 [ _130 ])) "queryTAD.c":78:41 -1
     (nil))
(call_insn 279 278 280 23 (call (mem:QI (symbol_ref:DI ("__asan_report_store8") [flags 0x41]  <function_decl 0x7fc58eea5f00 __builtin___asan_report_store8>) [0 __builtin___asan_report_store8 S1 A8])
        (const_int 0 [0])) "queryTAD.c":78:41 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:      

(barrier 280 279 281)
;; basic block 24, loop depth 0, maybe hot
;;  prev block 23, next block 25, flags: (NEW, REACHABLE, RTL)
;;  pred:       22 [100.0% (guessed)] 
(code_label 281 280 282 24 57 (nil) [1 uses])
(note 282 281 283 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 283 282 284 24 (set (reg:DI 238)
        (mem/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [2 month+0 S8 A64])) "queryTAD.c":78:41 -1
     (nil))
(insn 284 283 285 24 (set (mem:DI (plus:DI (reg/f:DI 123 [ _42 ])
                (const_int 64 [0x40])) [2 _42->oldest.month+0 S8 A64])
        (reg:DI 238)) "queryTAD.c":78:41 -1
     (nil))
(insn 285 284 286 24 (set (reg/f:DI 239)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [11 q+0 S8 A64])) "queryTAD.c":79:10 -1
     (nil))
(insn 286 285 287 24 (set (reg/f:DI 124 [ _43 ])
        (mem/f:DI (plus:DI (reg/f:DI 239)
                (const_int 24 [0x18])) [7 q_49(D)->sensorsID+0 S8 A64])) "queryTAD.c":79:10 -1
     (nil))
(insn 287 286 288 24 (set (reg:DI 240)
        (mem/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [2 ID+0 S8 A64])) "queryTAD.c":79:21 -1
     (nil))
(insn 288 287 289 24 (set (reg:DI 241)
        (reg:DI 240)) "queryTAD.c":79:21 -1
     (nil))
(insn 289 288 290 24 (parallel [
            (set (reg:DI 241)
                (ashift:DI (reg:DI 241)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":79:21 -1
     (nil))
(insn 290 289 291 24 (parallel [
            (set (reg:DI 241)
                (plus:DI (reg:DI 241)
                    (reg:DI 240)))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":79:21 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 240)
            (const_int 5 [0x5]))
        (nil)))
(insn 291 290 292 24 (parallel [
            (set (reg:DI 242)
                (ashift:DI (reg:DI 241)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":79:21 -1
     (nil))
(insn 292 291 293 24 (set (reg:DI 241)
        (reg:DI 242)) "queryTAD.c":79:21 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 240)
            (const_int 80 [0x50]))
        (nil)))
(insn 293 292 294 24 (set (reg:DI 125 [ _44 ])
        (reg:DI 241)) "queryTAD.c":79:21 -1
     (nil))
(insn 294 293 295 24 (parallel [
            (set (reg:DI 126 [ _45 ])
                (plus:DI (reg:DI 125 [ _44 ])
                    (const_int -80 [0xffffffffffffffb0])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":79:21 -1
     (nil))
(insn 295 294 296 24 (parallel [
            (set (reg/f:DI 127 [ _46 ])
                (plus:DI (reg/f:DI 124 [ _43 ])
                    (reg:DI 126 [ _45 ])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":79:21 -1
     (nil))
(insn 296 295 297 24 (parallel [
            (set (reg/f:DI 138 [ _73 ])
                (plus:DI (reg/f:DI 127 [ _46 ])
                    (const_int 48 [0x30])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":79:40 -1
     (nil))
(insn 297 296 298 24 (set (reg:DI 189 [ _135 ])
        (reg/f:DI 138 [ _73 ])) "queryTAD.c":79:40 -1
     (nil))
(insn 298 297 299 24 (parallel [
            (set (reg:DI 190 [ _136 ])
                (lshiftrt:DI (reg:DI 189 [ _135 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":79:40 -1
     (nil))
(insn 299 298 300 24 (parallel [
            (set (reg:DI 191 [ _137 ])
                (plus:DI (reg:DI 190 [ _136 ])
                    (const_int 2147450880 [0x7fff8000])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":79:40 -1
     (nil))
(insn 300 299 301 24 (set (reg/f:DI 192 [ _138 ])
        (reg:DI 191 [ _137 ])) "queryTAD.c":79:40 -1
     (nil))
(insn 301 300 302 24 (set (reg:QI 193 [ _139 ])
        (mem:QI (reg/f:DI 192 [ _138 ]) [10 *_138+0 S1 A8])) "queryTAD.c":79:40 -1
     (nil))
(insn 302 301 303 24 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 193 [ _139 ])
            (const_int 0 [0]))) "queryTAD.c":79:40 -1
     (nil))
(jump_insn 303 302 304 24 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 308)
            (pc))) "queryTAD.c":79:40 -1
     (nil)
 -> 308)
;;  succ:       26 [100.0% (guessed)] 
;;              25 [0.0% (guessed)]  (FALLTHRU)

;; basic block 25, loop depth 0, maybe hot
;;  prev block 24, next block 26, flags: (NEW, REACHABLE, RTL)
;;  pred:       24 [0.0% (guessed)]  (FALLTHRU)
(note 304 303 305 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 305 304 306 25 (set (reg:DI 5 di)
        (reg:DI 189 [ _135 ])) "queryTAD.c":79:40 -1
     (nil))
(call_insn 306 305 307 25 (call (mem:QI (symbol_ref:DI ("__asan_report_store8") [flags 0x41]  <function_decl 0x7fc58eea5f00 __builtin___asan_report_store8>) [0 __builtin___asan_report_store8 S1 A8])
        (const_int 0 [0])) "queryTAD.c":79:40 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:      

(barrier 307 306 308)
;; basic block 26, loop depth 0, maybe hot
;;  prev block 25, next block 28, flags: (NEW, REACHABLE, RTL)
;;  pred:       24 [100.0% (guessed)] 
(code_label 308 307 309 26 58 (nil) [1 uses])
(note 309 308 310 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 310 309 311 26 (set (reg:DI 243)
        (mem/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [2 time+0 S8 A64])) "queryTAD.c":79:40 -1
     (nil))
(insn 311 310 314 26 (set (mem:DI (plus:DI (reg/f:DI 127 [ _46 ])
                (const_int 48 [0x30])) [2 _46->oldest.time+0 S8 A64])
        (reg:DI 243)) "queryTAD.c":79:40 -1
     (nil))
;;  succ:       28 (FALLTHRU)

;; basic block 28, loop depth 0, maybe hot
;;  prev block 26, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       26 (FALLTHRU)
;;              13
(code_label 314 311 315 28 46 (nil) [1 uses])
(note 315 314 0 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [always]  (FALLTHRU)


;; Function insertYearL (insertYearL, funcdef_no=6, decl_uid=3371, cgraph_uid=7, symbol_order=6)

insertYearL (struct queryCDT * query, struct TYear * years)
{
  struct TYear * * _5;
  unsigned long _7;
  unsigned long _8;
  unsigned long _9;
  signed char * _10;
  signed char _11;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _5 = &query_2(D)->years;
  _7 = (unsigned long) _5;
  _8 = _7 >> 3;
  _9 = _8 + 2147450880;
  _10 = (signed char *) _9;
  _11 = *_10;
  if (_11 != 0)
    goto <bb 3>; [0.05%]
  else
    goto <bb 4>; [99.95%]
;;    succ:       4
;;                3

;;   basic block 3, loop depth 0
;;    pred:       2
  __builtin___asan_report_store8 (_7);
;;    succ:      

;;   basic block 4, loop depth 0
;;    pred:       2
  query_2(D)->years = years_3(D);
  return;
;;    succ:       EXIT

}



Partition map 

Partition 2 (query_2(D) - 2 )
Partition 3 (years_3(D) - 3 )
Partition 5 (_5 - 5 )
Partition 7 (_7 - 7 )
Partition 8 (_8 - 8 )
Partition 9 (_9 - 9 )
Partition 10 (_10 - 10 )
Partition 11 (_11 - 11 )


Coalescible Partition map 

Partition 0, base 0 (query_2(D) - 2 )
Partition 1, base 1 (years_3(D) - 3 )


Partition map 

Partition 0 (query_2(D) - 2 )
Partition 1 (years_3(D) - 3 )


Conflict graph:

After sorting:
Coalesce List:

Partition map 

Partition 0 (query_2(D) - 2 )
Partition 1 (years_3(D) - 3 )

After Coalescing:

Partition map 

Partition 0 (query_2(D) - 2 )
Partition 1 (years_3(D) - 3 )
Partition 2 (_5 - 5 )
Partition 3 (_7 - 7 )
Partition 4 (_8 - 8 )
Partition 5 (_9 - 9 )
Partition 6 (_10 - 10 )
Partition 7 (_11 - 11 )

insertYearL (struct queryCDT * query, struct TYear * years)
{
  struct TYear * * _5;
  unsigned long _7;
  unsigned long _8;
  unsigned long _9;
  signed char * _10;
  signed char _11;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _5 = &query_2(D)->years;
  _7 = (unsigned long) _5;
  _8 = _7 >> 3;
  _9 = _8 + 2147450880;
  _10 = (signed char *) _9;
  _11 = *_10;
  if (_11 != 0)
    goto <bb 3>; [0.05%]
  else
    goto <bb 4>; [99.95%]
;;    succ:       4
;;                3

;;   basic block 3, loop depth 0
;;    pred:       2
  __builtin___asan_report_store8 (_7);
;;    succ:      

;;   basic block 4, loop depth 0
;;    pred:       2
  query_2(D)->years = years_3(D);
  return;
;;    succ:       EXIT

}



;; Generating RTL for gimple basic block 2

;; _5 = &query_2(D)->years;

(insn 7 6 8 (set (reg/f:DI 88)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [11 query+0 S8 A64])) "queryTAD.c":92:18 -1
     (nil))

(insn 8 7 0 (parallel [
            (set (reg/f:DI 82 [ _5 ])
                (plus:DI (reg/f:DI 88)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":92:18 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [11 query+0 S8 A64])
            (const_int 16 [0x10]))
        (nil)))

;; _7 = (unsigned long) _5;

(insn 9 8 0 (set (reg:DI 83 [ _7 ])
        (reg/f:DI 82 [ _5 ])) "queryTAD.c":92:18 -1
     (nil))

;; _8 = _7 >> 3;

(insn 10 9 0 (parallel [
            (set (reg:DI 84 [ _8 ])
                (lshiftrt:DI (reg:DI 83 [ _7 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":92:18 -1
     (nil))

;; _9 = _8 + 2147450880;

(insn 11 10 0 (parallel [
            (set (reg:DI 85 [ _9 ])
                (plus:DI (reg:DI 84 [ _8 ])
                    (const_int 2147450880 [0x7fff8000])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":92:18 -1
     (nil))

;; _10 = (signed char *) _9;

(insn 12 11 0 (set (reg/f:DI 86 [ _10 ])
        (reg:DI 85 [ _9 ])) "queryTAD.c":92:18 -1
     (nil))

;; _11 = *_10;

(insn 13 12 0 (set (reg:QI 87 [ _11 ])
        (mem:QI (reg/f:DI 86 [ _10 ]) [10 *_10+0 S1 A8])) "queryTAD.c":92:18 -1
     (nil))

;; if (_11 != 0)

(insn 14 13 15 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 87 [ _11 ])
            (const_int 0 [0]))) "queryTAD.c":92:18 -1
     (nil))

(jump_insn 15 14 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "queryTAD.c":92:18 -1
     (nil))

;; Generating RTL for gimple basic block 3

;; __builtin___asan_report_store8 (_7);

(insn 17 16 18 (set (reg:DI 5 di)
        (reg:DI 83 [ _7 ])) "queryTAD.c":92:18 -1
     (nil))

(call_insn 18 17 19 (call (mem:QI (symbol_ref:DI ("__asan_report_store8") [flags 0x41]  <function_decl 0x7fc58eea5f00 __builtin___asan_report_store8>) [0 __builtin___asan_report_store8 S1 A8])
        (const_int 0 [0])) "queryTAD.c":92:18 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

(barrier 19 18 0)

;; Generating RTL for gimple basic block 4

;; 

(code_label 20 19 21 61 (nil) [0 uses])

(note 21 20 0 NOTE_INSN_BASIC_BLOCK)

;; query_2(D)->years = years_3(D);

(insn 22 21 23 (set (reg/f:DI 89)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [11 query+0 S8 A64])) "queryTAD.c":92:18 -1
     (nil))

(insn 23 22 24 (set (reg/f:DI 90)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [6 years+0 S8 A64])) "queryTAD.c":92:18 -1
     (nil))

(insn 24 23 0 (set (mem/f:DI (plus:DI (reg/f:DI 89)
                (const_int 16 [0x10])) [6 query_2(D)->years+0 S8 A64])
        (reg/f:DI 90)) "queryTAD.c":92:18 -1
     (nil))


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 6 into block 5...
Merged blocks 5 and 6.
Merged 5 and 6 without moving.


try_optimize_cfg iteration 2

fix_loop_structure: fixing up loops for function


;;
;; Full RTL generated for this function:
;;
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 4, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [11 query+0 S8 A64])
        (reg:DI 5 di [ query ])) "queryTAD.c":91:48 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [6 years+0 S8 A64])
        (reg:DI 4 si [ years ])) "queryTAD.c":91:48 -1
     (nil))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg/f:DI 88)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [11 query+0 S8 A64])) "queryTAD.c":92:18 -1
     (nil))
(insn 8 7 9 2 (parallel [
            (set (reg/f:DI 82 [ _5 ])
                (plus:DI (reg/f:DI 88)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":92:18 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [11 query+0 S8 A64])
            (const_int 16 [0x10]))
        (nil)))
(insn 9 8 10 2 (set (reg:DI 83 [ _7 ])
        (reg/f:DI 82 [ _5 ])) "queryTAD.c":92:18 -1
     (nil))
(insn 10 9 11 2 (parallel [
            (set (reg:DI 84 [ _8 ])
                (lshiftrt:DI (reg:DI 83 [ _7 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":92:18 -1
     (nil))
(insn 11 10 12 2 (parallel [
            (set (reg:DI 85 [ _9 ])
                (plus:DI (reg:DI 84 [ _8 ])
                    (const_int 2147450880 [0x7fff8000])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":92:18 -1
     (nil))
(insn 12 11 13 2 (set (reg/f:DI 86 [ _10 ])
        (reg:DI 85 [ _9 ])) "queryTAD.c":92:18 -1
     (nil))
(insn 13 12 14 2 (set (reg:QI 87 [ _11 ])
        (mem:QI (reg/f:DI 86 [ _10 ]) [10 *_10+0 S1 A8])) "queryTAD.c":92:18 -1
     (nil))
(insn 14 13 15 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 87 [ _11 ])
            (const_int 0 [0]))) "queryTAD.c":92:18 -1
     (nil))
(jump_insn 15 14 16 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 20)
            (pc))) "queryTAD.c":92:18 -1
     (nil)
 -> 20)
;;  succ:       5 [100.0% (guessed)] 
;;              4 [0.0% (guessed)]  (FALLTHRU)

;; basic block 4, loop depth 0, maybe hot
;;  prev block 2, next block 5, flags: (NEW, REACHABLE, RTL)
;;  pred:       2 [0.0% (guessed)]  (FALLTHRU)
(note 16 15 17 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 17 16 18 4 (set (reg:DI 5 di)
        (reg:DI 83 [ _7 ])) "queryTAD.c":92:18 -1
     (nil))
(call_insn 18 17 19 4 (call (mem:QI (symbol_ref:DI ("__asan_report_store8") [flags 0x41]  <function_decl 0x7fc58eea5f00 __builtin___asan_report_store8>) [0 __builtin___asan_report_store8 S1 A8])
        (const_int 0 [0])) "queryTAD.c":92:18 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:      

(barrier 19 18 20)
;; basic block 5, loop depth 0, maybe hot
;;  prev block 4, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       2 [100.0% (guessed)] 
(code_label 20 19 21 5 61 (nil) [1 uses])
(note 21 20 22 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 22 21 23 5 (set (reg/f:DI 89)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [11 query+0 S8 A64])) "queryTAD.c":92:18 -1
     (nil))
(insn 23 22 24 5 (set (reg/f:DI 90)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [6 years+0 S8 A64])) "queryTAD.c":92:18 -1
     (nil))
(insn 24 23 0 5 (set (mem/f:DI (plus:DI (reg/f:DI 89)
                (const_int 16 [0x10])) [6 query_2(D)->years+0 S8 A64])
        (reg/f:DI 90)) "queryTAD.c":92:18 -1
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)


;; Function makeSenLRec (makeSenLRec, funcdef_no=7, decl_uid=3389, cgraph_uid=8, symbol_order=7)

makeSenLRec (struct TNodeS * l, struct TNodeS * aux, struct TSensor * vecSen, size_t i)
{
  struct TNodeS * D.3520;
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _5;
  struct TSensor * _6;
  char * _7;
  long unsigned int _8;
  long unsigned int _9;
  sizetype _10;
  struct TSensor * _11;
  char * _12;
  int _13;
  struct Nsensor * _14;
  struct TNodeS * _15;
  struct TNodeS * _16;
  struct TNodeS * _25;
  struct TNodeS * _27;
  size_t * _28;
  size_t * _29;
  char * * _30;
  size_t * _31;
  char * * _32;
  struct Nsensor * * _33;
  struct Nsensor * * _34;
  struct Nsensor * * _35;
  unsigned long _46;
  unsigned long _47;
  unsigned long _48;
  signed char * _49;
  signed char _50;
  unsigned long _51;
  unsigned long _52;
  unsigned long _53;
  signed char * _54;
  signed char _55;
  unsigned long _56;
  unsigned long _57;
  unsigned long _58;
  signed char * _59;
  signed char _60;
  unsigned long _61;
  unsigned long _62;
  unsigned long _63;
  signed char * _64;
  signed char _65;
  unsigned long _66;
  unsigned long _67;
  unsigned long _68;
  signed char * _69;
  signed char _70;
  unsigned long _71;
  unsigned long _72;
  unsigned long _73;
  signed char * _74;
  signed char _75;
  unsigned long _76;
  unsigned long _77;
  unsigned long _78;
  signed char * _79;
  signed char _80;
  unsigned long _81;
  unsigned long _82;
  unsigned long _83;
  signed char * _84;
  signed char _85;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  if (l_18(D) == 0B)
    goto <bb 16>; [INV]
  else
    goto <bb 3>; [INV]
;;    succ:       16
;;                3

;;   basic block 3, loop depth 0
;;    pred:       2
  _28 = &l_18(D)->pedestrians;
  _46 = (unsigned long) _28;
  _47 = _46 >> 3;
  _48 = _47 + 2147450880;
  _49 = (signed char *) _48;
  _50 = *_49;
  if (_50 != 0)
    goto <bb 4>; [0.05%]
  else
    goto <bb 5>; [99.95%]
;;    succ:       5
;;                4

;;   basic block 4, loop depth 0
;;    pred:       3
  __builtin___asan_report_load8 (_46);
;;    succ:      

;;   basic block 5, loop depth 0
;;    pred:       3
  _1 = l_18(D)->pedestrians;
  _29 = &aux_20(D)->pedestrians;
  _51 = (unsigned long) _29;
  _52 = _51 >> 3;
  _53 = _52 + 2147450880;
  _54 = (signed char *) _53;
  _55 = *_54;
  if (_55 != 0)
    goto <bb 6>; [0.05%]
  else
    goto <bb 7>; [99.95%]
;;    succ:       7
;;                6

;;   basic block 6, loop depth 0
;;    pred:       5
  __builtin___asan_report_load8 (_51);
;;    succ:      

;;   basic block 7, loop depth 0
;;    pred:       5
  _2 = aux_20(D)->pedestrians;
  if (_1 > _2)
    goto <bb 16>; [INV]
  else
    goto <bb 8>; [INV]
;;    succ:       16
;;                8

;;   basic block 8, loop depth 0
;;    pred:       7
  _3 = l_18(D)->pedestrians;
  _4 = aux_20(D)->pedestrians;
  if (_3 == _4)
    goto <bb 9>; [INV]
  else
    goto <bb 19>; [INV]
;;    succ:       9
;;                19

;;   basic block 9, loop depth 0
;;    pred:       8
  _5 = i_21(D) * 80;
  _6 = vecSen_22(D) + _5;
  _30 = &_6->name;
  _56 = (unsigned long) _30;
  _57 = _56 >> 3;
  _58 = _57 + 2147450880;
  _59 = (signed char *) _58;
  _60 = *_59;
  if (_60 != 0)
    goto <bb 10>; [0.05%]
  else
    goto <bb 11>; [99.95%]
;;    succ:       11
;;                10

;;   basic block 10, loop depth 0
;;    pred:       9
  __builtin___asan_report_load8 (_56);
;;    succ:      

;;   basic block 11, loop depth 0
;;    pred:       9
  _7 = _6->name;
  _31 = &l_18(D)->ID;
  _61 = (unsigned long) _31;
  _62 = _61 >> 3;
  _63 = _62 + 2147450880;
  _64 = (signed char *) _63;
  _65 = *_64;
  if (_65 != 0)
    goto <bb 12>; [0.05%]
  else
    goto <bb 13>; [99.95%]
;;    succ:       13
;;                12

;;   basic block 12, loop depth 0
;;    pred:       11
  __builtin___asan_report_load8 (_61);
;;    succ:      

;;   basic block 13, loop depth 0
;;    pred:       11
  _8 = l_18(D)->ID;
  _9 = _8 * 80;
  _10 = _9 + 18446744073709551536;
  _11 = vecSen_22(D) + _10;
  _32 = &_11->name;
  _66 = (unsigned long) _32;
  _67 = _66 >> 3;
  _68 = _67 + 2147450880;
  _69 = (signed char *) _68;
  _70 = *_69;
  if (_70 != 0)
    goto <bb 14>; [0.05%]
  else
    goto <bb 15>; [99.95%]
;;    succ:       15
;;                14

;;   basic block 14, loop depth 0
;;    pred:       13
  __builtin___asan_report_load8 (_66);
;;    succ:      

;;   basic block 15, loop depth 0
;;    pred:       13
  _12 = _11->name;
  _13 = strcasecmp (_12, _7);
  if (_13 > 0)
    goto <bb 16>; [INV]
  else
    goto <bb 19>; [INV]
;;    succ:       16
;;                19

;;   basic block 16, loop depth 0
;;    pred:       2
;;                7
;;                15
  _33 = &aux_20(D)->tail;
  _71 = (unsigned long) _33;
  _72 = _71 >> 3;
  _73 = _72 + 2147450880;
  _74 = (signed char *) _73;
  _75 = *_74;
  if (_75 != 0)
    goto <bb 17>; [0.05%]
  else
    goto <bb 18>; [99.95%]
;;    succ:       18
;;                17

;;   basic block 17, loop depth 0
;;    pred:       16
  __builtin___asan_report_store8 (_71);
;;    succ:      

;;   basic block 18, loop depth 0
;;    pred:       16
  aux_20(D)->tail = l_18(D);
  _27 = aux_20(D);
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 24>; [INV]
;;    succ:       24

;;   basic block 19, loop depth 0
;;    pred:       8
;;                15
  _34 = &l_18(D)->tail;
  _76 = (unsigned long) _34;
  _77 = _76 >> 3;
  _78 = _77 + 2147450880;
  _79 = (signed char *) _78;
  _80 = *_79;
  if (_80 != 0)
    goto <bb 20>; [0.05%]
  else
    goto <bb 21>; [99.95%]
;;    succ:       21
;;                20

;;   basic block 20, loop depth 0
;;    pred:       19
  __builtin___asan_report_load8 (_76);
;;    succ:      

;;   basic block 21, loop depth 0
;;    pred:       19
  _14 = l_18(D)->tail;
  _15 = makeSenLRec (_14, aux_20(D), vecSen_22(D), i_21(D));
  _35 = &l_18(D)->tail;
  _81 = (unsigned long) _35;
  _82 = _81 >> 3;
  _83 = _82 + 2147450880;
  _84 = (signed char *) _83;
  _85 = *_84;
  if (_85 != 0)
    goto <bb 22>; [0.05%]
  else
    goto <bb 23>; [99.95%]
;;    succ:       23
;;                22

;;   basic block 22, loop depth 0
;;    pred:       21
  __builtin___asan_report_store8 (_81);
;;    succ:      

;;   basic block 23, loop depth 0
;;    pred:       21
  l_18(D)->tail = _15;
  _25 = l_18(D);
;;    succ:       24

;;   basic block 24, loop depth 0
;;    pred:       18
;;                23
  # _16 = PHI <_27(18), _25(23)>
<L5>:
  return _16;
;;    succ:       EXIT

}



Partition map 

Partition 1 (_1 - 1 )
Partition 2 (_2 - 2 )
Partition 3 (_3 - 3 )
Partition 4 (_4 - 4 )
Partition 5 (_5 - 5 )
Partition 6 (_6 - 6 )
Partition 7 (_7 - 7 )
Partition 8 (_8 - 8 )
Partition 9 (_9 - 9 )
Partition 10 (_10 - 10 )
Partition 11 (_11 - 11 )
Partition 12 (_12 - 12 )
Partition 13 (_13 - 13 )
Partition 14 (_14 - 14 )
Partition 15 (_15 - 15 )
Partition 16 (_16 - 16 )
Partition 18 (l_18(D) - 18 )
Partition 20 (aux_20(D) - 20 )
Partition 21 (i_21(D) - 21 )
Partition 22 (vecSen_22(D) - 22 )
Partition 25 (_25 - 25 )
Partition 27 (_27 - 27 )
Partition 28 (_28 - 28 )
Partition 29 (_29 - 29 )
Partition 30 (_30 - 30 )
Partition 31 (_31 - 31 )
Partition 32 (_32 - 32 )
Partition 33 (_33 - 33 )
Partition 34 (_34 - 34 )
Partition 35 (_35 - 35 )
Partition 46 (_46 - 46 )
Partition 47 (_47 - 47 )
Partition 48 (_48 - 48 )
Partition 49 (_49 - 49 )
Partition 50 (_50 - 50 )
Partition 51 (_51 - 51 )
Partition 52 (_52 - 52 )
Partition 53 (_53 - 53 )
Partition 54 (_54 - 54 )
Partition 55 (_55 - 55 )
Partition 56 (_56 - 56 )
Partition 57 (_57 - 57 )
Partition 58 (_58 - 58 )
Partition 59 (_59 - 59 )
Partition 60 (_60 - 60 )
Partition 61 (_61 - 61 )
Partition 62 (_62 - 62 )
Partition 63 (_63 - 63 )
Partition 64 (_64 - 64 )
Partition 65 (_65 - 65 )
Partition 66 (_66 - 66 )
Partition 67 (_67 - 67 )
Partition 68 (_68 - 68 )
Partition 69 (_69 - 69 )
Partition 70 (_70 - 70 )
Partition 71 (_71 - 71 )
Partition 72 (_72 - 72 )
Partition 73 (_73 - 73 )
Partition 74 (_74 - 74 )
Partition 75 (_75 - 75 )
Partition 76 (_76 - 76 )
Partition 77 (_77 - 77 )
Partition 78 (_78 - 78 )
Partition 79 (_79 - 79 )
Partition 80 (_80 - 80 )
Partition 81 (_81 - 81 )
Partition 82 (_82 - 82 )
Partition 83 (_83 - 83 )
Partition 84 (_84 - 84 )
Partition 85 (_85 - 85 )
Partition 94 (_94(D) - 94 )


Coalescible Partition map 

Partition 0, base 0 (_16 - 16 25 27 )
Partition 1, base 1 (l_18(D) - 18 )
Partition 2, base 2 (aux_20(D) - 20 )
Partition 3, base 3 (i_21(D) - 21 )
Partition 4, base 4 (vecSen_22(D) - 22 )
Partition 7, base 5 (_94(D) - 94 )


Partition map 

Partition 0 (_16 - 16 )
Partition 1 (l_18(D) - 18 )
Partition 2 (aux_20(D) - 20 )
Partition 3 (i_21(D) - 21 )
Partition 4 (vecSen_22(D) - 22 )
Partition 5 (_25 - 25 )
Partition 6 (_27 - 27 )
Partition 7 (_94(D) - 94 )


Conflict graph:

After sorting:
Sorted Coalesce list:
(10000, 0) _16 <-> _27
(10000, 0) _16 <-> _25

Partition map 

Partition 0 (_16 - 16 )
Partition 1 (l_18(D) - 18 )
Partition 2 (aux_20(D) - 20 )
Partition 3 (i_21(D) - 21 )
Partition 4 (vecSen_22(D) - 22 )
Partition 5 (_25 - 25 )
Partition 6 (_27 - 27 )
Partition 7 (_94(D) - 94 )

Coalesce list: (16)_16 & (27)_27 [map: 0, 6] : Success -> 0
Coalesce list: (16)_16 & (25)_25 [map: 0, 5] : Success -> 0
After Coalescing:

Partition map 

Partition 0 (_1 - 1 )
Partition 1 (_2 - 2 )
Partition 2 (_3 - 3 )
Partition 3 (_4 - 4 )
Partition 4 (_5 - 5 )
Partition 5 (_6 - 6 )
Partition 6 (_7 - 7 )
Partition 7 (_8 - 8 )
Partition 8 (_9 - 9 )
Partition 9 (_10 - 10 )
Partition 10 (_11 - 11 )
Partition 11 (_12 - 12 )
Partition 12 (_13 - 13 )
Partition 13 (_14 - 14 )
Partition 14 (_15 - 15 )
Partition 15 (_16 - 16 25 27 )
Partition 16 (l_18(D) - 18 )
Partition 17 (aux_20(D) - 20 )
Partition 18 (i_21(D) - 21 )
Partition 19 (vecSen_22(D) - 22 )
Partition 20 (_28 - 28 )
Partition 21 (_29 - 29 )
Partition 22 (_30 - 30 )
Partition 23 (_31 - 31 )
Partition 24 (_32 - 32 )
Partition 25 (_33 - 33 )
Partition 26 (_34 - 34 )
Partition 27 (_35 - 35 )
Partition 28 (_46 - 46 )
Partition 29 (_47 - 47 )
Partition 30 (_48 - 48 )
Partition 31 (_49 - 49 )
Partition 32 (_50 - 50 )
Partition 33 (_51 - 51 )
Partition 34 (_52 - 52 )
Partition 35 (_53 - 53 )
Partition 36 (_54 - 54 )
Partition 37 (_55 - 55 )
Partition 38 (_56 - 56 )
Partition 39 (_57 - 57 )
Partition 40 (_58 - 58 )
Partition 41 (_59 - 59 )
Partition 42 (_60 - 60 )
Partition 43 (_61 - 61 )
Partition 44 (_62 - 62 )
Partition 45 (_63 - 63 )
Partition 46 (_64 - 64 )
Partition 47 (_65 - 65 )
Partition 48 (_66 - 66 )
Partition 49 (_67 - 67 )
Partition 50 (_68 - 68 )
Partition 51 (_69 - 69 )
Partition 52 (_70 - 70 )
Partition 53 (_71 - 71 )
Partition 54 (_72 - 72 )
Partition 55 (_73 - 73 )
Partition 56 (_74 - 74 )
Partition 57 (_75 - 75 )
Partition 58 (_76 - 76 )
Partition 59 (_77 - 77 )
Partition 60 (_78 - 78 )
Partition 61 (_79 - 79 )
Partition 62 (_80 - 80 )
Partition 63 (_81 - 81 )
Partition 64 (_82 - 82 )
Partition 65 (_83 - 83 )
Partition 66 (_84 - 84 )
Partition 67 (_85 - 85 )
Partition 68 (_94(D) - 94 )

makeSenLRec (struct TNodeS * l, struct TNodeS * aux, struct TSensor * vecSen, size_t i)
{
  struct TNodeS * D.3520;
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _5;
  struct TSensor * _6;
  char * _7;
  long unsigned int _8;
  long unsigned int _9;
  sizetype _10;
  struct TSensor * _11;
  char * _12;
  int _13;
  struct Nsensor * _14;
  struct TNodeS * _15;
  struct TNodeS * _16;
  struct TNodeS * _25;
  struct TNodeS * _27;
  size_t * _28;
  size_t * _29;
  char * * _30;
  size_t * _31;
  char * * _32;
  struct Nsensor * * _33;
  struct Nsensor * * _34;
  struct Nsensor * * _35;
  unsigned long _46;
  unsigned long _47;
  unsigned long _48;
  signed char * _49;
  signed char _50;
  unsigned long _51;
  unsigned long _52;
  unsigned long _53;
  signed char * _54;
  signed char _55;
  unsigned long _56;
  unsigned long _57;
  unsigned long _58;
  signed char * _59;
  signed char _60;
  unsigned long _61;
  unsigned long _62;
  unsigned long _63;
  signed char * _64;
  signed char _65;
  unsigned long _66;
  unsigned long _67;
  unsigned long _68;
  signed char * _69;
  signed char _70;
  unsigned long _71;
  unsigned long _72;
  unsigned long _73;
  signed char * _74;
  signed char _75;
  unsigned long _76;
  unsigned long _77;
  unsigned long _78;
  signed char * _79;
  signed char _80;
  unsigned long _81;
  unsigned long _82;
  unsigned long _83;
  signed char * _84;
  signed char _85;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  if (l_18(D) == 0B)
    goto <bb 16>; [INV]
  else
    goto <bb 3>; [INV]
;;    succ:       16
;;                3

;;   basic block 3, loop depth 0
;;    pred:       2
  _28 = &l_18(D)->pedestrians;
  _46 = (unsigned long) _28;
  _47 = _46 >> 3;
  _48 = _47 + 2147450880;
  _49 = (signed char *) _48;
  _50 = *_49;
  if (_50 != 0)
    goto <bb 4>; [0.05%]
  else
    goto <bb 5>; [99.95%]
;;    succ:       5
;;                4

;;   basic block 4, loop depth 0
;;    pred:       3
  __builtin___asan_report_load8 (_46);
;;    succ:      

;;   basic block 5, loop depth 0
;;    pred:       3
  _1 = l_18(D)->pedestrians;
  _29 = &aux_20(D)->pedestrians;
  _51 = (unsigned long) _29;
  _52 = _51 >> 3;
  _53 = _52 + 2147450880;
  _54 = (signed char *) _53;
  _55 = *_54;
  if (_55 != 0)
    goto <bb 6>; [0.05%]
  else
    goto <bb 7>; [99.95%]
;;    succ:       7
;;                6

;;   basic block 6, loop depth 0
;;    pred:       5
  __builtin___asan_report_load8 (_51);
;;    succ:      

;;   basic block 7, loop depth 0
;;    pred:       5
  _2 = aux_20(D)->pedestrians;
  if (_1 > _2)
    goto <bb 16>; [INV]
  else
    goto <bb 8>; [INV]
;;    succ:       16
;;                8

;;   basic block 8, loop depth 0
;;    pred:       7
  _3 = l_18(D)->pedestrians;
  _4 = aux_20(D)->pedestrians;
  if (_3 == _4)
    goto <bb 9>; [INV]
  else
    goto <bb 19>; [INV]
;;    succ:       9
;;                19

;;   basic block 9, loop depth 0
;;    pred:       8
  _5 = i_21(D) * 80;
  _6 = vecSen_22(D) + _5;
  _30 = &_6->name;
  _56 = (unsigned long) _30;
  _57 = _56 >> 3;
  _58 = _57 + 2147450880;
  _59 = (signed char *) _58;
  _60 = *_59;
  if (_60 != 0)
    goto <bb 10>; [0.05%]
  else
    goto <bb 11>; [99.95%]
;;    succ:       11
;;                10

;;   basic block 10, loop depth 0
;;    pred:       9
  __builtin___asan_report_load8 (_56);
;;    succ:      

;;   basic block 11, loop depth 0
;;    pred:       9
  _7 = _6->name;
  _31 = &l_18(D)->ID;
  _61 = (unsigned long) _31;
  _62 = _61 >> 3;
  _63 = _62 + 2147450880;
  _64 = (signed char *) _63;
  _65 = *_64;
  if (_65 != 0)
    goto <bb 12>; [0.05%]
  else
    goto <bb 13>; [99.95%]
;;    succ:       13
;;                12

;;   basic block 12, loop depth 0
;;    pred:       11
  __builtin___asan_report_load8 (_61);
;;    succ:      

;;   basic block 13, loop depth 0
;;    pred:       11
  _8 = l_18(D)->ID;
  _9 = _8 * 80;
  _10 = _9 + 18446744073709551536;
  _11 = vecSen_22(D) + _10;
  _32 = &_11->name;
  _66 = (unsigned long) _32;
  _67 = _66 >> 3;
  _68 = _67 + 2147450880;
  _69 = (signed char *) _68;
  _70 = *_69;
  if (_70 != 0)
    goto <bb 14>; [0.05%]
  else
    goto <bb 15>; [99.95%]
;;    succ:       15
;;                14

;;   basic block 14, loop depth 0
;;    pred:       13
  __builtin___asan_report_load8 (_66);
;;    succ:      

;;   basic block 15, loop depth 0
;;    pred:       13
  _12 = _11->name;
  _13 = strcasecmp (_12, _7);
  if (_13 > 0)
    goto <bb 16>; [INV]
  else
    goto <bb 19>; [INV]
;;    succ:       16
;;                19

;;   basic block 16, loop depth 0
;;    pred:       2
;;                7
;;                15
  _33 = &aux_20(D)->tail;
  _71 = (unsigned long) _33;
  _72 = _71 >> 3;
  _73 = _72 + 2147450880;
  _74 = (signed char *) _73;
  _75 = *_74;
  if (_75 != 0)
    goto <bb 17>; [0.05%]
  else
    goto <bb 18>; [99.95%]
;;    succ:       18
;;                17

;;   basic block 17, loop depth 0
;;    pred:       16
  __builtin___asan_report_store8 (_71);
;;    succ:      

;;   basic block 18, loop depth 0
;;    pred:       16
  aux_20(D)->tail = l_18(D);
  _27 = aux_20(D);
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 24>; [INV]
;;    succ:       24

;;   basic block 19, loop depth 0
;;    pred:       8
;;                15
  _34 = &l_18(D)->tail;
  _76 = (unsigned long) _34;
  _77 = _76 >> 3;
  _78 = _77 + 2147450880;
  _79 = (signed char *) _78;
  _80 = *_79;
  if (_80 != 0)
    goto <bb 20>; [0.05%]
  else
    goto <bb 21>; [99.95%]
;;    succ:       21
;;                20

;;   basic block 20, loop depth 0
;;    pred:       19
  __builtin___asan_report_load8 (_76);
;;    succ:      

;;   basic block 21, loop depth 0
;;    pred:       19
  _14 = l_18(D)->tail;
  _15 = makeSenLRec (_14, aux_20(D), vecSen_22(D), i_21(D));
  _35 = &l_18(D)->tail;
  _81 = (unsigned long) _35;
  _82 = _81 >> 3;
  _83 = _82 + 2147450880;
  _84 = (signed char *) _83;
  _85 = *_84;
  if (_85 != 0)
    goto <bb 22>; [0.05%]
  else
    goto <bb 23>; [99.95%]
;;    succ:       23
;;                22

;;   basic block 22, loop depth 0
;;    pred:       21
  __builtin___asan_report_store8 (_81);
;;    succ:      

;;   basic block 23, loop depth 0
;;    pred:       21
  l_18(D)->tail = _15;
  _25 = l_18(D);
;;    succ:       24

;;   basic block 24, loop depth 0
;;    pred:       18
;;                23
  # _16 = PHI <_27(18), _25(23)>
<L5>:
  return _16;
;;    succ:       EXIT

}



;; Generating RTL for gimple basic block 2

;; if (l_18(D) == 0B)

(insn 9 8 10 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [8 l+0 S8 A64])
            (const_int 0 [0]))) "queryTAD.c":97:7 -1
     (nil))

(jump_insn 10 9 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "queryTAD.c":97:7 -1
     (nil))

;; Generating RTL for gimple basic block 3

;; _28 = &l_18(D)->pedestrians;

(insn 12 11 13 (set (reg/f:DI 147)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [8 l+0 S8 A64])) "queryTAD.c":97:22 -1
     (nil))

(insn 13 12 0 (parallel [
            (set (reg/f:DI 98 [ _28 ])
                (plus:DI (reg/f:DI 147)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":97:22 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [8 l+0 S8 A64])
            (const_int 8 [0x8]))
        (nil)))

;; _46 = (unsigned long) _28;

(insn 14 13 0 (set (reg:DI 106 [ _46 ])
        (reg/f:DI 98 [ _28 ])) "queryTAD.c":97:22 -1
     (nil))

;; _47 = _46 >> 3;

(insn 15 14 0 (parallel [
            (set (reg:DI 107 [ _47 ])
                (lshiftrt:DI (reg:DI 106 [ _46 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":97:22 -1
     (nil))

;; _48 = _47 + 2147450880;

(insn 16 15 0 (parallel [
            (set (reg:DI 108 [ _48 ])
                (plus:DI (reg:DI 107 [ _47 ])
                    (const_int 2147450880 [0x7fff8000])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":97:22 -1
     (nil))

;; _49 = (signed char *) _48;

(insn 17 16 0 (set (reg/f:DI 109 [ _49 ])
        (reg:DI 108 [ _48 ])) "queryTAD.c":97:22 -1
     (nil))

;; _50 = *_49;

(insn 18 17 0 (set (reg:QI 110 [ _50 ])
        (mem:QI (reg/f:DI 109 [ _49 ]) [10 *_49+0 S1 A8])) "queryTAD.c":97:22 -1
     (nil))

;; if (_50 != 0)

(insn 19 18 20 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 110 [ _50 ])
            (const_int 0 [0]))) "queryTAD.c":97:22 -1
     (nil))

(jump_insn 20 19 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "queryTAD.c":97:22 -1
     (nil))

;; Generating RTL for gimple basic block 4

;; __builtin___asan_report_load8 (_46);

(insn 22 21 23 (set (reg:DI 5 di)
        (reg:DI 106 [ _46 ])) "queryTAD.c":97:22 -1
     (nil))

(call_insn 23 22 24 (call (mem:QI (symbol_ref:DI ("__asan_report_load8") [flags 0x41]  <function_decl 0x7fc58eea5900 __builtin___asan_report_load8>) [0 __builtin___asan_report_load8 S1 A8])
        (const_int 0 [0])) "queryTAD.c":97:22 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

(barrier 24 23 0)

;; Generating RTL for gimple basic block 5

;; 

(code_label 25 24 26 64 (nil) [0 uses])

(note 26 25 0 NOTE_INSN_BASIC_BLOCK)

;; _1 = l_18(D)->pedestrians;

(insn 27 26 28 (set (reg/f:DI 148)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [8 l+0 S8 A64])) "queryTAD.c":97:22 -1
     (nil))

(insn 28 27 0 (set (reg:DI 82 [ _1 ])
        (mem:DI (plus:DI (reg/f:DI 148)
                (const_int 8 [0x8])) [2 l_18(D)->pedestrians+0 S8 A64])) "queryTAD.c":97:22 -1
     (nil))

;; _29 = &aux_20(D)->pedestrians;

(insn 29 28 30 (set (reg/f:DI 149)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [8 aux+0 S8 A64])) "queryTAD.c":97:41 -1
     (nil))

(insn 30 29 0 (parallel [
            (set (reg/f:DI 99 [ _29 ])
                (plus:DI (reg/f:DI 149)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":97:41 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])) [8 aux+0 S8 A64])
            (const_int 8 [0x8]))
        (nil)))

;; _51 = (unsigned long) _29;

(insn 31 30 0 (set (reg:DI 111 [ _51 ])
        (reg/f:DI 99 [ _29 ])) "queryTAD.c":97:41 -1
     (nil))

;; _52 = _51 >> 3;

(insn 32 31 0 (parallel [
            (set (reg:DI 112 [ _52 ])
                (lshiftrt:DI (reg:DI 111 [ _51 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":97:41 -1
     (nil))

;; _53 = _52 + 2147450880;

(insn 33 32 0 (parallel [
            (set (reg:DI 113 [ _53 ])
                (plus:DI (reg:DI 112 [ _52 ])
                    (const_int 2147450880 [0x7fff8000])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":97:41 -1
     (nil))

;; _54 = (signed char *) _53;

(insn 34 33 0 (set (reg/f:DI 114 [ _54 ])
        (reg:DI 113 [ _53 ])) "queryTAD.c":97:41 -1
     (nil))

;; _55 = *_54;

(insn 35 34 0 (set (reg:QI 115 [ _55 ])
        (mem:QI (reg/f:DI 114 [ _54 ]) [10 *_54+0 S1 A8])) "queryTAD.c":97:41 -1
     (nil))

;; if (_55 != 0)

(insn 36 35 37 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 115 [ _55 ])
            (const_int 0 [0]))) "queryTAD.c":97:41 -1
     (nil))

(jump_insn 37 36 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "queryTAD.c":97:41 -1
     (nil))

;; Generating RTL for gimple basic block 6

;; __builtin___asan_report_load8 (_51);

(insn 39 38 40 (set (reg:DI 5 di)
        (reg:DI 111 [ _51 ])) "queryTAD.c":97:41 -1
     (nil))

(call_insn 40 39 41 (call (mem:QI (symbol_ref:DI ("__asan_report_load8") [flags 0x41]  <function_decl 0x7fc58eea5900 __builtin___asan_report_load8>) [0 __builtin___asan_report_load8 S1 A8])
        (const_int 0 [0])) "queryTAD.c":97:41 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

(barrier 41 40 0)

;; Generating RTL for gimple basic block 7

;; 

(code_label 42 41 43 65 (nil) [0 uses])

(note 43 42 0 NOTE_INSN_BASIC_BLOCK)

;; _2 = aux_20(D)->pedestrians;

(insn 44 43 45 (set (reg/f:DI 150)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [8 aux+0 S8 A64])) "queryTAD.c":97:41 -1
     (nil))

(insn 45 44 0 (set (reg:DI 83 [ _2 ])
        (mem:DI (plus:DI (reg/f:DI 150)
                (const_int 8 [0x8])) [2 aux_20(D)->pedestrians+0 S8 A64])) "queryTAD.c":97:41 -1
     (nil))

;; if (_1 > _2)

(insn 46 45 47 (set (reg:CC 17 flags)
        (compare:CC (reg:DI 82 [ _1 ])
            (reg:DI 83 [ _2 ]))) "queryTAD.c":97:18 -1
     (nil))

(jump_insn 47 46 0 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "queryTAD.c":97:18 -1
     (nil))

;; Generating RTL for gimple basic block 8

;; _3 = l_18(D)->pedestrians;

(insn 49 48 50 (set (reg/f:DI 151)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [8 l+0 S8 A64])) "queryTAD.c":98:14 -1
     (nil))

(insn 50 49 0 (set (reg:DI 84 [ _3 ])
        (mem:DI (plus:DI (reg/f:DI 151)
                (const_int 8 [0x8])) [2 l_18(D)->pedestrians+0 S8 A64])) "queryTAD.c":98:14 -1
     (nil))

;; _4 = aux_20(D)->pedestrians;

(insn 51 50 52 (set (reg/f:DI 152)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [8 aux+0 S8 A64])) "queryTAD.c":98:34 -1
     (nil))

(insn 52 51 0 (set (reg:DI 85 [ _4 ])
        (mem:DI (plus:DI (reg/f:DI 152)
                (const_int 8 [0x8])) [2 aux_20(D)->pedestrians+0 S8 A64])) "queryTAD.c":98:34 -1
     (nil))

;; if (_3 == _4)

(insn 53 52 54 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 84 [ _3 ])
            (reg:DI 85 [ _4 ]))) "queryTAD.c":98:9 -1
     (nil))

(jump_insn 54 53 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "queryTAD.c":98:9 -1
     (nil))

;; Generating RTL for gimple basic block 9

;; _5 = i_21(D) * 80;

(insn 56 55 57 (set (reg:DI 153)
        (mem/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [2 i+0 S8 A64])) "queryTAD.c":98:90 -1
     (nil))

(insn 57 56 58 (set (reg:DI 154)
        (reg:DI 153)) "queryTAD.c":98:90 -1
     (nil))

(insn 58 57 59 (parallel [
            (set (reg:DI 154)
                (ashift:DI (reg:DI 154)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":98:90 -1
     (nil))

(insn 59 58 60 (parallel [
            (set (reg:DI 154)
                (plus:DI (reg:DI 154)
                    (reg:DI 153)))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":98:90 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 153)
            (const_int 5 [0x5]))
        (nil)))

(insn 60 59 61 (parallel [
            (set (reg:DI 155)
                (ashift:DI (reg:DI 154)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":98:90 -1
     (nil))

(insn 61 60 62 (set (reg:DI 154)
        (reg:DI 155)) "queryTAD.c":98:90 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 153)
            (const_int 80 [0x50]))
        (nil)))

(insn 62 61 0 (set (reg:DI 86 [ _5 ])
        (reg:DI 154)) "queryTAD.c":98:90 -1
     (nil))

;; _6 = vecSen_22(D) + _5;

(insn 63 62 64 (set (reg/f:DI 156)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [7 vecSen+0 S8 A64])) "queryTAD.c":98:90 -1
     (nil))

(insn 64 63 0 (parallel [
            (set (reg/f:DI 87 [ _6 ])
                (plus:DI (reg:DI 86 [ _5 ])
                    (reg/f:DI 156)))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":98:90 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [7 vecSen+0 S8 A64])
            (reg:DI 86 [ _5 ]))
        (nil)))

;; _30 = &_6->name;

(insn 65 64 0 (parallel [
            (set (reg/f:DI 100 [ _30 ])
                (plus:DI (reg/f:DI 87 [ _6 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":98:93 -1
     (nil))

;; _56 = (unsigned long) _30;

(insn 66 65 0 (set (reg:DI 116 [ _56 ])
        (reg/f:DI 100 [ _30 ])) "queryTAD.c":98:93 -1
     (nil))

;; _57 = _56 >> 3;

(insn 67 66 0 (parallel [
            (set (reg:DI 117 [ _57 ])
                (lshiftrt:DI (reg:DI 116 [ _56 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":98:93 -1
     (nil))

;; _58 = _57 + 2147450880;

(insn 68 67 0 (parallel [
            (set (reg:DI 118 [ _58 ])
                (plus:DI (reg:DI 117 [ _57 ])
                    (const_int 2147450880 [0x7fff8000])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":98:93 -1
     (nil))

;; _59 = (signed char *) _58;

(insn 69 68 0 (set (reg/f:DI 119 [ _59 ])
        (reg:DI 118 [ _58 ])) "queryTAD.c":98:93 -1
     (nil))

;; _60 = *_59;

(insn 70 69 0 (set (reg:QI 120 [ _60 ])
        (mem:QI (reg/f:DI 119 [ _59 ]) [10 *_59+0 S1 A8])) "queryTAD.c":98:93 -1
     (nil))

;; if (_60 != 0)

(insn 71 70 72 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 120 [ _60 ])
            (const_int 0 [0]))) "queryTAD.c":98:93 -1
     (nil))

(jump_insn 72 71 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "queryTAD.c":98:93 -1
     (nil))

;; Generating RTL for gimple basic block 10

;; __builtin___asan_report_load8 (_56);

(insn 74 73 75 (set (reg:DI 5 di)
        (reg:DI 116 [ _56 ])) "queryTAD.c":98:93 -1
     (nil))

(call_insn 75 74 76 (call (mem:QI (symbol_ref:DI ("__asan_report_load8") [flags 0x41]  <function_decl 0x7fc58eea5900 __builtin___asan_report_load8>) [0 __builtin___asan_report_load8 S1 A8])
        (const_int 0 [0])) "queryTAD.c":98:93 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

(barrier 76 75 0)

;; Generating RTL for gimple basic block 11

;; 

(code_label 77 76 78 67 (nil) [0 uses])

(note 78 77 0 NOTE_INSN_BASIC_BLOCK)

;; _7 = _6->name;

(insn 79 78 0 (set (reg/f:DI 88 [ _7 ])
        (mem/f:DI (plus:DI (reg/f:DI 87 [ _6 ])
                (const_int 8 [0x8])) [3 _6->name+0 S8 A64])) "queryTAD.c":98:93 -1
     (nil))

;; _31 = &l_18(D)->ID;

(insn 80 79 0 (set (reg/f:DI 101 [ _31 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [8 l+0 S8 A64])) "queryTAD.c":98:70 -1
     (nil))

;; _61 = (unsigned long) _31;

(insn 81 80 0 (set (reg:DI 121 [ _61 ])
        (reg/f:DI 101 [ _31 ])) "queryTAD.c":98:70 -1
     (nil))

;; _62 = _61 >> 3;

(insn 82 81 0 (parallel [
            (set (reg:DI 122 [ _62 ])
                (lshiftrt:DI (reg:DI 121 [ _61 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":98:70 -1
     (nil))

;; _63 = _62 + 2147450880;

(insn 83 82 0 (parallel [
            (set (reg:DI 123 [ _63 ])
                (plus:DI (reg:DI 122 [ _62 ])
                    (const_int 2147450880 [0x7fff8000])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":98:70 -1
     (nil))

;; _64 = (signed char *) _63;

(insn 84 83 0 (set (reg/f:DI 124 [ _64 ])
        (reg:DI 123 [ _63 ])) "queryTAD.c":98:70 -1
     (nil))

;; _65 = *_64;

(insn 85 84 0 (set (reg:QI 125 [ _65 ])
        (mem:QI (reg/f:DI 124 [ _64 ]) [10 *_64+0 S1 A8])) "queryTAD.c":98:70 -1
     (nil))

;; if (_65 != 0)

(insn 86 85 87 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 125 [ _65 ])
            (const_int 0 [0]))) "queryTAD.c":98:70 -1
     (nil))

(jump_insn 87 86 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "queryTAD.c":98:70 -1
     (nil))

;; Generating RTL for gimple basic block 12

;; __builtin___asan_report_load8 (_61);

(insn 89 88 90 (set (reg:DI 5 di)
        (reg:DI 121 [ _61 ])) "queryTAD.c":98:70 -1
     (nil))

(call_insn 90 89 91 (call (mem:QI (symbol_ref:DI ("__asan_report_load8") [flags 0x41]  <function_decl 0x7fc58eea5900 __builtin___asan_report_load8>) [0 __builtin___asan_report_load8 S1 A8])
        (const_int 0 [0])) "queryTAD.c":98:70 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

(barrier 91 90 0)

;; Generating RTL for gimple basic block 13

;; 

(code_label 92 91 93 68 (nil) [0 uses])

(note 93 92 0 NOTE_INSN_BASIC_BLOCK)

;; _8 = l_18(D)->ID;

(insn 94 93 95 (set (reg/f:DI 157)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [8 l+0 S8 A64])) "queryTAD.c":98:70 -1
     (nil))

(insn 95 94 0 (set (reg:DI 89 [ _8 ])
        (mem:DI (reg/f:DI 157) [2 l_18(D)->ID+0 S8 A64])) "queryTAD.c":98:70 -1
     (nil))

;; _9 = _8 * 80;

(insn 96 95 97 (set (reg:DI 158)
        (reg:DI 89 [ _8 ])) "queryTAD.c":98:68 -1
     (nil))

(insn 97 96 98 (parallel [
            (set (reg:DI 158)
                (ashift:DI (reg:DI 158)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":98:68 -1
     (nil))

(insn 98 97 99 (parallel [
            (set (reg:DI 158)
                (plus:DI (reg:DI 158)
                    (reg:DI 89 [ _8 ])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":98:68 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 89 [ _8 ])
            (const_int 5 [0x5]))
        (nil)))

(insn 99 98 100 (parallel [
            (set (reg:DI 159)
                (ashift:DI (reg:DI 158)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":98:68 -1
     (nil))

(insn 100 99 101 (set (reg:DI 158)
        (reg:DI 159)) "queryTAD.c":98:68 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 89 [ _8 ])
            (const_int 80 [0x50]))
        (nil)))

(insn 101 100 0 (set (reg:DI 90 [ _9 ])
        (reg:DI 158)) "queryTAD.c":98:68 -1
     (nil))

;; _10 = _9 + 18446744073709551536;

(insn 102 101 0 (parallel [
            (set (reg:DI 91 [ _10 ])
                (plus:DI (reg:DI 90 [ _9 ])
                    (const_int -80 [0xffffffffffffffb0])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":98:68 -1
     (nil))

;; _11 = vecSen_22(D) + _10;

(insn 103 102 104 (set (reg/f:DI 160)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [7 vecSen+0 S8 A64])) "queryTAD.c":98:68 -1
     (nil))

(insn 104 103 0 (parallel [
            (set (reg/f:DI 92 [ _11 ])
                (plus:DI (reg:DI 91 [ _10 ])
                    (reg/f:DI 160)))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":98:68 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [7 vecSen+0 S8 A64])
            (reg:DI 91 [ _10 ]))
        (nil)))

;; _32 = &_11->name;

(insn 105 104 0 (parallel [
            (set (reg/f:DI 102 [ _32 ])
                (plus:DI (reg/f:DI 92 [ _11 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":98:77 -1
     (nil))

;; _66 = (unsigned long) _32;

(insn 106 105 0 (set (reg:DI 126 [ _66 ])
        (reg/f:DI 102 [ _32 ])) "queryTAD.c":98:77 -1
     (nil))

;; _67 = _66 >> 3;

(insn 107 106 0 (parallel [
            (set (reg:DI 127 [ _67 ])
                (lshiftrt:DI (reg:DI 126 [ _66 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":98:77 -1
     (nil))

;; _68 = _67 + 2147450880;

(insn 108 107 0 (parallel [
            (set (reg:DI 128 [ _68 ])
                (plus:DI (reg:DI 127 [ _67 ])
                    (const_int 2147450880 [0x7fff8000])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":98:77 -1
     (nil))

;; _69 = (signed char *) _68;

(insn 109 108 0 (set (reg/f:DI 129 [ _69 ])
        (reg:DI 128 [ _68 ])) "queryTAD.c":98:77 -1
     (nil))

;; _70 = *_69;

(insn 110 109 0 (set (reg:QI 130 [ _70 ])
        (mem:QI (reg/f:DI 129 [ _69 ]) [10 *_69+0 S1 A8])) "queryTAD.c":98:77 -1
     (nil))

;; if (_70 != 0)

(insn 111 110 112 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 130 [ _70 ])
            (const_int 0 [0]))) "queryTAD.c":98:77 -1
     (nil))

(jump_insn 112 111 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "queryTAD.c":98:77 -1
     (nil))

;; Generating RTL for gimple basic block 14

;; __builtin___asan_report_load8 (_66);

(insn 114 113 115 (set (reg:DI 5 di)
        (reg:DI 126 [ _66 ])) "queryTAD.c":98:77 -1
     (nil))

(call_insn 115 114 116 (call (mem:QI (symbol_ref:DI ("__asan_report_load8") [flags 0x41]  <function_decl 0x7fc58eea5900 __builtin___asan_report_load8>) [0 __builtin___asan_report_load8 S1 A8])
        (const_int 0 [0])) "queryTAD.c":98:77 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

(barrier 116 115 0)

;; Generating RTL for gimple basic block 15

;; 

(code_label 117 116 118 69 (nil) [0 uses])

(note 118 117 0 NOTE_INSN_BASIC_BLOCK)

;; _12 = _11->name;

(insn 119 118 0 (set (reg/f:DI 93 [ _12 ])
        (mem/f:DI (plus:DI (reg/f:DI 92 [ _11 ])
                (const_int 8 [0x8])) [3 _11->name+0 S8 A64])) "queryTAD.c":98:77 -1
     (nil))

;; _13 = strcasecmp (_12, _7);

(insn 120 119 121 (set (reg:DI 4 si)
        (reg/f:DI 88 [ _7 ])) "queryTAD.c":98:51 -1
     (nil))

(insn 121 120 122 (set (reg:DI 5 di)
        (reg/f:DI 93 [ _12 ])) "queryTAD.c":98:51 -1
     (nil))

(call_insn/i 122 121 123 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcasecmp") [flags 0x41]  <function_decl 0x7fc58ebf9400 strcasecmp>) [0 strcasecmp S1 A8])
            (const_int 0 [0]))) "queryTAD.c":98:51 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))

(insn 123 122 0 (set (reg:SI 94 [ _13 ])
        (reg:SI 0 ax)) "queryTAD.c":98:51 -1
     (nil))

;; if (_13 > 0)

(insn 126 123 127 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 94 [ _13 ])
            (const_int 0 [0]))) "queryTAD.c":98:48 -1
     (nil))

(jump_insn 127 126 0 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "queryTAD.c":98:48 -1
     (nil))

;; Generating RTL for gimple basic block 16

;; 

(code_label 128 127 129 63 (nil) [0 uses])

(note 129 128 0 NOTE_INSN_BASIC_BLOCK)

;; _33 = &aux_20(D)->tail;

(insn 130 129 131 (set (reg/f:DI 161)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [8 aux+0 S8 A64])) "queryTAD.c":99:19 -1
     (nil))

(insn 131 130 0 (parallel [
            (set (reg/f:DI 103 [ _33 ])
                (plus:DI (reg/f:DI 161)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":99:19 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])) [8 aux+0 S8 A64])
            (const_int 16 [0x10]))
        (nil)))

;; _71 = (unsigned long) _33;

(insn 132 131 0 (set (reg:DI 131 [ _71 ])
        (reg/f:DI 103 [ _33 ])) "queryTAD.c":99:19 -1
     (nil))

;; _72 = _71 >> 3;

(insn 133 132 0 (parallel [
            (set (reg:DI 132 [ _72 ])
                (lshiftrt:DI (reg:DI 131 [ _71 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":99:19 -1
     (nil))

;; _73 = _72 + 2147450880;

(insn 134 133 0 (parallel [
            (set (reg:DI 133 [ _73 ])
                (plus:DI (reg:DI 132 [ _72 ])
                    (const_int 2147450880 [0x7fff8000])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":99:19 -1
     (nil))

;; _74 = (signed char *) _73;

(insn 135 134 0 (set (reg/f:DI 134 [ _74 ])
        (reg:DI 133 [ _73 ])) "queryTAD.c":99:19 -1
     (nil))

;; _75 = *_74;

(insn 136 135 0 (set (reg:QI 135 [ _75 ])
        (mem:QI (reg/f:DI 134 [ _74 ]) [10 *_74+0 S1 A8])) "queryTAD.c":99:19 -1
     (nil))

;; if (_75 != 0)

(insn 137 136 138 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 135 [ _75 ])
            (const_int 0 [0]))) "queryTAD.c":99:19 -1
     (nil))

(jump_insn 138 137 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "queryTAD.c":99:19 -1
     (nil))

;; Generating RTL for gimple basic block 17

;; __builtin___asan_report_store8 (_71);

(insn 140 139 141 (set (reg:DI 5 di)
        (reg:DI 131 [ _71 ])) "queryTAD.c":99:19 -1
     (nil))

(call_insn 141 140 142 (call (mem:QI (symbol_ref:DI ("__asan_report_store8") [flags 0x41]  <function_decl 0x7fc58eea5f00 __builtin___asan_report_store8>) [0 __builtin___asan_report_store8 S1 A8])
        (const_int 0 [0])) "queryTAD.c":99:19 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

(barrier 142 141 0)

;; Generating RTL for gimple basic block 18

;; 

(code_label 143 142 144 70 (nil) [0 uses])

(note 144 143 0 NOTE_INSN_BASIC_BLOCK)

;; aux_20(D)->tail = l_18(D);

(insn 145 144 146 (set (reg/f:DI 162)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [8 aux+0 S8 A64])) "queryTAD.c":99:19 -1
     (nil))

(insn 146 145 147 (set (reg/f:DI 163)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [8 l+0 S8 A64])) "queryTAD.c":99:19 -1
     (nil))

(insn 147 146 0 (set (mem/f:DI (plus:DI (reg/f:DI 162)
                (const_int 16 [0x10])) [8 aux_20(D)->tail+0 S8 A64])
        (reg/f:DI 163)) "queryTAD.c":99:19 -1
     (nil))

;; _27 = aux_20(D);

(insn 148 147 0 (set (reg/f:DI 97 [ _16 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [8 aux+0 S8 A64])) "queryTAD.c":100:16 -1
     (nil))

;; // predicted unlikely by early return (on trees) predictor.

(nil)

;; Generating RTL for gimple basic block 19

;; 

(code_label 151 150 152 66 (nil) [0 uses])

(note 152 151 0 NOTE_INSN_BASIC_BLOCK)

;; _34 = &l_18(D)->tail;

(insn 153 152 154 (set (reg/f:DI 164)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [8 l+0 S8 A64])) "queryTAD.c":102:28 -1
     (nil))

(insn 154 153 0 (parallel [
            (set (reg/f:DI 104 [ _34 ])
                (plus:DI (reg/f:DI 164)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":102:28 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [8 l+0 S8 A64])
            (const_int 16 [0x10]))
        (nil)))

;; _76 = (unsigned long) _34;

(insn 155 154 0 (set (reg:DI 136 [ _76 ])
        (reg/f:DI 104 [ _34 ])) "queryTAD.c":102:28 -1
     (nil))

;; _77 = _76 >> 3;

(insn 156 155 0 (parallel [
            (set (reg:DI 137 [ _77 ])
                (lshiftrt:DI (reg:DI 136 [ _76 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":102:28 -1
     (nil))

;; _78 = _77 + 2147450880;

(insn 157 156 0 (parallel [
            (set (reg:DI 138 [ _78 ])
                (plus:DI (reg:DI 137 [ _77 ])
                    (const_int 2147450880 [0x7fff8000])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":102:28 -1
     (nil))

;; _79 = (signed char *) _78;

(insn 158 157 0 (set (reg/f:DI 139 [ _79 ])
        (reg:DI 138 [ _78 ])) "queryTAD.c":102:28 -1
     (nil))

;; _80 = *_79;

(insn 159 158 0 (set (reg:QI 140 [ _80 ])
        (mem:QI (reg/f:DI 139 [ _79 ]) [10 *_79+0 S1 A8])) "queryTAD.c":102:28 -1
     (nil))

;; if (_80 != 0)

(insn 160 159 161 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 140 [ _80 ])
            (const_int 0 [0]))) "queryTAD.c":102:28 -1
     (nil))

(jump_insn 161 160 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "queryTAD.c":102:28 -1
     (nil))

;; Generating RTL for gimple basic block 20

;; __builtin___asan_report_load8 (_76);

(insn 163 162 164 (set (reg:DI 5 di)
        (reg:DI 136 [ _76 ])) "queryTAD.c":102:28 -1
     (nil))

(call_insn 164 163 165 (call (mem:QI (symbol_ref:DI ("__asan_report_load8") [flags 0x41]  <function_decl 0x7fc58eea5900 __builtin___asan_report_load8>) [0 __builtin___asan_report_load8 S1 A8])
        (const_int 0 [0])) "queryTAD.c":102:28 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

(barrier 165 164 0)

;; Generating RTL for gimple basic block 21

;; 

(code_label 166 165 167 72 (nil) [0 uses])

(note 167 166 0 NOTE_INSN_BASIC_BLOCK)

;; _14 = l_18(D)->tail;

(insn 168 167 169 (set (reg/f:DI 165)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [8 l+0 S8 A64])) "queryTAD.c":102:28 -1
     (nil))

(insn 169 168 0 (set (reg/f:DI 95 [ _14 ])
        (mem/f:DI (plus:DI (reg/f:DI 165)
                (const_int 16 [0x10])) [8 l_18(D)->tail+0 S8 A64])) "queryTAD.c":102:28 -1
     (nil))

;; _15 = makeSenLRec (_14, aux_20(D), vecSen_22(D), i_21(D));

(insn 170 169 171 (set (reg:DI 166)
        (mem/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [2 i+0 S8 A64])) "queryTAD.c":102:15 -1
     (nil))

(insn 171 170 172 (set (reg:DI 167)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [7 vecSen+0 S8 A64])) "queryTAD.c":102:15 -1
     (nil))

(insn 172 171 173 (set (reg:DI 168)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [8 aux+0 S8 A64])) "queryTAD.c":102:15 -1
     (nil))

(insn 173 172 174 (set (reg:DI 2 cx)
        (reg:DI 166)) "queryTAD.c":102:15 -1
     (nil))

(insn 174 173 175 (set (reg:DI 1 dx)
        (reg:DI 167)) "queryTAD.c":102:15 -1
     (nil))

(insn 175 174 176 (set (reg:DI 4 si)
        (reg:DI 168)) "queryTAD.c":102:15 -1
     (nil))

(insn 176 175 177 (set (reg:DI 5 di)
        (reg/f:DI 95 [ _14 ])) "queryTAD.c":102:15 -1
     (nil))

(call_insn 177 176 178 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("makeSenLRec") [flags 0x3]  <function_decl 0x7fc58ebf9e00 makeSenLRec>) [0 makeSenLRec S1 A8])
            (const_int 0 [0]))) "queryTAD.c":102:15 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))

(insn 178 177 0 (set (reg/f:DI 96 [ _15 ])
        (reg:DI 0 ax)) "queryTAD.c":102:15 -1
     (nil))

;; _35 = &l_18(D)->tail;

(insn 179 178 180 (set (reg/f:DI 169)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [8 l+0 S8 A64])) "queryTAD.c":102:13 -1
     (nil))

(insn 180 179 0 (parallel [
            (set (reg/f:DI 105 [ _35 ])
                (plus:DI (reg/f:DI 169)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":102:13 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [8 l+0 S8 A64])
            (const_int 16 [0x10]))
        (nil)))

;; _81 = (unsigned long) _35;

(insn 181 180 0 (set (reg:DI 141 [ _81 ])
        (reg/f:DI 105 [ _35 ])) "queryTAD.c":102:13 -1
     (nil))

;; _82 = _81 >> 3;

(insn 182 181 0 (parallel [
            (set (reg:DI 142 [ _82 ])
                (lshiftrt:DI (reg:DI 141 [ _81 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":102:13 -1
     (nil))

;; _83 = _82 + 2147450880;

(insn 183 182 0 (parallel [
            (set (reg:DI 143 [ _83 ])
                (plus:DI (reg:DI 142 [ _82 ])
                    (const_int 2147450880 [0x7fff8000])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":102:13 -1
     (nil))

;; _84 = (signed char *) _83;

(insn 184 183 0 (set (reg/f:DI 144 [ _84 ])
        (reg:DI 143 [ _83 ])) "queryTAD.c":102:13 -1
     (nil))

;; _85 = *_84;

(insn 185 184 0 (set (reg:QI 145 [ _85 ])
        (mem:QI (reg/f:DI 144 [ _84 ]) [10 *_84+0 S1 A8])) "queryTAD.c":102:13 -1
     (nil))

;; if (_85 != 0)

(insn 186 185 187 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 145 [ _85 ])
            (const_int 0 [0]))) "queryTAD.c":102:13 -1
     (nil))

(jump_insn 187 186 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "queryTAD.c":102:13 -1
     (nil))

;; Generating RTL for gimple basic block 22

;; __builtin___asan_report_store8 (_81);

(insn 189 188 190 (set (reg:DI 5 di)
        (reg:DI 141 [ _81 ])) "queryTAD.c":102:13 -1
     (nil))

(call_insn 190 189 191 (call (mem:QI (symbol_ref:DI ("__asan_report_store8") [flags 0x41]  <function_decl 0x7fc58eea5f00 __builtin___asan_report_store8>) [0 __builtin___asan_report_store8 S1 A8])
        (const_int 0 [0])) "queryTAD.c":102:13 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

(barrier 191 190 0)

;; Generating RTL for gimple basic block 23

;; 

(code_label 192 191 193 73 (nil) [0 uses])

(note 193 192 0 NOTE_INSN_BASIC_BLOCK)

;; l_18(D)->tail = _15;

(insn 194 193 195 (set (reg/f:DI 170)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [8 l+0 S8 A64])) "queryTAD.c":102:13 -1
     (nil))

(insn 195 194 0 (set (mem/f:DI (plus:DI (reg/f:DI 170)
                (const_int 16 [0x10])) [8 l_18(D)->tail+0 S8 A64])
        (reg/f:DI 96 [ _15 ])) "queryTAD.c":102:13 -1
     (nil))

;; _25 = l_18(D);

(insn 196 195 0 (set (reg/f:DI 97 [ _16 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [8 l+0 S8 A64])) "queryTAD.c":103:12 -1
     (nil))

;; Generating RTL for gimple basic block 24

;; <L5>:

(code_label 197 196 198 71 (nil) [0 uses])

(note 198 197 0 NOTE_INSN_BASIC_BLOCK)

;; return _16;

(insn 199 198 200 (set (reg/f:DI 146 [ <retval> ])
        (reg/f:DI 97 [ _16 ])) -1
     (nil))

(jump_insn 200 199 201 (set (pc)
        (label_ref 0)) -1
     (nil))

(barrier 201 200 0)


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Removing jump 200.
Merging block 26 into block 25...
Merged blocks 25 and 26.
Merged 25 and 26 without moving.


try_optimize_cfg iteration 2

fix_loop_structure: fixing up loops for function


;;
;; Full RTL generated for this function:
;;
(note 1 0 7 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 4, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [8 l+0 S8 A64])
        (reg:DI 5 di [ l ])) "queryTAD.c":96:75 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [8 aux+0 S8 A64])
        (reg:DI 4 si [ aux ])) "queryTAD.c":96:75 -1
     (nil))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [7 vecSen+0 S8 A64])
        (reg:DI 1 dx [ vecSen ])) "queryTAD.c":96:75 -1
     (nil))
(insn 5 4 6 2 (set (mem/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [2 i+0 S8 A64])
        (reg:DI 2 cx [ i ])) "queryTAD.c":96:75 -1
     (nil))
(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 6 10 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [8 l+0 S8 A64])
            (const_int 0 [0]))) "queryTAD.c":97:7 -1
     (nil))
(jump_insn 10 9 11 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 128)
            (pc))) "queryTAD.c":97:7 -1
     (nil)
 -> 128)
;;  succ:       17
;;              4 (FALLTHRU)

;; basic block 4, loop depth 0, maybe hot
;;  prev block 2, next block 5, flags: (NEW, REACHABLE, RTL)
;;  pred:       2 (FALLTHRU)
(note 11 10 12 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 12 11 13 4 (set (reg/f:DI 147)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [8 l+0 S8 A64])) "queryTAD.c":97:22 -1
     (nil))
(insn 13 12 14 4 (parallel [
            (set (reg/f:DI 98 [ _28 ])
                (plus:DI (reg/f:DI 147)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":97:22 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [8 l+0 S8 A64])
            (const_int 8 [0x8]))
        (nil)))
(insn 14 13 15 4 (set (reg:DI 106 [ _46 ])
        (reg/f:DI 98 [ _28 ])) "queryTAD.c":97:22 -1
     (nil))
(insn 15 14 16 4 (parallel [
            (set (reg:DI 107 [ _47 ])
                (lshiftrt:DI (reg:DI 106 [ _46 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":97:22 -1
     (nil))
(insn 16 15 17 4 (parallel [
            (set (reg:DI 108 [ _48 ])
                (plus:DI (reg:DI 107 [ _47 ])
                    (const_int 2147450880 [0x7fff8000])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":97:22 -1
     (nil))
(insn 17 16 18 4 (set (reg/f:DI 109 [ _49 ])
        (reg:DI 108 [ _48 ])) "queryTAD.c":97:22 -1
     (nil))
(insn 18 17 19 4 (set (reg:QI 110 [ _50 ])
        (mem:QI (reg/f:DI 109 [ _49 ]) [10 *_49+0 S1 A8])) "queryTAD.c":97:22 -1
     (nil))
(insn 19 18 20 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 110 [ _50 ])
            (const_int 0 [0]))) "queryTAD.c":97:22 -1
     (nil))
(jump_insn 20 19 21 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 25)
            (pc))) "queryTAD.c":97:22 -1
     (nil)
 -> 25)
;;  succ:       6 [100.0% (guessed)] 
;;              5 [0.0% (guessed)]  (FALLTHRU)

;; basic block 5, loop depth 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL)
;;  pred:       4 [0.0% (guessed)]  (FALLTHRU)
(note 21 20 22 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 22 21 23 5 (set (reg:DI 5 di)
        (reg:DI 106 [ _46 ])) "queryTAD.c":97:22 -1
     (nil))
(call_insn 23 22 24 5 (call (mem:QI (symbol_ref:DI ("__asan_report_load8") [flags 0x41]  <function_decl 0x7fc58eea5900 __builtin___asan_report_load8>) [0 __builtin___asan_report_load8 S1 A8])
        (const_int 0 [0])) "queryTAD.c":97:22 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:      

(barrier 24 23 25)
;; basic block 6, loop depth 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL)
;;  pred:       4 [100.0% (guessed)] 
(code_label 25 24 26 6 64 (nil) [1 uses])
(note 26 25 27 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 27 26 28 6 (set (reg/f:DI 148)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [8 l+0 S8 A64])) "queryTAD.c":97:22 -1
     (nil))
(insn 28 27 29 6 (set (reg:DI 82 [ _1 ])
        (mem:DI (plus:DI (reg/f:DI 148)
                (const_int 8 [0x8])) [2 l_18(D)->pedestrians+0 S8 A64])) "queryTAD.c":97:22 -1
     (nil))
(insn 29 28 30 6 (set (reg/f:DI 149)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [8 aux+0 S8 A64])) "queryTAD.c":97:41 -1
     (nil))
(insn 30 29 31 6 (parallel [
            (set (reg/f:DI 99 [ _29 ])
                (plus:DI (reg/f:DI 149)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":97:41 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])) [8 aux+0 S8 A64])
            (const_int 8 [0x8]))
        (nil)))
(insn 31 30 32 6 (set (reg:DI 111 [ _51 ])
        (reg/f:DI 99 [ _29 ])) "queryTAD.c":97:41 -1
     (nil))
(insn 32 31 33 6 (parallel [
            (set (reg:DI 112 [ _52 ])
                (lshiftrt:DI (reg:DI 111 [ _51 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":97:41 -1
     (nil))
(insn 33 32 34 6 (parallel [
            (set (reg:DI 113 [ _53 ])
                (plus:DI (reg:DI 112 [ _52 ])
                    (const_int 2147450880 [0x7fff8000])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":97:41 -1
     (nil))
(insn 34 33 35 6 (set (reg/f:DI 114 [ _54 ])
        (reg:DI 113 [ _53 ])) "queryTAD.c":97:41 -1
     (nil))
(insn 35 34 36 6 (set (reg:QI 115 [ _55 ])
        (mem:QI (reg/f:DI 114 [ _54 ]) [10 *_54+0 S1 A8])) "queryTAD.c":97:41 -1
     (nil))
(insn 36 35 37 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 115 [ _55 ])
            (const_int 0 [0]))) "queryTAD.c":97:41 -1
     (nil))
(jump_insn 37 36 38 6 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 42)
            (pc))) "queryTAD.c":97:41 -1
     (nil)
 -> 42)
;;  succ:       8 [100.0% (guessed)] 
;;              7 [0.0% (guessed)]  (FALLTHRU)

;; basic block 7, loop depth 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL)
;;  pred:       6 [0.0% (guessed)]  (FALLTHRU)
(note 38 37 39 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 39 38 40 7 (set (reg:DI 5 di)
        (reg:DI 111 [ _51 ])) "queryTAD.c":97:41 -1
     (nil))
(call_insn 40 39 41 7 (call (mem:QI (symbol_ref:DI ("__asan_report_load8") [flags 0x41]  <function_decl 0x7fc58eea5900 __builtin___asan_report_load8>) [0 __builtin___asan_report_load8 S1 A8])
        (const_int 0 [0])) "queryTAD.c":97:41 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:      

(barrier 41 40 42)
;; basic block 8, loop depth 0, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL)
;;  pred:       6 [100.0% (guessed)] 
(code_label 42 41 43 8 65 (nil) [1 uses])
(note 43 42 44 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 44 43 45 8 (set (reg/f:DI 150)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [8 aux+0 S8 A64])) "queryTAD.c":97:41 -1
     (nil))
(insn 45 44 46 8 (set (reg:DI 83 [ _2 ])
        (mem:DI (plus:DI (reg/f:DI 150)
                (const_int 8 [0x8])) [2 aux_20(D)->pedestrians+0 S8 A64])) "queryTAD.c":97:41 -1
     (nil))
(insn 46 45 47 8 (set (reg:CC 17 flags)
        (compare:CC (reg:DI 82 [ _1 ])
            (reg:DI 83 [ _2 ]))) "queryTAD.c":97:18 -1
     (nil))
(jump_insn 47 46 48 8 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 128)
            (pc))) "queryTAD.c":97:18 -1
     (nil)
 -> 128)
;;  succ:       17
;;              9 (FALLTHRU)

;; basic block 9, loop depth 0, maybe hot
;;  prev block 8, next block 10, flags: (NEW, REACHABLE, RTL)
;;  pred:       8 (FALLTHRU)
(note 48 47 49 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 49 48 50 9 (set (reg/f:DI 151)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [8 l+0 S8 A64])) "queryTAD.c":98:14 -1
     (nil))
(insn 50 49 51 9 (set (reg:DI 84 [ _3 ])
        (mem:DI (plus:DI (reg/f:DI 151)
                (const_int 8 [0x8])) [2 l_18(D)->pedestrians+0 S8 A64])) "queryTAD.c":98:14 -1
     (nil))
(insn 51 50 52 9 (set (reg/f:DI 152)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [8 aux+0 S8 A64])) "queryTAD.c":98:34 -1
     (nil))
(insn 52 51 53 9 (set (reg:DI 85 [ _4 ])
        (mem:DI (plus:DI (reg/f:DI 152)
                (const_int 8 [0x8])) [2 aux_20(D)->pedestrians+0 S8 A64])) "queryTAD.c":98:34 -1
     (nil))
(insn 53 52 54 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 84 [ _3 ])
            (reg:DI 85 [ _4 ]))) "queryTAD.c":98:9 -1
     (nil))
(jump_insn 54 53 55 9 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 151)
            (pc))) "queryTAD.c":98:9 -1
     (nil)
 -> 151)
;;  succ:       10 (FALLTHRU)
;;              20

;; basic block 10, loop depth 0, maybe hot
;;  prev block 9, next block 11, flags: (NEW, REACHABLE, RTL)
;;  pred:       9 (FALLTHRU)
(note 55 54 56 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 56 55 57 10 (set (reg:DI 153)
        (mem/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [2 i+0 S8 A64])) "queryTAD.c":98:90 -1
     (nil))
(insn 57 56 58 10 (set (reg:DI 154)
        (reg:DI 153)) "queryTAD.c":98:90 -1
     (nil))
(insn 58 57 59 10 (parallel [
            (set (reg:DI 154)
                (ashift:DI (reg:DI 154)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":98:90 -1
     (nil))
(insn 59 58 60 10 (parallel [
            (set (reg:DI 154)
                (plus:DI (reg:DI 154)
                    (reg:DI 153)))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":98:90 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 153)
            (const_int 5 [0x5]))
        (nil)))
(insn 60 59 61 10 (parallel [
            (set (reg:DI 155)
                (ashift:DI (reg:DI 154)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":98:90 -1
     (nil))
(insn 61 60 62 10 (set (reg:DI 154)
        (reg:DI 155)) "queryTAD.c":98:90 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 153)
            (const_int 80 [0x50]))
        (nil)))
(insn 62 61 63 10 (set (reg:DI 86 [ _5 ])
        (reg:DI 154)) "queryTAD.c":98:90 -1
     (nil))
(insn 63 62 64 10 (set (reg/f:DI 156)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [7 vecSen+0 S8 A64])) "queryTAD.c":98:90 -1
     (nil))
(insn 64 63 65 10 (parallel [
            (set (reg/f:DI 87 [ _6 ])
                (plus:DI (reg:DI 86 [ _5 ])
                    (reg/f:DI 156)))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":98:90 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [7 vecSen+0 S8 A64])
            (reg:DI 86 [ _5 ]))
        (nil)))
(insn 65 64 66 10 (parallel [
            (set (reg/f:DI 100 [ _30 ])
                (plus:DI (reg/f:DI 87 [ _6 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":98:93 -1
     (nil))
(insn 66 65 67 10 (set (reg:DI 116 [ _56 ])
        (reg/f:DI 100 [ _30 ])) "queryTAD.c":98:93 -1
     (nil))
(insn 67 66 68 10 (parallel [
            (set (reg:DI 117 [ _57 ])
                (lshiftrt:DI (reg:DI 116 [ _56 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":98:93 -1
     (nil))
(insn 68 67 69 10 (parallel [
            (set (reg:DI 118 [ _58 ])
                (plus:DI (reg:DI 117 [ _57 ])
                    (const_int 2147450880 [0x7fff8000])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":98:93 -1
     (nil))
(insn 69 68 70 10 (set (reg/f:DI 119 [ _59 ])
        (reg:DI 118 [ _58 ])) "queryTAD.c":98:93 -1
     (nil))
(insn 70 69 71 10 (set (reg:QI 120 [ _60 ])
        (mem:QI (reg/f:DI 119 [ _59 ]) [10 *_59+0 S1 A8])) "queryTAD.c":98:93 -1
     (nil))
(insn 71 70 72 10 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 120 [ _60 ])
            (const_int 0 [0]))) "queryTAD.c":98:93 -1
     (nil))
(jump_insn 72 71 73 10 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 77)
            (pc))) "queryTAD.c":98:93 -1
     (nil)
 -> 77)
;;  succ:       12 [100.0% (guessed)] 
;;              11 [0.0% (guessed)]  (FALLTHRU)

;; basic block 11, loop depth 0, maybe hot
;;  prev block 10, next block 12, flags: (NEW, REACHABLE, RTL)
;;  pred:       10 [0.0% (guessed)]  (FALLTHRU)
(note 73 72 74 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 74 73 75 11 (set (reg:DI 5 di)
        (reg:DI 116 [ _56 ])) "queryTAD.c":98:93 -1
     (nil))
(call_insn 75 74 76 11 (call (mem:QI (symbol_ref:DI ("__asan_report_load8") [flags 0x41]  <function_decl 0x7fc58eea5900 __builtin___asan_report_load8>) [0 __builtin___asan_report_load8 S1 A8])
        (const_int 0 [0])) "queryTAD.c":98:93 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:      

(barrier 76 75 77)
;; basic block 12, loop depth 0, maybe hot
;;  prev block 11, next block 13, flags: (NEW, REACHABLE, RTL)
;;  pred:       10 [100.0% (guessed)] 
(code_label 77 76 78 12 67 (nil) [1 uses])
(note 78 77 79 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 79 78 80 12 (set (reg/f:DI 88 [ _7 ])
        (mem/f:DI (plus:DI (reg/f:DI 87 [ _6 ])
                (const_int 8 [0x8])) [3 _6->name+0 S8 A64])) "queryTAD.c":98:93 -1
     (nil))
(insn 80 79 81 12 (set (reg/f:DI 101 [ _31 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [8 l+0 S8 A64])) "queryTAD.c":98:70 -1
     (nil))
(insn 81 80 82 12 (set (reg:DI 121 [ _61 ])
        (reg/f:DI 101 [ _31 ])) "queryTAD.c":98:70 -1
     (nil))
(insn 82 81 83 12 (parallel [
            (set (reg:DI 122 [ _62 ])
                (lshiftrt:DI (reg:DI 121 [ _61 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":98:70 -1
     (nil))
(insn 83 82 84 12 (parallel [
            (set (reg:DI 123 [ _63 ])
                (plus:DI (reg:DI 122 [ _62 ])
                    (const_int 2147450880 [0x7fff8000])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":98:70 -1
     (nil))
(insn 84 83 85 12 (set (reg/f:DI 124 [ _64 ])
        (reg:DI 123 [ _63 ])) "queryTAD.c":98:70 -1
     (nil))
(insn 85 84 86 12 (set (reg:QI 125 [ _65 ])
        (mem:QI (reg/f:DI 124 [ _64 ]) [10 *_64+0 S1 A8])) "queryTAD.c":98:70 -1
     (nil))
(insn 86 85 87 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 125 [ _65 ])
            (const_int 0 [0]))) "queryTAD.c":98:70 -1
     (nil))
(jump_insn 87 86 88 12 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 92)
            (pc))) "queryTAD.c":98:70 -1
     (nil)
 -> 92)
;;  succ:       14 [100.0% (guessed)] 
;;              13 [0.0% (guessed)]  (FALLTHRU)

;; basic block 13, loop depth 0, maybe hot
;;  prev block 12, next block 14, flags: (NEW, REACHABLE, RTL)
;;  pred:       12 [0.0% (guessed)]  (FALLTHRU)
(note 88 87 89 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 89 88 90 13 (set (reg:DI 5 di)
        (reg:DI 121 [ _61 ])) "queryTAD.c":98:70 -1
     (nil))
(call_insn 90 89 91 13 (call (mem:QI (symbol_ref:DI ("__asan_report_load8") [flags 0x41]  <function_decl 0x7fc58eea5900 __builtin___asan_report_load8>) [0 __builtin___asan_report_load8 S1 A8])
        (const_int 0 [0])) "queryTAD.c":98:70 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:      

(barrier 91 90 92)
;; basic block 14, loop depth 0, maybe hot
;;  prev block 13, next block 15, flags: (NEW, REACHABLE, RTL)
;;  pred:       12 [100.0% (guessed)] 
(code_label 92 91 93 14 68 (nil) [1 uses])
(note 93 92 94 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 94 93 95 14 (set (reg/f:DI 157)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [8 l+0 S8 A64])) "queryTAD.c":98:70 -1
     (nil))
(insn 95 94 96 14 (set (reg:DI 89 [ _8 ])
        (mem:DI (reg/f:DI 157) [2 l_18(D)->ID+0 S8 A64])) "queryTAD.c":98:70 -1
     (nil))
(insn 96 95 97 14 (set (reg:DI 158)
        (reg:DI 89 [ _8 ])) "queryTAD.c":98:68 -1
     (nil))
(insn 97 96 98 14 (parallel [
            (set (reg:DI 158)
                (ashift:DI (reg:DI 158)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":98:68 -1
     (nil))
(insn 98 97 99 14 (parallel [
            (set (reg:DI 158)
                (plus:DI (reg:DI 158)
                    (reg:DI 89 [ _8 ])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":98:68 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 89 [ _8 ])
            (const_int 5 [0x5]))
        (nil)))
(insn 99 98 100 14 (parallel [
            (set (reg:DI 159)
                (ashift:DI (reg:DI 158)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":98:68 -1
     (nil))
(insn 100 99 101 14 (set (reg:DI 158)
        (reg:DI 159)) "queryTAD.c":98:68 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 89 [ _8 ])
            (const_int 80 [0x50]))
        (nil)))
(insn 101 100 102 14 (set (reg:DI 90 [ _9 ])
        (reg:DI 158)) "queryTAD.c":98:68 -1
     (nil))
(insn 102 101 103 14 (parallel [
            (set (reg:DI 91 [ _10 ])
                (plus:DI (reg:DI 90 [ _9 ])
                    (const_int -80 [0xffffffffffffffb0])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":98:68 -1
     (nil))
(insn 103 102 104 14 (set (reg/f:DI 160)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [7 vecSen+0 S8 A64])) "queryTAD.c":98:68 -1
     (nil))
(insn 104 103 105 14 (parallel [
            (set (reg/f:DI 92 [ _11 ])
                (plus:DI (reg:DI 91 [ _10 ])
                    (reg/f:DI 160)))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":98:68 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [7 vecSen+0 S8 A64])
            (reg:DI 91 [ _10 ]))
        (nil)))
(insn 105 104 106 14 (parallel [
            (set (reg/f:DI 102 [ _32 ])
                (plus:DI (reg/f:DI 92 [ _11 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":98:77 -1
     (nil))
(insn 106 105 107 14 (set (reg:DI 126 [ _66 ])
        (reg/f:DI 102 [ _32 ])) "queryTAD.c":98:77 -1
     (nil))
(insn 107 106 108 14 (parallel [
            (set (reg:DI 127 [ _67 ])
                (lshiftrt:DI (reg:DI 126 [ _66 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":98:77 -1
     (nil))
(insn 108 107 109 14 (parallel [
            (set (reg:DI 128 [ _68 ])
                (plus:DI (reg:DI 127 [ _67 ])
                    (const_int 2147450880 [0x7fff8000])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":98:77 -1
     (nil))
(insn 109 108 110 14 (set (reg/f:DI 129 [ _69 ])
        (reg:DI 128 [ _68 ])) "queryTAD.c":98:77 -1
     (nil))
(insn 110 109 111 14 (set (reg:QI 130 [ _70 ])
        (mem:QI (reg/f:DI 129 [ _69 ]) [10 *_69+0 S1 A8])) "queryTAD.c":98:77 -1
     (nil))
(insn 111 110 112 14 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 130 [ _70 ])
            (const_int 0 [0]))) "queryTAD.c":98:77 -1
     (nil))
(jump_insn 112 111 113 14 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 117)
            (pc))) "queryTAD.c":98:77 -1
     (nil)
 -> 117)
;;  succ:       16 [100.0% (guessed)] 
;;              15 [0.0% (guessed)]  (FALLTHRU)

;; basic block 15, loop depth 0, maybe hot
;;  prev block 14, next block 16, flags: (NEW, REACHABLE, RTL)
;;  pred:       14 [0.0% (guessed)]  (FALLTHRU)
(note 113 112 114 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 114 113 115 15 (set (reg:DI 5 di)
        (reg:DI 126 [ _66 ])) "queryTAD.c":98:77 -1
     (nil))
(call_insn 115 114 116 15 (call (mem:QI (symbol_ref:DI ("__asan_report_load8") [flags 0x41]  <function_decl 0x7fc58eea5900 __builtin___asan_report_load8>) [0 __builtin___asan_report_load8 S1 A8])
        (const_int 0 [0])) "queryTAD.c":98:77 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:      

(barrier 116 115 117)
;; basic block 16, loop depth 0, maybe hot
;;  prev block 15, next block 17, flags: (NEW, REACHABLE, RTL)
;;  pred:       14 [100.0% (guessed)] 
(code_label 117 116 118 16 69 (nil) [1 uses])
(note 118 117 119 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 119 118 120 16 (set (reg/f:DI 93 [ _12 ])
        (mem/f:DI (plus:DI (reg/f:DI 92 [ _11 ])
                (const_int 8 [0x8])) [3 _11->name+0 S8 A64])) "queryTAD.c":98:77 -1
     (nil))
(insn 120 119 121 16 (set (reg:DI 4 si)
        (reg/f:DI 88 [ _7 ])) "queryTAD.c":98:51 -1
     (nil))
(insn 121 120 122 16 (set (reg:DI 5 di)
        (reg/f:DI 93 [ _12 ])) "queryTAD.c":98:51 -1
     (nil))
(call_insn/i 122 121 123 16 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcasecmp") [flags 0x41]  <function_decl 0x7fc58ebf9400 strcasecmp>) [0 strcasecmp S1 A8])
            (const_int 0 [0]))) "queryTAD.c":98:51 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 123 122 126 16 (set (reg:SI 94 [ _13 ])
        (reg:SI 0 ax)) "queryTAD.c":98:51 -1
     (nil))
(insn 126 123 127 16 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 94 [ _13 ])
            (const_int 0 [0]))) "queryTAD.c":98:48 -1
     (nil))
(jump_insn 127 126 128 16 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 151)
            (pc))) "queryTAD.c":98:48 -1
     (nil)
 -> 151)
;;  succ:       17 (FALLTHRU)
;;              20

;; basic block 17, loop depth 0, maybe hot
;;  prev block 16, next block 18, flags: (NEW, REACHABLE, RTL)
;;  pred:       2
;;              8
;;              16 (FALLTHRU)
(code_label 128 127 129 17 63 (nil) [2 uses])
(note 129 128 130 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 130 129 131 17 (set (reg/f:DI 161)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [8 aux+0 S8 A64])) "queryTAD.c":99:19 -1
     (nil))
(insn 131 130 132 17 (parallel [
            (set (reg/f:DI 103 [ _33 ])
                (plus:DI (reg/f:DI 161)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":99:19 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])) [8 aux+0 S8 A64])
            (const_int 16 [0x10]))
        (nil)))
(insn 132 131 133 17 (set (reg:DI 131 [ _71 ])
        (reg/f:DI 103 [ _33 ])) "queryTAD.c":99:19 -1
     (nil))
(insn 133 132 134 17 (parallel [
            (set (reg:DI 132 [ _72 ])
                (lshiftrt:DI (reg:DI 131 [ _71 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":99:19 -1
     (nil))
(insn 134 133 135 17 (parallel [
            (set (reg:DI 133 [ _73 ])
                (plus:DI (reg:DI 132 [ _72 ])
                    (const_int 2147450880 [0x7fff8000])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":99:19 -1
     (nil))
(insn 135 134 136 17 (set (reg/f:DI 134 [ _74 ])
        (reg:DI 133 [ _73 ])) "queryTAD.c":99:19 -1
     (nil))
(insn 136 135 137 17 (set (reg:QI 135 [ _75 ])
        (mem:QI (reg/f:DI 134 [ _74 ]) [10 *_74+0 S1 A8])) "queryTAD.c":99:19 -1
     (nil))
(insn 137 136 138 17 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 135 [ _75 ])
            (const_int 0 [0]))) "queryTAD.c":99:19 -1
     (nil))
(jump_insn 138 137 139 17 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 143)
            (pc))) "queryTAD.c":99:19 -1
     (nil)
 -> 143)
;;  succ:       19 [100.0% (guessed)] 
;;              18 [0.0% (guessed)]  (FALLTHRU)

;; basic block 18, loop depth 0, maybe hot
;;  prev block 17, next block 19, flags: (NEW, REACHABLE, RTL)
;;  pred:       17 [0.0% (guessed)]  (FALLTHRU)
(note 139 138 140 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 140 139 141 18 (set (reg:DI 5 di)
        (reg:DI 131 [ _71 ])) "queryTAD.c":99:19 -1
     (nil))
(call_insn 141 140 142 18 (call (mem:QI (symbol_ref:DI ("__asan_report_store8") [flags 0x41]  <function_decl 0x7fc58eea5f00 __builtin___asan_report_store8>) [0 __builtin___asan_report_store8 S1 A8])
        (const_int 0 [0])) "queryTAD.c":99:19 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:      

(barrier 142 141 143)
;; basic block 19, loop depth 0, maybe hot
;;  prev block 18, next block 20, flags: (NEW, REACHABLE, RTL)
;;  pred:       17 [100.0% (guessed)] 
(code_label 143 142 144 19 70 (nil) [1 uses])
(note 144 143 145 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 145 144 146 19 (set (reg/f:DI 162)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [8 aux+0 S8 A64])) "queryTAD.c":99:19 -1
     (nil))
(insn 146 145 147 19 (set (reg/f:DI 163)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [8 l+0 S8 A64])) "queryTAD.c":99:19 -1
     (nil))
(insn 147 146 148 19 (set (mem/f:DI (plus:DI (reg/f:DI 162)
                (const_int 16 [0x10])) [8 aux_20(D)->tail+0 S8 A64])
        (reg/f:DI 163)) "queryTAD.c":99:19 -1
     (nil))
(insn 148 147 149 19 (set (reg/f:DI 97 [ _16 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [8 aux+0 S8 A64])) "queryTAD.c":100:16 -1
     (nil))
(jump_insn 149 148 150 19 (set (pc)
        (label_ref 197)) "queryTAD.c":100:16 -1
     (nil)
 -> 197)
;;  succ:       25

(barrier 150 149 151)
;; basic block 20, loop depth 0, maybe hot
;;  prev block 19, next block 21, flags: (NEW, REACHABLE, RTL)
;;  pred:       9
;;              16
(code_label 151 150 152 20 66 (nil) [2 uses])
(note 152 151 153 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 153 152 154 20 (set (reg/f:DI 164)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [8 l+0 S8 A64])) "queryTAD.c":102:28 -1
     (nil))
(insn 154 153 155 20 (parallel [
            (set (reg/f:DI 104 [ _34 ])
                (plus:DI (reg/f:DI 164)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":102:28 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [8 l+0 S8 A64])
            (const_int 16 [0x10]))
        (nil)))
(insn 155 154 156 20 (set (reg:DI 136 [ _76 ])
        (reg/f:DI 104 [ _34 ])) "queryTAD.c":102:28 -1
     (nil))
(insn 156 155 157 20 (parallel [
            (set (reg:DI 137 [ _77 ])
                (lshiftrt:DI (reg:DI 136 [ _76 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":102:28 -1
     (nil))
(insn 157 156 158 20 (parallel [
            (set (reg:DI 138 [ _78 ])
                (plus:DI (reg:DI 137 [ _77 ])
                    (const_int 2147450880 [0x7fff8000])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":102:28 -1
     (nil))
(insn 158 157 159 20 (set (reg/f:DI 139 [ _79 ])
        (reg:DI 138 [ _78 ])) "queryTAD.c":102:28 -1
     (nil))
(insn 159 158 160 20 (set (reg:QI 140 [ _80 ])
        (mem:QI (reg/f:DI 139 [ _79 ]) [10 *_79+0 S1 A8])) "queryTAD.c":102:28 -1
     (nil))
(insn 160 159 161 20 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 140 [ _80 ])
            (const_int 0 [0]))) "queryTAD.c":102:28 -1
     (nil))
(jump_insn 161 160 162 20 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 166)
            (pc))) "queryTAD.c":102:28 -1
     (nil)
 -> 166)
;;  succ:       22 [100.0% (guessed)] 
;;              21 [0.0% (guessed)]  (FALLTHRU)

;; basic block 21, loop depth 0, maybe hot
;;  prev block 20, next block 22, flags: (NEW, REACHABLE, RTL)
;;  pred:       20 [0.0% (guessed)]  (FALLTHRU)
(note 162 161 163 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 163 162 164 21 (set (reg:DI 5 di)
        (reg:DI 136 [ _76 ])) "queryTAD.c":102:28 -1
     (nil))
(call_insn 164 163 165 21 (call (mem:QI (symbol_ref:DI ("__asan_report_load8") [flags 0x41]  <function_decl 0x7fc58eea5900 __builtin___asan_report_load8>) [0 __builtin___asan_report_load8 S1 A8])
        (const_int 0 [0])) "queryTAD.c":102:28 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:      

(barrier 165 164 166)
;; basic block 22, loop depth 0, maybe hot
;;  prev block 21, next block 23, flags: (NEW, REACHABLE, RTL)
;;  pred:       20 [100.0% (guessed)] 
(code_label 166 165 167 22 72 (nil) [1 uses])
(note 167 166 168 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 168 167 169 22 (set (reg/f:DI 165)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [8 l+0 S8 A64])) "queryTAD.c":102:28 -1
     (nil))
(insn 169 168 170 22 (set (reg/f:DI 95 [ _14 ])
        (mem/f:DI (plus:DI (reg/f:DI 165)
                (const_int 16 [0x10])) [8 l_18(D)->tail+0 S8 A64])) "queryTAD.c":102:28 -1
     (nil))
(insn 170 169 171 22 (set (reg:DI 166)
        (mem/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [2 i+0 S8 A64])) "queryTAD.c":102:15 -1
     (nil))
(insn 171 170 172 22 (set (reg:DI 167)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [7 vecSen+0 S8 A64])) "queryTAD.c":102:15 -1
     (nil))
(insn 172 171 173 22 (set (reg:DI 168)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [8 aux+0 S8 A64])) "queryTAD.c":102:15 -1
     (nil))
(insn 173 172 174 22 (set (reg:DI 2 cx)
        (reg:DI 166)) "queryTAD.c":102:15 -1
     (nil))
(insn 174 173 175 22 (set (reg:DI 1 dx)
        (reg:DI 167)) "queryTAD.c":102:15 -1
     (nil))
(insn 175 174 176 22 (set (reg:DI 4 si)
        (reg:DI 168)) "queryTAD.c":102:15 -1
     (nil))
(insn 176 175 177 22 (set (reg:DI 5 di)
        (reg/f:DI 95 [ _14 ])) "queryTAD.c":102:15 -1
     (nil))
(call_insn 177 176 178 22 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("makeSenLRec") [flags 0x3]  <function_decl 0x7fc58ebf9e00 makeSenLRec>) [0 makeSenLRec S1 A8])
            (const_int 0 [0]))) "queryTAD.c":102:15 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 178 177 179 22 (set (reg/f:DI 96 [ _15 ])
        (reg:DI 0 ax)) "queryTAD.c":102:15 -1
     (nil))
(insn 179 178 180 22 (set (reg/f:DI 169)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [8 l+0 S8 A64])) "queryTAD.c":102:13 -1
     (nil))
(insn 180 179 181 22 (parallel [
            (set (reg/f:DI 105 [ _35 ])
                (plus:DI (reg/f:DI 169)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":102:13 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [8 l+0 S8 A64])
            (const_int 16 [0x10]))
        (nil)))
(insn 181 180 182 22 (set (reg:DI 141 [ _81 ])
        (reg/f:DI 105 [ _35 ])) "queryTAD.c":102:13 -1
     (nil))
(insn 182 181 183 22 (parallel [
            (set (reg:DI 142 [ _82 ])
                (lshiftrt:DI (reg:DI 141 [ _81 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":102:13 -1
     (nil))
(insn 183 182 184 22 (parallel [
            (set (reg:DI 143 [ _83 ])
                (plus:DI (reg:DI 142 [ _82 ])
                    (const_int 2147450880 [0x7fff8000])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":102:13 -1
     (nil))
(insn 184 183 185 22 (set (reg/f:DI 144 [ _84 ])
        (reg:DI 143 [ _83 ])) "queryTAD.c":102:13 -1
     (nil))
(insn 185 184 186 22 (set (reg:QI 145 [ _85 ])
        (mem:QI (reg/f:DI 144 [ _84 ]) [10 *_84+0 S1 A8])) "queryTAD.c":102:13 -1
     (nil))
(insn 186 185 187 22 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 145 [ _85 ])
            (const_int 0 [0]))) "queryTAD.c":102:13 -1
     (nil))
(jump_insn 187 186 188 22 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 192)
            (pc))) "queryTAD.c":102:13 -1
     (nil)
 -> 192)
;;  succ:       24 [100.0% (guessed)] 
;;              23 [0.0% (guessed)]  (FALLTHRU)

;; basic block 23, loop depth 0, maybe hot
;;  prev block 22, next block 24, flags: (NEW, REACHABLE, RTL)
;;  pred:       22 [0.0% (guessed)]  (FALLTHRU)
(note 188 187 189 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 189 188 190 23 (set (reg:DI 5 di)
        (reg:DI 141 [ _81 ])) "queryTAD.c":102:13 -1
     (nil))
(call_insn 190 189 191 23 (call (mem:QI (symbol_ref:DI ("__asan_report_store8") [flags 0x41]  <function_decl 0x7fc58eea5f00 __builtin___asan_report_store8>) [0 __builtin___asan_report_store8 S1 A8])
        (const_int 0 [0])) "queryTAD.c":102:13 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:      

(barrier 191 190 192)
;; basic block 24, loop depth 0, maybe hot
;;  prev block 23, next block 25, flags: (NEW, REACHABLE, RTL)
;;  pred:       22 [100.0% (guessed)] 
(code_label 192 191 193 24 73 (nil) [1 uses])
(note 193 192 194 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 194 193 195 24 (set (reg/f:DI 170)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [8 l+0 S8 A64])) "queryTAD.c":102:13 -1
     (nil))
(insn 195 194 196 24 (set (mem/f:DI (plus:DI (reg/f:DI 170)
                (const_int 16 [0x10])) [8 l_18(D)->tail+0 S8 A64])
        (reg/f:DI 96 [ _15 ])) "queryTAD.c":102:13 -1
     (nil))
(insn 196 195 197 24 (set (reg/f:DI 97 [ _16 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [8 l+0 S8 A64])) "queryTAD.c":103:12 -1
     (nil))
;;  succ:       25 (FALLTHRU)

;; basic block 25, loop depth 0, maybe hot
;;  prev block 24, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       19
;;              24 (FALLTHRU)
(code_label 197 196 198 25 71 (nil) [1 uses])
(note 198 197 199 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 199 198 203 25 (set (reg/f:DI 146 [ <retval> ])
        (reg/f:DI 97 [ _16 ])) -1
     (nil))
(insn 203 199 204 25 (set (reg/i:DI 0 ax)
        (reg/f:DI 146 [ <retval> ])) "queryTAD.c":104:1 -1
     (nil))
(insn 204 203 0 25 (use (reg/i:DI 0 ax)) "queryTAD.c":104:1 -1
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)


;; Function makeSenL (makeSenL, funcdef_no=8, decl_uid=3391, cgraph_uid=9, symbol_order=8)

makeSenL (struct queryCDT * q)
{
  struct TNodeS * aux;
  int i;
  struct TNodeS * aux;
  int _1;
  long unsigned int _2;
  struct TSensor * _3;
  long unsigned int _4;
  long unsigned int _5;
  struct TSensor * _6;
  long unsigned int _7;
  long unsigned int _8;
  struct TSensor * _9;
  struct TNodeS * _10;
  struct TNodeS * _11;
  struct TNodeS * _12;
  long unsigned int _13;
  struct TNodeS * _14;
  long unsigned int _15;
  size_t * _36;
  struct TSensor * * _37;
  size_t * _38;
  size_t * _39;
  struct TNodeS * * _40;
  struct TNodeS * * _41;
  struct TNodeS * * _42;
  struct TNodeS * * _43;
  size_t * _44;
  struct TNodeS * * _45;
  size_t * _46;
  struct Nsensor * * _47;
  unsigned long _61;
  unsigned long _62;
  unsigned long _63;
  signed char * _64;
  signed char _65;
  unsigned long _66;
  unsigned long _67;
  unsigned long _68;
  signed char * _69;
  signed char _70;
  unsigned long _71;
  unsigned long _72;
  unsigned long _73;
  signed char * _74;
  signed char _75;
  unsigned long _76;
  unsigned long _77;
  unsigned long _78;
  signed char * _79;
  signed char _80;
  unsigned long _81;
  unsigned long _82;
  unsigned long _83;
  signed char * _84;
  signed char _85;
  unsigned long _86;
  unsigned long _87;
  unsigned long _88;
  signed char * _89;
  signed char _90;
  unsigned long _91;
  unsigned long _92;
  unsigned long _93;
  signed char * _94;
  signed char _95;
  unsigned long _96;
  unsigned long _97;
  unsigned long _98;
  signed char * _99;
  signed char _100;
  unsigned long _101;
  unsigned long _102;
  unsigned long _103;
  signed char * _104;
  signed char _105;
  unsigned long _106;
  unsigned long _107;
  unsigned long _108;
  signed char * _109;
  signed char _110;
  unsigned long _111;
  unsigned long _112;
  unsigned long _113;
  signed char * _114;
  signed char _115;
  unsigned long _116;
  unsigned long _117;
  unsigned long _118;
  signed char * _119;
  signed char _120;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  i_20 = 0;
  goto <bb 18>; [INV]
;;    succ:       18

;;   basic block 3, loop depth 1
;;    pred:       18
  aux_28 = malloc (24);
  if (aux_28 == 0B)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]
;;    succ:       4
;;                5

;;   basic block 4, loop depth 0
;;    pred:       3
  perror ("Unable to allocate memory.");
  __builtin___asan_handle_no_return ();
  exit (1);
;;    succ:      

;;   basic block 5, loop depth 1
;;    pred:       3
  _1 = i_16 + 1;
  _2 = (long unsigned int) _1;
  _36 = &aux_28->ID;
  _61 = (unsigned long) _36;
  _62 = _61 >> 3;
  _63 = _62 + 2147450880;
  _64 = (signed char *) _63;
  _65 = *_64;
  if (_65 != 0)
    goto <bb 6>; [0.05%]
  else
    goto <bb 7>; [99.95%]
;;    succ:       7
;;                6

;;   basic block 6, loop depth 0
;;    pred:       5
  __builtin___asan_report_store8 (_61);
;;    succ:      

;;   basic block 7, loop depth 1
;;    pred:       5
  aux_28->ID = _2;
  _37 = &q_22(D)->sensorsID;
  _66 = (unsigned long) _37;
  _67 = _66 >> 3;
  _68 = _67 + 2147450880;
  _69 = (signed char *) _68;
  _70 = *_69;
  if (_70 != 0)
    goto <bb 8>; [0.05%]
  else
    goto <bb 9>; [99.95%]
;;    succ:       9
;;                8

;;   basic block 8, loop depth 0
;;    pred:       7
  __builtin___asan_report_load8 (_66);
;;    succ:      

;;   basic block 9, loop depth 1
;;    pred:       7
  _3 = q_22(D)->sensorsID;
  _4 = (long unsigned int) i_16;
  _5 = _4 * 80;
  _6 = _3 + _5;
  _38 = &_6->total;
  _71 = (unsigned long) _38;
  _72 = _71 >> 3;
  _73 = _72 + 2147450880;
  _74 = (signed char *) _73;
  _75 = *_74;
  if (_75 != 0)
    goto <bb 10>; [0.05%]
  else
    goto <bb 11>; [99.95%]
;;    succ:       11
;;                10

;;   basic block 10, loop depth 0
;;    pred:       9
  __builtin___asan_report_load8 (_71);
;;    succ:      

;;   basic block 11, loop depth 1
;;    pred:       9
  _7 = _6->total;
  _39 = &aux_28->pedestrians;
  _76 = (unsigned long) _39;
  _77 = _76 >> 3;
  _78 = _77 + 2147450880;
  _79 = (signed char *) _78;
  _80 = *_79;
  if (_80 != 0)
    goto <bb 12>; [0.05%]
  else
    goto <bb 13>; [99.95%]
;;    succ:       13
;;                12

;;   basic block 12, loop depth 0
;;    pred:       11
  __builtin___asan_report_store8 (_76);
;;    succ:      

;;   basic block 13, loop depth 1
;;    pred:       11
  aux_28->pedestrians = _7;
  _8 = (long unsigned int) i_16;
  _9 = q_22(D)->sensorsID;
  _40 = &q_22(D)->sensorsP;
  _81 = (unsigned long) _40;
  _82 = _81 >> 3;
  _83 = _82 + 2147450880;
  _84 = (signed char *) _83;
  _85 = *_84;
  if (_85 != 0)
    goto <bb 14>; [0.05%]
  else
    goto <bb 15>; [99.95%]
;;    succ:       15
;;                14

;;   basic block 14, loop depth 0
;;    pred:       13
  __builtin___asan_report_load8 (_81);
;;    succ:      

;;   basic block 15, loop depth 1
;;    pred:       13
  _10 = q_22(D)->sensorsP;
  _11 = makeSenLRec (_10, aux_28, _9, _8);
  _41 = &q_22(D)->sensorsP;
  _86 = (unsigned long) _41;
  _87 = _86 >> 3;
  _88 = _87 + 2147450880;
  _89 = (signed char *) _88;
  _90 = *_89;
  if (_90 != 0)
    goto <bb 16>; [0.05%]
  else
    goto <bb 17>; [99.95%]
;;    succ:       17
;;                16

;;   basic block 16, loop depth 0
;;    pred:       15
  __builtin___asan_report_store8 (_86);
;;    succ:      

;;   basic block 17, loop depth 1
;;    pred:       15
  q_22(D)->sensorsP = _11;
  i_33 = i_16 + 1;
;;    succ:       18

;;   basic block 18, loop depth 1
;;    pred:       2
;;                17
  # i_16 = PHI <i_20(2), i_33(17)>
  if (i_16 <= 85)
    goto <bb 3>; [INV]
  else
    goto <bb 19>; [INV]
;;    succ:       3
;;                19

;;   basic block 19, loop depth 0
;;    pred:       18
  _42 = &q_22(D)->sensorsP;
  _91 = (unsigned long) _42;
  _92 = _91 >> 3;
  _93 = _92 + 2147450880;
  _94 = (signed char *) _93;
  _95 = *_94;
  if (_95 != 0)
    goto <bb 20>; [0.05%]
  else
    goto <bb 21>; [99.95%]
;;    succ:       21
;;                20

;;   basic block 20, loop depth 0
;;    pred:       19
  __builtin___asan_report_load8 (_91);
;;    succ:      

;;   basic block 21, loop depth 0
;;    pred:       19
  aux_23 = q_22(D)->sensorsP;
  goto <bb 33>; [INV]
;;    succ:       33

;;   basic block 22, loop depth 1
;;    pred:       33
  _43 = &q_22(D)->sensorsP;
  _96 = (unsigned long) _43;
  _97 = _96 >> 3;
  _98 = _97 + 2147450880;
  _99 = (signed char *) _98;
  _100 = *_99;
  if (_100 != 0)
    goto <bb 23>; [0.05%]
  else
    goto <bb 24>; [99.95%]
;;    succ:       24
;;                23

;;   basic block 23, loop depth 0
;;    pred:       22
  __builtin___asan_report_load8 (_96);
;;    succ:      

;;   basic block 24, loop depth 1
;;    pred:       22
  _12 = q_22(D)->sensorsP;
  _44 = &_12->ID;
  _101 = (unsigned long) _44;
  _102 = _101 >> 3;
  _103 = _102 + 2147450880;
  _104 = (signed char *) _103;
  _105 = *_104;
  if (_105 != 0)
    goto <bb 25>; [0.05%]
  else
    goto <bb 26>; [99.95%]
;;    succ:       26
;;                25

;;   basic block 25, loop depth 0
;;    pred:       24
  __builtin___asan_report_load8 (_101);
;;    succ:      

;;   basic block 26, loop depth 1
;;    pred:       24
  _13 = _12->ID;
  printf ("ID:%lu\t", _13);
  _45 = &q_22(D)->sensorsP;
  _106 = (unsigned long) _45;
  _107 = _106 >> 3;
  _108 = _107 + 2147450880;
  _109 = (signed char *) _108;
  _110 = *_109;
  if (_110 != 0)
    goto <bb 27>; [0.05%]
  else
    goto <bb 28>; [99.95%]
;;    succ:       28
;;                27

;;   basic block 27, loop depth 0
;;    pred:       26
  __builtin___asan_report_load8 (_106);
;;    succ:      

;;   basic block 28, loop depth 1
;;    pred:       26
  _14 = q_22(D)->sensorsP;
  _46 = &_14->pedestrians;
  _111 = (unsigned long) _46;
  _112 = _111 >> 3;
  _113 = _112 + 2147450880;
  _114 = (signed char *) _113;
  _115 = *_114;
  if (_115 != 0)
    goto <bb 29>; [0.05%]
  else
    goto <bb 30>; [99.95%]
;;    succ:       30
;;                29

;;   basic block 29, loop depth 0
;;    pred:       28
  __builtin___asan_report_load8 (_111);
;;    succ:      

;;   basic block 30, loop depth 1
;;    pred:       28
  _15 = _14->pedestrians;
  printf ("Name:%lu\t", _15);
  _47 = &aux_17->tail;
  _116 = (unsigned long) _47;
  _117 = _116 >> 3;
  _118 = _117 + 2147450880;
  _119 = (signed char *) _118;
  _120 = *_119;
  if (_120 != 0)
    goto <bb 31>; [0.05%]
  else
    goto <bb 32>; [99.95%]
;;    succ:       32
;;                31

;;   basic block 31, loop depth 0
;;    pred:       30
  __builtin___asan_report_load8 (_116);
;;    succ:      

;;   basic block 32, loop depth 1
;;    pred:       30
  aux_26 = aux_17->tail;
;;    succ:       33

;;   basic block 33, loop depth 1
;;    pred:       21
;;                32
  # aux_17 = PHI <aux_23(21), aux_26(32)>
  if (aux_17 != 0B)
    goto <bb 22>; [INV]
  else
    goto <bb 34>; [INV]
;;    succ:       22
;;                34

;;   basic block 34, loop depth 0
;;    pred:       33
  return;
;;    succ:       EXIT

}



Partition map 

Partition 1 (_1 - 1 )
Partition 2 (_2 - 2 )
Partition 3 (_3 - 3 )
Partition 4 (_4 - 4 )
Partition 5 (_5 - 5 )
Partition 6 (_6 - 6 )
Partition 7 (_7 - 7 )
Partition 8 (_8 - 8 )
Partition 9 (_9 - 9 )
Partition 10 (_10 - 10 )
Partition 11 (_11 - 11 )
Partition 12 (_12 - 12 )
Partition 13 (_13 - 13 )
Partition 14 (_14 - 14 )
Partition 15 (_15 - 15 )
Partition 16 (i_16 - 16 )
Partition 17 (aux_17 - 17 )
Partition 20 (i_20 - 20 )
Partition 22 (q_22(D) - 22 )
Partition 23 (aux_23 - 23 )
Partition 26 (aux_26 - 26 )
Partition 28 (aux_28 - 28 )
Partition 33 (i_33 - 33 )
Partition 36 (_36 - 36 )
Partition 37 (_37 - 37 )
Partition 38 (_38 - 38 )
Partition 39 (_39 - 39 )
Partition 40 (_40 - 40 )
Partition 41 (_41 - 41 )
Partition 42 (_42 - 42 )
Partition 43 (_43 - 43 )
Partition 44 (_44 - 44 )
Partition 45 (_45 - 45 )
Partition 46 (_46 - 46 )
Partition 47 (_47 - 47 )
Partition 61 (_61 - 61 )
Partition 62 (_62 - 62 )
Partition 63 (_63 - 63 )
Partition 64 (_64 - 64 )
Partition 65 (_65 - 65 )
Partition 66 (_66 - 66 )
Partition 67 (_67 - 67 )
Partition 68 (_68 - 68 )
Partition 69 (_69 - 69 )
Partition 70 (_70 - 70 )
Partition 71 (_71 - 71 )
Partition 72 (_72 - 72 )
Partition 73 (_73 - 73 )
Partition 74 (_74 - 74 )
Partition 75 (_75 - 75 )
Partition 76 (_76 - 76 )
Partition 77 (_77 - 77 )
Partition 78 (_78 - 78 )
Partition 79 (_79 - 79 )
Partition 80 (_80 - 80 )
Partition 81 (_81 - 81 )
Partition 82 (_82 - 82 )
Partition 83 (_83 - 83 )
Partition 84 (_84 - 84 )
Partition 85 (_85 - 85 )
Partition 86 (_86 - 86 )
Partition 87 (_87 - 87 )
Partition 88 (_88 - 88 )
Partition 89 (_89 - 89 )
Partition 90 (_90 - 90 )
Partition 91 (_91 - 91 )
Partition 92 (_92 - 92 )
Partition 93 (_93 - 93 )
Partition 94 (_94 - 94 )
Partition 95 (_95 - 95 )
Partition 96 (_96 - 96 )
Partition 97 (_97 - 97 )
Partition 98 (_98 - 98 )
Partition 99 (_99 - 99 )
Partition 100 (_100 - 100 )
Partition 101 (_101 - 101 )
Partition 102 (_102 - 102 )
Partition 103 (_103 - 103 )
Partition 104 (_104 - 104 )
Partition 105 (_105 - 105 )
Partition 106 (_106 - 106 )
Partition 107 (_107 - 107 )
Partition 108 (_108 - 108 )
Partition 109 (_109 - 109 )
Partition 110 (_110 - 110 )
Partition 111 (_111 - 111 )
Partition 112 (_112 - 112 )
Partition 113 (_113 - 113 )
Partition 114 (_114 - 114 )
Partition 115 (_115 - 115 )
Partition 116 (_116 - 116 )
Partition 117 (_117 - 117 )
Partition 118 (_118 - 118 )
Partition 119 (_119 - 119 )
Partition 120 (_120 - 120 )


Coalescible Partition map 

Partition 0, base 0 (i_16 - 16 20 33 )
Partition 1, base 1 (aux_17 - 17 23 26 )
Partition 3, base 2 (q_22(D) - 22 )


Partition map 

Partition 0 (i_16 - 16 )
Partition 1 (aux_17 - 17 )
Partition 2 (i_20 - 20 )
Partition 3 (q_22(D) - 22 )
Partition 4 (aux_23 - 23 )
Partition 5 (aux_26 - 26 )
Partition 6 (i_33 - 33 )


Conflict graph:

After sorting:
Sorted Coalesce list:
(2147483646, 0) i_16 <-> i_20
(2147483646, 0) i_16 <-> i_33
(2147483646, 0) aux_17 <-> aux_23
(2147483646, 0) aux_17 <-> aux_26

Partition map 

Partition 0 (i_16 - 16 )
Partition 1 (aux_17 - 17 )
Partition 2 (i_20 - 20 )
Partition 3 (q_22(D) - 22 )
Partition 4 (aux_23 - 23 )
Partition 5 (aux_26 - 26 )
Partition 6 (i_33 - 33 )

Coalesce list: (16)i_16 & (20)i_20 [map: 0, 2] : Success -> 0
Coalesce list: (16)i_16 & (33)i_33 [map: 0, 6] : Success -> 0
Coalesce list: (17)aux_17 & (23)aux_23 [map: 1, 4] : Success -> 1
Coalesce list: (17)aux_17 & (26)aux_26 [map: 1, 5] : Success -> 1
After Coalescing:

Partition map 

Partition 0 (_1 - 1 )
Partition 1 (_2 - 2 )
Partition 2 (_3 - 3 )
Partition 3 (_4 - 4 )
Partition 4 (_5 - 5 )
Partition 5 (_6 - 6 )
Partition 6 (_7 - 7 )
Partition 7 (_8 - 8 )
Partition 8 (_9 - 9 )
Partition 9 (_10 - 10 )
Partition 10 (_11 - 11 )
Partition 11 (_12 - 12 )
Partition 12 (_13 - 13 )
Partition 13 (_14 - 14 )
Partition 14 (_15 - 15 )
Partition 15 (i_16 - 16 20 33 )
Partition 16 (aux_17 - 17 23 26 )
Partition 17 (q_22(D) - 22 )
Partition 18 (aux_28 - 28 )
Partition 19 (_36 - 36 )
Partition 20 (_37 - 37 )
Partition 21 (_38 - 38 )
Partition 22 (_39 - 39 )
Partition 23 (_40 - 40 )
Partition 24 (_41 - 41 )
Partition 25 (_42 - 42 )
Partition 26 (_43 - 43 )
Partition 27 (_44 - 44 )
Partition 28 (_45 - 45 )
Partition 29 (_46 - 46 )
Partition 30 (_47 - 47 )
Partition 31 (_61 - 61 )
Partition 32 (_62 - 62 )
Partition 33 (_63 - 63 )
Partition 34 (_64 - 64 )
Partition 35 (_65 - 65 )
Partition 36 (_66 - 66 )
Partition 37 (_67 - 67 )
Partition 38 (_68 - 68 )
Partition 39 (_69 - 69 )
Partition 40 (_70 - 70 )
Partition 41 (_71 - 71 )
Partition 42 (_72 - 72 )
Partition 43 (_73 - 73 )
Partition 44 (_74 - 74 )
Partition 45 (_75 - 75 )
Partition 46 (_76 - 76 )
Partition 47 (_77 - 77 )
Partition 48 (_78 - 78 )
Partition 49 (_79 - 79 )
Partition 50 (_80 - 80 )
Partition 51 (_81 - 81 )
Partition 52 (_82 - 82 )
Partition 53 (_83 - 83 )
Partition 54 (_84 - 84 )
Partition 55 (_85 - 85 )
Partition 56 (_86 - 86 )
Partition 57 (_87 - 87 )
Partition 58 (_88 - 88 )
Partition 59 (_89 - 89 )
Partition 60 (_90 - 90 )
Partition 61 (_91 - 91 )
Partition 62 (_92 - 92 )
Partition 63 (_93 - 93 )
Partition 64 (_94 - 94 )
Partition 65 (_95 - 95 )
Partition 66 (_96 - 96 )
Partition 67 (_97 - 97 )
Partition 68 (_98 - 98 )
Partition 69 (_99 - 99 )
Partition 70 (_100 - 100 )
Partition 71 (_101 - 101 )
Partition 72 (_102 - 102 )
Partition 73 (_103 - 103 )
Partition 74 (_104 - 104 )
Partition 75 (_105 - 105 )
Partition 76 (_106 - 106 )
Partition 77 (_107 - 107 )
Partition 78 (_108 - 108 )
Partition 79 (_109 - 109 )
Partition 80 (_110 - 110 )
Partition 81 (_111 - 111 )
Partition 82 (_112 - 112 )
Partition 83 (_113 - 113 )
Partition 84 (_114 - 114 )
Partition 85 (_115 - 115 )
Partition 86 (_116 - 116 )
Partition 87 (_117 - 117 )
Partition 88 (_118 - 118 )
Partition 89 (_119 - 119 )
Partition 90 (_120 - 120 )

makeSenL (struct queryCDT * q)
{
  struct TNodeS * aux;
  int i;
  struct TNodeS * aux;
  int _1;
  long unsigned int _2;
  struct TSensor * _3;
  long unsigned int _4;
  long unsigned int _5;
  struct TSensor * _6;
  long unsigned int _7;
  long unsigned int _8;
  struct TSensor * _9;
  struct TNodeS * _10;
  struct TNodeS * _11;
  struct TNodeS * _12;
  long unsigned int _13;
  struct TNodeS * _14;
  long unsigned int _15;
  size_t * _36;
  struct TSensor * * _37;
  size_t * _38;
  size_t * _39;
  struct TNodeS * * _40;
  struct TNodeS * * _41;
  struct TNodeS * * _42;
  struct TNodeS * * _43;
  size_t * _44;
  struct TNodeS * * _45;
  size_t * _46;
  struct Nsensor * * _47;
  unsigned long _61;
  unsigned long _62;
  unsigned long _63;
  signed char * _64;
  signed char _65;
  unsigned long _66;
  unsigned long _67;
  unsigned long _68;
  signed char * _69;
  signed char _70;
  unsigned long _71;
  unsigned long _72;
  unsigned long _73;
  signed char * _74;
  signed char _75;
  unsigned long _76;
  unsigned long _77;
  unsigned long _78;
  signed char * _79;
  signed char _80;
  unsigned long _81;
  unsigned long _82;
  unsigned long _83;
  signed char * _84;
  signed char _85;
  unsigned long _86;
  unsigned long _87;
  unsigned long _88;
  signed char * _89;
  signed char _90;
  unsigned long _91;
  unsigned long _92;
  unsigned long _93;
  signed char * _94;
  signed char _95;
  unsigned long _96;
  unsigned long _97;
  unsigned long _98;
  signed char * _99;
  signed char _100;
  unsigned long _101;
  unsigned long _102;
  unsigned long _103;
  signed char * _104;
  signed char _105;
  unsigned long _106;
  unsigned long _107;
  unsigned long _108;
  signed char * _109;
  signed char _110;
  unsigned long _111;
  unsigned long _112;
  unsigned long _113;
  signed char * _114;
  signed char _115;
  unsigned long _116;
  unsigned long _117;
  unsigned long _118;
  signed char * _119;
  signed char _120;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  i_20 = 0;
  goto <bb 18>; [INV]
;;    succ:       18

;;   basic block 3, loop depth 1
;;    pred:       18
  aux_28 = malloc (24);
  if (aux_28 == 0B)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]
;;    succ:       4
;;                5

;;   basic block 4, loop depth 0
;;    pred:       3
  perror ("Unable to allocate memory.");
  __builtin___asan_handle_no_return ();
  exit (1);
;;    succ:      

;;   basic block 5, loop depth 1
;;    pred:       3
  _1 = i_16 + 1;
  _2 = (long unsigned int) _1;
  _36 = &aux_28->ID;
  _61 = (unsigned long) _36;
  _62 = _61 >> 3;
  _63 = _62 + 2147450880;
  _64 = (signed char *) _63;
  _65 = *_64;
  if (_65 != 0)
    goto <bb 6>; [0.05%]
  else
    goto <bb 7>; [99.95%]
;;    succ:       7
;;                6

;;   basic block 6, loop depth 0
;;    pred:       5
  __builtin___asan_report_store8 (_61);
;;    succ:      

;;   basic block 7, loop depth 1
;;    pred:       5
  aux_28->ID = _2;
  _37 = &q_22(D)->sensorsID;
  _66 = (unsigned long) _37;
  _67 = _66 >> 3;
  _68 = _67 + 2147450880;
  _69 = (signed char *) _68;
  _70 = *_69;
  if (_70 != 0)
    goto <bb 8>; [0.05%]
  else
    goto <bb 9>; [99.95%]
;;    succ:       9
;;                8

;;   basic block 8, loop depth 0
;;    pred:       7
  __builtin___asan_report_load8 (_66);
;;    succ:      

;;   basic block 9, loop depth 1
;;    pred:       7
  _3 = q_22(D)->sensorsID;
  _4 = (long unsigned int) i_16;
  _5 = _4 * 80;
  _6 = _3 + _5;
  _38 = &_6->total;
  _71 = (unsigned long) _38;
  _72 = _71 >> 3;
  _73 = _72 + 2147450880;
  _74 = (signed char *) _73;
  _75 = *_74;
  if (_75 != 0)
    goto <bb 10>; [0.05%]
  else
    goto <bb 11>; [99.95%]
;;    succ:       11
;;                10

;;   basic block 10, loop depth 0
;;    pred:       9
  __builtin___asan_report_load8 (_71);
;;    succ:      

;;   basic block 11, loop depth 1
;;    pred:       9
  _7 = _6->total;
  _39 = &aux_28->pedestrians;
  _76 = (unsigned long) _39;
  _77 = _76 >> 3;
  _78 = _77 + 2147450880;
  _79 = (signed char *) _78;
  _80 = *_79;
  if (_80 != 0)
    goto <bb 12>; [0.05%]
  else
    goto <bb 13>; [99.95%]
;;    succ:       13
;;                12

;;   basic block 12, loop depth 0
;;    pred:       11
  __builtin___asan_report_store8 (_76);
;;    succ:      

;;   basic block 13, loop depth 1
;;    pred:       11
  aux_28->pedestrians = _7;
  _8 = (long unsigned int) i_16;
  _9 = q_22(D)->sensorsID;
  _40 = &q_22(D)->sensorsP;
  _81 = (unsigned long) _40;
  _82 = _81 >> 3;
  _83 = _82 + 2147450880;
  _84 = (signed char *) _83;
  _85 = *_84;
  if (_85 != 0)
    goto <bb 14>; [0.05%]
  else
    goto <bb 15>; [99.95%]
;;    succ:       15
;;                14

;;   basic block 14, loop depth 0
;;    pred:       13
  __builtin___asan_report_load8 (_81);
;;    succ:      

;;   basic block 15, loop depth 1
;;    pred:       13
  _10 = q_22(D)->sensorsP;
  _11 = makeSenLRec (_10, aux_28, _9, _8);
  _41 = &q_22(D)->sensorsP;
  _86 = (unsigned long) _41;
  _87 = _86 >> 3;
  _88 = _87 + 2147450880;
  _89 = (signed char *) _88;
  _90 = *_89;
  if (_90 != 0)
    goto <bb 16>; [0.05%]
  else
    goto <bb 17>; [99.95%]
;;    succ:       17
;;                16

;;   basic block 16, loop depth 0
;;    pred:       15
  __builtin___asan_report_store8 (_86);
;;    succ:      

;;   basic block 17, loop depth 1
;;    pred:       15
  q_22(D)->sensorsP = _11;
  i_33 = i_16 + 1;
;;    succ:       18

;;   basic block 18, loop depth 1
;;    pred:       2
;;                17
  # i_16 = PHI <i_20(2), i_33(17)>
  if (i_16 <= 85)
    goto <bb 3>; [INV]
  else
    goto <bb 19>; [INV]
;;    succ:       3
;;                19

;;   basic block 19, loop depth 0
;;    pred:       18
  _42 = &q_22(D)->sensorsP;
  _91 = (unsigned long) _42;
  _92 = _91 >> 3;
  _93 = _92 + 2147450880;
  _94 = (signed char *) _93;
  _95 = *_94;
  if (_95 != 0)
    goto <bb 20>; [0.05%]
  else
    goto <bb 21>; [99.95%]
;;    succ:       21
;;                20

;;   basic block 20, loop depth 0
;;    pred:       19
  __builtin___asan_report_load8 (_91);
;;    succ:      

;;   basic block 21, loop depth 0
;;    pred:       19
  aux_23 = q_22(D)->sensorsP;
  goto <bb 33>; [INV]
;;    succ:       33

;;   basic block 22, loop depth 1
;;    pred:       33
  _43 = &q_22(D)->sensorsP;
  _96 = (unsigned long) _43;
  _97 = _96 >> 3;
  _98 = _97 + 2147450880;
  _99 = (signed char *) _98;
  _100 = *_99;
  if (_100 != 0)
    goto <bb 23>; [0.05%]
  else
    goto <bb 24>; [99.95%]
;;    succ:       24
;;                23

;;   basic block 23, loop depth 0
;;    pred:       22
  __builtin___asan_report_load8 (_96);
;;    succ:      

;;   basic block 24, loop depth 1
;;    pred:       22
  _12 = q_22(D)->sensorsP;
  _44 = &_12->ID;
  _101 = (unsigned long) _44;
  _102 = _101 >> 3;
  _103 = _102 + 2147450880;
  _104 = (signed char *) _103;
  _105 = *_104;
  if (_105 != 0)
    goto <bb 25>; [0.05%]
  else
    goto <bb 26>; [99.95%]
;;    succ:       26
;;                25

;;   basic block 25, loop depth 0
;;    pred:       24
  __builtin___asan_report_load8 (_101);
;;    succ:      

;;   basic block 26, loop depth 1
;;    pred:       24
  _13 = _12->ID;
  printf ("ID:%lu\t", _13);
  _45 = &q_22(D)->sensorsP;
  _106 = (unsigned long) _45;
  _107 = _106 >> 3;
  _108 = _107 + 2147450880;
  _109 = (signed char *) _108;
  _110 = *_109;
  if (_110 != 0)
    goto <bb 27>; [0.05%]
  else
    goto <bb 28>; [99.95%]
;;    succ:       28
;;                27

;;   basic block 27, loop depth 0
;;    pred:       26
  __builtin___asan_report_load8 (_106);
;;    succ:      

;;   basic block 28, loop depth 1
;;    pred:       26
  _14 = q_22(D)->sensorsP;
  _46 = &_14->pedestrians;
  _111 = (unsigned long) _46;
  _112 = _111 >> 3;
  _113 = _112 + 2147450880;
  _114 = (signed char *) _113;
  _115 = *_114;
  if (_115 != 0)
    goto <bb 29>; [0.05%]
  else
    goto <bb 30>; [99.95%]
;;    succ:       30
;;                29

;;   basic block 29, loop depth 0
;;    pred:       28
  __builtin___asan_report_load8 (_111);
;;    succ:      

;;   basic block 30, loop depth 1
;;    pred:       28
  _15 = _14->pedestrians;
  printf ("Name:%lu\t", _15);
  _47 = &aux_17->tail;
  _116 = (unsigned long) _47;
  _117 = _116 >> 3;
  _118 = _117 + 2147450880;
  _119 = (signed char *) _118;
  _120 = *_119;
  if (_120 != 0)
    goto <bb 31>; [0.05%]
  else
    goto <bb 32>; [99.95%]
;;    succ:       32
;;                31

;;   basic block 31, loop depth 0
;;    pred:       30
  __builtin___asan_report_load8 (_116);
;;    succ:      

;;   basic block 32, loop depth 1
;;    pred:       30
  aux_26 = aux_17->tail;
;;    succ:       33

;;   basic block 33, loop depth 1
;;    pred:       21
;;                32
  # aux_17 = PHI <aux_23(21), aux_26(32)>
  if (aux_17 != 0B)
    goto <bb 22>; [INV]
  else
    goto <bb 34>; [INV]
;;    succ:       22
;;                34

;;   basic block 34, loop depth 0
;;    pred:       33
  return;
;;    succ:       EXIT

}


Partition 2: size 8 align 8
	aux_28
Partition 1: size 8 align 8
	aux_17
Partition 0: size 4 align 4
	i_16

;; Generating RTL for gimple basic block 2

;; i_20 = 0;

(insn 6 5 0 (set (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [13 i+0 S4 A32])
        (const_int 0 [0])) "queryTAD.c":108:13 -1
     (nil))

;; Generating RTL for gimple basic block 3

;; aux_28 = malloc (24);

(insn 10 9 11 (set (reg:DI 5 di)
        (const_int 24 [0x18])) "queryTAD.c":109:23 -1
     (nil))

(call_insn 11 10 12 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x7fc58ee82000 malloc>) [0 __builtin_malloc S1 A8])
            (const_int 0 [0]))) "queryTAD.c":109:23 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

(insn 12 11 13 (set (reg/f:DI 169)
        (reg:DI 0 ax)) "queryTAD.c":109:23 -1
     (expr_list:REG_NOALIAS (reg/f:DI 169)
        (nil)))

(insn 13 12 0 (set (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [8 aux+0 S8 A64])
        (reg/f:DI 169)) "queryTAD.c":109:23 -1
     (nil))

;; if (aux_28 == 0B)

(insn 14 13 15 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [8 aux+0 S8 A64])
            (const_int 0 [0]))) "queryTAD.c":110:12 -1
     (nil))

(jump_insn 15 14 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "queryTAD.c":110:12 -1
     (nil))

;; Generating RTL for gimple basic block 4

;; perror ("Unable to allocate memory.");

(insn 17 16 18 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x7fc58ec2dcf0 *.LC0>)) "queryTAD.c":111:13 -1
     (nil))

(call_insn 18 17 0 (call (mem:QI (symbol_ref:DI ("perror") [flags 0x41]  <function_decl 0x7fc58ef5f500 perror>) [0 perror S1 A8])
        (const_int 0 [0])) "queryTAD.c":111:13 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

;; __builtin___asan_handle_no_return ();

(call_insn 19 18 0 (call (mem:QI (symbol_ref:DI ("__asan_handle_no_return") [flags 0x41]  <function_decl 0x7fc58eead800 __builtin___asan_handle_no_return>) [0 __builtin___asan_handle_no_return S1 A8])
        (const_int 0 [0])) "queryTAD.c":112:13 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))

;; exit (1);

(insn 20 19 21 (set (reg:SI 5 di)
        (const_int 1 [0x1])) "queryTAD.c":112:13 -1
     (nil))

(call_insn 21 20 22 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x7fc58ee7c900 exit>) [0 __builtin_exit S1 A8])
        (const_int 0 [0])) "queryTAD.c":112:13 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))

(barrier 22 21 0)

;; Generating RTL for gimple basic block 5

;; 

(code_label 23 22 24 76 (nil) [0 uses])

(note 24 23 0 NOTE_INSN_BASIC_BLOCK)

;; _1 = i_16 + 1;

(insn 25 24 26 (set (reg:SI 170)
        (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [13 i+0 S4 A32])) "queryTAD.c":114:20 -1
     (nil))

(insn 26 25 0 (parallel [
            (set (reg:SI 82 [ _1 ])
                (plus:SI (reg:SI 170)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":114:20 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])) [13 i+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))

;; _2 = (long unsigned int) _1;

(insn 27 26 0 (set (reg:DI 83 [ _2 ])
        (sign_extend:DI (reg:SI 82 [ _1 ]))) "queryTAD.c":114:20 -1
     (nil))

;; _36 = &aux_28->ID;

(insn 28 27 0 (set (reg/f:DI 97 [ _36 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [8 aux+0 S8 A64])) "queryTAD.c":114:17 -1
     (nil))

;; _61 = (unsigned long) _36;

(insn 29 28 0 (set (reg:DI 109 [ _61 ])
        (reg/f:DI 97 [ _36 ])) "queryTAD.c":114:17 -1
     (nil))

;; _62 = _61 >> 3;

(insn 30 29 0 (parallel [
            (set (reg:DI 110 [ _62 ])
                (lshiftrt:DI (reg:DI 109 [ _61 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":114:17 -1
     (nil))

;; _63 = _62 + 2147450880;

(insn 31 30 0 (parallel [
            (set (reg:DI 111 [ _63 ])
                (plus:DI (reg:DI 110 [ _62 ])
                    (const_int 2147450880 [0x7fff8000])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":114:17 -1
     (nil))

;; _64 = (signed char *) _63;

(insn 32 31 0 (set (reg/f:DI 112 [ _64 ])
        (reg:DI 111 [ _63 ])) "queryTAD.c":114:17 -1
     (nil))

;; _65 = *_64;

(insn 33 32 0 (set (reg:QI 113 [ _65 ])
        (mem:QI (reg/f:DI 112 [ _64 ]) [10 *_64+0 S1 A8])) "queryTAD.c":114:17 -1
     (nil))

;; if (_65 != 0)

(insn 34 33 35 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 113 [ _65 ])
            (const_int 0 [0]))) "queryTAD.c":114:17 -1
     (nil))

(jump_insn 35 34 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "queryTAD.c":114:17 -1
     (nil))

;; Generating RTL for gimple basic block 6

;; __builtin___asan_report_store8 (_61);

(insn 37 36 38 (set (reg:DI 5 di)
        (reg:DI 109 [ _61 ])) "queryTAD.c":114:17 -1
     (nil))

(call_insn 38 37 39 (call (mem:QI (symbol_ref:DI ("__asan_report_store8") [flags 0x41]  <function_decl 0x7fc58eea5f00 __builtin___asan_report_store8>) [0 __builtin___asan_report_store8 S1 A8])
        (const_int 0 [0])) "queryTAD.c":114:17 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

(barrier 39 38 0)

;; Generating RTL for gimple basic block 7

;; 

(code_label 40 39 41 77 (nil) [0 uses])

(note 41 40 0 NOTE_INSN_BASIC_BLOCK)

;; aux_28->ID = _2;

(insn 42 41 43 (set (reg/f:DI 171)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [8 aux+0 S8 A64])) "queryTAD.c":114:17 -1
     (nil))

(insn 43 42 0 (set (mem:DI (reg/f:DI 171) [2 aux_28->ID+0 S8 A64])
        (reg:DI 83 [ _2 ])) "queryTAD.c":114:17 -1
     (nil))

;; _37 = &q_22(D)->sensorsID;

(insn 44 43 45 (set (reg/f:DI 172)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [11 q+0 S8 A64])) "queryTAD.c":115:29 -1
     (nil))

(insn 45 44 0 (parallel [
            (set (reg/f:DI 98 [ _37 ])
                (plus:DI (reg/f:DI 172)
                    (const_int 24 [0x18])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":115:29 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -40 [0xffffffffffffffd8])) [11 q+0 S8 A64])
            (const_int 24 [0x18]))
        (nil)))

;; _66 = (unsigned long) _37;

(insn 46 45 0 (set (reg:DI 114 [ _66 ])
        (reg/f:DI 98 [ _37 ])) "queryTAD.c":115:29 -1
     (nil))

;; _67 = _66 >> 3;

(insn 47 46 0 (parallel [
            (set (reg:DI 115 [ _67 ])
                (lshiftrt:DI (reg:DI 114 [ _66 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":115:29 -1
     (nil))

;; _68 = _67 + 2147450880;

(insn 48 47 0 (parallel [
            (set (reg:DI 116 [ _68 ])
                (plus:DI (reg:DI 115 [ _67 ])
                    (const_int 2147450880 [0x7fff8000])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":115:29 -1
     (nil))

;; _69 = (signed char *) _68;

(insn 49 48 0 (set (reg/f:DI 117 [ _69 ])
        (reg:DI 116 [ _68 ])) "queryTAD.c":115:29 -1
     (nil))

;; _70 = *_69;

(insn 50 49 0 (set (reg:QI 118 [ _70 ])
        (mem:QI (reg/f:DI 117 [ _69 ]) [10 *_69+0 S1 A8])) "queryTAD.c":115:29 -1
     (nil))

;; if (_70 != 0)

(insn 51 50 52 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 118 [ _70 ])
            (const_int 0 [0]))) "queryTAD.c":115:29 -1
     (nil))

(jump_insn 52 51 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "queryTAD.c":115:29 -1
     (nil))

;; Generating RTL for gimple basic block 8

;; __builtin___asan_report_load8 (_66);

(insn 54 53 55 (set (reg:DI 5 di)
        (reg:DI 114 [ _66 ])) "queryTAD.c":115:29 -1
     (nil))

(call_insn 55 54 56 (call (mem:QI (symbol_ref:DI ("__asan_report_load8") [flags 0x41]  <function_decl 0x7fc58eea5900 __builtin___asan_report_load8>) [0 __builtin___asan_report_load8 S1 A8])
        (const_int 0 [0])) "queryTAD.c":115:29 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

(barrier 56 55 0)

;; Generating RTL for gimple basic block 9

;; 

(code_label 57 56 58 78 (nil) [0 uses])

(note 58 57 0 NOTE_INSN_BASIC_BLOCK)

;; _3 = q_22(D)->sensorsID;

(insn 59 58 60 (set (reg/f:DI 173)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [11 q+0 S8 A64])) "queryTAD.c":115:29 -1
     (nil))

(insn 60 59 0 (set (reg/f:DI 84 [ _3 ])
        (mem/f:DI (plus:DI (reg/f:DI 173)
                (const_int 24 [0x18])) [7 q_22(D)->sensorsID+0 S8 A64])) "queryTAD.c":115:29 -1
     (nil))

;; _4 = (long unsigned int) i_16;

(insn 61 60 62 (set (reg:SI 174)
        (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [13 i+0 S4 A32])) "queryTAD.c":115:40 -1
     (nil))

(insn 62 61 0 (set (reg:DI 85 [ _4 ])
        (sign_extend:DI (reg:SI 174))) "queryTAD.c":115:40 -1
     (nil))

;; _5 = _4 * 80;

(insn 63 62 64 (set (reg:DI 175)
        (reg:DI 85 [ _4 ])) "queryTAD.c":115:40 -1
     (nil))

(insn 64 63 65 (parallel [
            (set (reg:DI 175)
                (ashift:DI (reg:DI 175)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":115:40 -1
     (nil))

(insn 65 64 66 (parallel [
            (set (reg:DI 175)
                (plus:DI (reg:DI 175)
                    (reg:DI 85 [ _4 ])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":115:40 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 85 [ _4 ])
            (const_int 5 [0x5]))
        (nil)))

(insn 66 65 67 (parallel [
            (set (reg:DI 176)
                (ashift:DI (reg:DI 175)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":115:40 -1
     (nil))

(insn 67 66 68 (set (reg:DI 175)
        (reg:DI 176)) "queryTAD.c":115:40 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 85 [ _4 ])
            (const_int 80 [0x50]))
        (nil)))

(insn 68 67 0 (set (reg:DI 86 [ _5 ])
        (reg:DI 175)) "queryTAD.c":115:40 -1
     (nil))

;; _6 = _3 + _5;

(insn 69 68 0 (parallel [
            (set (reg/f:DI 87 [ _6 ])
                (plus:DI (reg/f:DI 84 [ _3 ])
                    (reg:DI 86 [ _5 ])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":115:40 -1
     (nil))

;; _38 = &_6->total;

(insn 70 69 0 (set (reg/f:DI 99 [ _38 ])
        (reg/f:DI 87 [ _6 ])) "queryTAD.c":115:43 -1
     (nil))

;; _71 = (unsigned long) _38;

(insn 71 70 0 (set (reg:DI 119 [ _71 ])
        (reg/f:DI 99 [ _38 ])) "queryTAD.c":115:43 -1
     (nil))

;; _72 = _71 >> 3;

(insn 72 71 0 (parallel [
            (set (reg:DI 120 [ _72 ])
                (lshiftrt:DI (reg:DI 119 [ _71 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":115:43 -1
     (nil))

;; _73 = _72 + 2147450880;

(insn 73 72 0 (parallel [
            (set (reg:DI 121 [ _73 ])
                (plus:DI (reg:DI 120 [ _72 ])
                    (const_int 2147450880 [0x7fff8000])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":115:43 -1
     (nil))

;; _74 = (signed char *) _73;

(insn 74 73 0 (set (reg/f:DI 122 [ _74 ])
        (reg:DI 121 [ _73 ])) "queryTAD.c":115:43 -1
     (nil))

;; _75 = *_74;

(insn 75 74 0 (set (reg:QI 123 [ _75 ])
        (mem:QI (reg/f:DI 122 [ _74 ]) [10 *_74+0 S1 A8])) "queryTAD.c":115:43 -1
     (nil))

;; if (_75 != 0)

(insn 76 75 77 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 123 [ _75 ])
            (const_int 0 [0]))) "queryTAD.c":115:43 -1
     (nil))

(jump_insn 77 76 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "queryTAD.c":115:43 -1
     (nil))

;; Generating RTL for gimple basic block 10

;; __builtin___asan_report_load8 (_71);

(insn 79 78 80 (set (reg:DI 5 di)
        (reg:DI 119 [ _71 ])) "queryTAD.c":115:43 -1
     (nil))

(call_insn 80 79 81 (call (mem:QI (symbol_ref:DI ("__asan_report_load8") [flags 0x41]  <function_decl 0x7fc58eea5900 __builtin___asan_report_load8>) [0 __builtin___asan_report_load8 S1 A8])
        (const_int 0 [0])) "queryTAD.c":115:43 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

(barrier 81 80 0)

;; Generating RTL for gimple basic block 11

;; 

(code_label 82 81 83 79 (nil) [0 uses])

(note 83 82 0 NOTE_INSN_BASIC_BLOCK)

;; _7 = _6->total;

(insn 84 83 0 (set (reg:DI 88 [ _7 ])
        (mem:DI (reg/f:DI 87 [ _6 ]) [2 _6->total+0 S8 A64])) "queryTAD.c":115:43 -1
     (nil))

;; _39 = &aux_28->pedestrians;

(insn 85 84 86 (set (reg/f:DI 177)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [8 aux+0 S8 A64])) "queryTAD.c":115:26 -1
     (nil))

(insn 86 85 0 (parallel [
            (set (reg/f:DI 100 [ _39 ])
                (plus:DI (reg/f:DI 177)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":115:26 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [8 aux+0 S8 A64])
            (const_int 8 [0x8]))
        (nil)))

;; _76 = (unsigned long) _39;

(insn 87 86 0 (set (reg:DI 124 [ _76 ])
        (reg/f:DI 100 [ _39 ])) "queryTAD.c":115:26 -1
     (nil))

;; _77 = _76 >> 3;

(insn 88 87 0 (parallel [
            (set (reg:DI 125 [ _77 ])
                (lshiftrt:DI (reg:DI 124 [ _76 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":115:26 -1
     (nil))

;; _78 = _77 + 2147450880;

(insn 89 88 0 (parallel [
            (set (reg:DI 126 [ _78 ])
                (plus:DI (reg:DI 125 [ _77 ])
                    (const_int 2147450880 [0x7fff8000])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":115:26 -1
     (nil))

;; _79 = (signed char *) _78;

(insn 90 89 0 (set (reg/f:DI 127 [ _79 ])
        (reg:DI 126 [ _78 ])) "queryTAD.c":115:26 -1
     (nil))

;; _80 = *_79;

(insn 91 90 0 (set (reg:QI 128 [ _80 ])
        (mem:QI (reg/f:DI 127 [ _79 ]) [10 *_79+0 S1 A8])) "queryTAD.c":115:26 -1
     (nil))

;; if (_80 != 0)

(insn 92 91 93 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 128 [ _80 ])
            (const_int 0 [0]))) "queryTAD.c":115:26 -1
     (nil))

(jump_insn 93 92 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "queryTAD.c":115:26 -1
     (nil))

;; Generating RTL for gimple basic block 12

;; __builtin___asan_report_store8 (_76);

(insn 95 94 96 (set (reg:DI 5 di)
        (reg:DI 124 [ _76 ])) "queryTAD.c":115:26 -1
     (nil))

(call_insn 96 95 97 (call (mem:QI (symbol_ref:DI ("__asan_report_store8") [flags 0x41]  <function_decl 0x7fc58eea5f00 __builtin___asan_report_store8>) [0 __builtin___asan_report_store8 S1 A8])
        (const_int 0 [0])) "queryTAD.c":115:26 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

(barrier 97 96 0)

;; Generating RTL for gimple basic block 13

;; 

(code_label 98 97 99 80 (nil) [0 uses])

(note 99 98 0 NOTE_INSN_BASIC_BLOCK)

;; aux_28->pedestrians = _7;

(insn 100 99 101 (set (reg/f:DI 178)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [8 aux+0 S8 A64])) "queryTAD.c":115:26 -1
     (nil))

(insn 101 100 0 (set (mem:DI (plus:DI (reg/f:DI 178)
                (const_int 8 [0x8])) [2 aux_28->pedestrians+0 S8 A64])
        (reg:DI 88 [ _7 ])) "queryTAD.c":115:26 -1
     (nil))

;; _8 = (long unsigned int) i_16;

(insn 102 101 103 (set (reg:SI 179)
        (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [13 i+0 S4 A32])) "queryTAD.c":116:23 -1
     (nil))

(insn 103 102 0 (set (reg:DI 89 [ _8 ])
        (sign_extend:DI (reg:SI 179))) "queryTAD.c":116:23 -1
     (nil))

;; _9 = q_22(D)->sensorsID;

(insn 104 103 105 (set (reg/f:DI 180)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [11 q+0 S8 A64])) "queryTAD.c":116:23 -1
     (nil))

(insn 105 104 0 (set (reg/f:DI 90 [ _9 ])
        (mem/f:DI (plus:DI (reg/f:DI 180)
                (const_int 24 [0x18])) [7 q_22(D)->sensorsID+0 S8 A64])) "queryTAD.c":116:23 -1
     (nil))

;; _40 = &q_22(D)->sensorsP;

(insn 106 105 107 (set (reg/f:DI 181)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [11 q+0 S8 A64])) "queryTAD.c":116:23 -1
     (nil))

(insn 107 106 0 (parallel [
            (set (reg/f:DI 101 [ _40 ])
                (plus:DI (reg/f:DI 181)
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":116:23 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -40 [0xffffffffffffffd8])) [11 q+0 S8 A64])
            (const_int 32 [0x20]))
        (nil)))

;; _81 = (unsigned long) _40;

(insn 108 107 0 (set (reg:DI 129 [ _81 ])
        (reg/f:DI 101 [ _40 ])) "queryTAD.c":116:23 -1
     (nil))

;; _82 = _81 >> 3;

(insn 109 108 0 (parallel [
            (set (reg:DI 130 [ _82 ])
                (lshiftrt:DI (reg:DI 129 [ _81 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":116:23 -1
     (nil))

;; _83 = _82 + 2147450880;

(insn 110 109 0 (parallel [
            (set (reg:DI 131 [ _83 ])
                (plus:DI (reg:DI 130 [ _82 ])
                    (const_int 2147450880 [0x7fff8000])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":116:23 -1
     (nil))

;; _84 = (signed char *) _83;

(insn 111 110 0 (set (reg/f:DI 132 [ _84 ])
        (reg:DI 131 [ _83 ])) "queryTAD.c":116:23 -1
     (nil))

;; _85 = *_84;

(insn 112 111 0 (set (reg:QI 133 [ _85 ])
        (mem:QI (reg/f:DI 132 [ _84 ]) [10 *_84+0 S1 A8])) "queryTAD.c":116:23 -1
     (nil))

;; if (_85 != 0)

(insn 113 112 114 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 133 [ _85 ])
            (const_int 0 [0]))) "queryTAD.c":116:23 -1
     (nil))

(jump_insn 114 113 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "queryTAD.c":116:23 -1
     (nil))

;; Generating RTL for gimple basic block 14

;; __builtin___asan_report_load8 (_81);

(insn 116 115 117 (set (reg:DI 5 di)
        (reg:DI 129 [ _81 ])) "queryTAD.c":116:23 -1
     (nil))

(call_insn 117 116 118 (call (mem:QI (symbol_ref:DI ("__asan_report_load8") [flags 0x41]  <function_decl 0x7fc58eea5900 __builtin___asan_report_load8>) [0 __builtin___asan_report_load8 S1 A8])
        (const_int 0 [0])) "queryTAD.c":116:23 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

(barrier 118 117 0)

;; Generating RTL for gimple basic block 15

;; 

(code_label 119 118 120 81 (nil) [0 uses])

(note 120 119 0 NOTE_INSN_BASIC_BLOCK)

;; _10 = q_22(D)->sensorsP;

(insn 121 120 122 (set (reg/f:DI 182)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [11 q+0 S8 A64])) "queryTAD.c":116:23 -1
     (nil))

(insn 122 121 0 (set (reg/f:DI 91 [ _10 ])
        (mem/f:DI (plus:DI (reg/f:DI 182)
                (const_int 32 [0x20])) [8 q_22(D)->sensorsP+0 S8 A64])) "queryTAD.c":116:23 -1
     (nil))

;; _11 = makeSenLRec (_10, aux_28, _9, _8);

(insn 123 122 124 (set (reg:DI 183)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [8 aux+0 S8 A64])) "queryTAD.c":116:23 -1
     (nil))

(insn 124 123 125 (set (reg:DI 2 cx)
        (reg:DI 89 [ _8 ])) "queryTAD.c":116:23 -1
     (nil))

(insn 125 124 126 (set (reg:DI 1 dx)
        (reg/f:DI 90 [ _9 ])) "queryTAD.c":116:23 -1
     (nil))

(insn 126 125 127 (set (reg:DI 4 si)
        (reg:DI 183)) "queryTAD.c":116:23 -1
     (nil))

(insn 127 126 128 (set (reg:DI 5 di)
        (reg/f:DI 91 [ _10 ])) "queryTAD.c":116:23 -1
     (nil))

(call_insn 128 127 129 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("makeSenLRec") [flags 0x3]  <function_decl 0x7fc58ebf9e00 makeSenLRec>) [0 makeSenLRec S1 A8])
            (const_int 0 [0]))) "queryTAD.c":116:23 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))

(insn 129 128 0 (set (reg/f:DI 92 [ _11 ])
        (reg:DI 0 ax)) "queryTAD.c":116:23 -1
     (nil))

;; _41 = &q_22(D)->sensorsP;

(insn 130 129 131 (set (reg/f:DI 184)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [11 q+0 S8 A64])) "queryTAD.c":116:21 -1
     (nil))

(insn 131 130 0 (parallel [
            (set (reg/f:DI 102 [ _41 ])
                (plus:DI (reg/f:DI 184)
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":116:21 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -40 [0xffffffffffffffd8])) [11 q+0 S8 A64])
            (const_int 32 [0x20]))
        (nil)))

;; _86 = (unsigned long) _41;

(insn 132 131 0 (set (reg:DI 134 [ _86 ])
        (reg/f:DI 102 [ _41 ])) "queryTAD.c":116:21 -1
     (nil))

;; _87 = _86 >> 3;

(insn 133 132 0 (parallel [
            (set (reg:DI 135 [ _87 ])
                (lshiftrt:DI (reg:DI 134 [ _86 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":116:21 -1
     (nil))

;; _88 = _87 + 2147450880;

(insn 134 133 0 (parallel [
            (set (reg:DI 136 [ _88 ])
                (plus:DI (reg:DI 135 [ _87 ])
                    (const_int 2147450880 [0x7fff8000])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":116:21 -1
     (nil))

;; _89 = (signed char *) _88;

(insn 135 134 0 (set (reg/f:DI 137 [ _89 ])
        (reg:DI 136 [ _88 ])) "queryTAD.c":116:21 -1
     (nil))

;; _90 = *_89;

(insn 136 135 0 (set (reg:QI 138 [ _90 ])
        (mem:QI (reg/f:DI 137 [ _89 ]) [10 *_89+0 S1 A8])) "queryTAD.c":116:21 -1
     (nil))

;; if (_90 != 0)

(insn 137 136 138 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 138 [ _90 ])
            (const_int 0 [0]))) "queryTAD.c":116:21 -1
     (nil))

(jump_insn 138 137 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "queryTAD.c":116:21 -1
     (nil))

;; Generating RTL for gimple basic block 16

;; __builtin___asan_report_store8 (_86);

(insn 140 139 141 (set (reg:DI 5 di)
        (reg:DI 134 [ _86 ])) "queryTAD.c":116:21 -1
     (nil))

(call_insn 141 140 142 (call (mem:QI (symbol_ref:DI ("__asan_report_store8") [flags 0x41]  <function_decl 0x7fc58eea5f00 __builtin___asan_report_store8>) [0 __builtin___asan_report_store8 S1 A8])
        (const_int 0 [0])) "queryTAD.c":116:21 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

(barrier 142 141 0)

;; Generating RTL for gimple basic block 17

;; 

(code_label 143 142 144 82 (nil) [0 uses])

(note 144 143 0 NOTE_INSN_BASIC_BLOCK)

;; q_22(D)->sensorsP = _11;

(insn 145 144 146 (set (reg/f:DI 185)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [11 q+0 S8 A64])) "queryTAD.c":116:21 -1
     (nil))

(insn 146 145 0 (set (mem/f:DI (plus:DI (reg/f:DI 185)
                (const_int 32 [0x20])) [8 q_22(D)->sensorsP+0 S8 A64])
        (reg/f:DI 92 [ _11 ])) "queryTAD.c":116:21 -1
     (nil))

;; i_33 = i_16 + 1;

(insn 147 146 0 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                        (const_int -20 [0xffffffffffffffec])) [13 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                            (const_int -20 [0xffffffffffffffec])) [13 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":108:30 -1
     (nil))

;; Generating RTL for gimple basic block 18

;; 

(code_label 148 147 149 75 (nil) [0 uses])

(note 149 148 0 NOTE_INSN_BASIC_BLOCK)

;; if (i_16 <= 85)

(insn 153 149 154 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])) [13 i+0 S4 A32])
            (const_int 85 [0x55]))) "queryTAD.c":108:5 -1
     (nil))

(jump_insn 154 153 0 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 150)
            (pc))) "queryTAD.c":108:5 -1
     (nil))

;; Generating RTL for gimple basic block 19

;; _42 = &q_22(D)->sensorsP;

(insn 156 155 157 (set (reg/f:DI 186)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [11 q+0 S8 A64])) "queryTAD.c":118:14 -1
     (nil))

(insn 157 156 0 (parallel [
            (set (reg/f:DI 103 [ _42 ])
                (plus:DI (reg/f:DI 186)
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":118:14 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -40 [0xffffffffffffffd8])) [11 q+0 S8 A64])
            (const_int 32 [0x20]))
        (nil)))

;; _91 = (unsigned long) _42;

(insn 158 157 0 (set (reg:DI 139 [ _91 ])
        (reg/f:DI 103 [ _42 ])) "queryTAD.c":118:14 -1
     (nil))

;; _92 = _91 >> 3;

(insn 159 158 0 (parallel [
            (set (reg:DI 140 [ _92 ])
                (lshiftrt:DI (reg:DI 139 [ _91 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":118:14 -1
     (nil))

;; _93 = _92 + 2147450880;

(insn 160 159 0 (parallel [
            (set (reg:DI 141 [ _93 ])
                (plus:DI (reg:DI 140 [ _92 ])
                    (const_int 2147450880 [0x7fff8000])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":118:14 -1
     (nil))

;; _94 = (signed char *) _93;

(insn 161 160 0 (set (reg/f:DI 142 [ _94 ])
        (reg:DI 141 [ _93 ])) "queryTAD.c":118:14 -1
     (nil))

;; _95 = *_94;

(insn 162 161 0 (set (reg:QI 143 [ _95 ])
        (mem:QI (reg/f:DI 142 [ _94 ]) [10 *_94+0 S1 A8])) "queryTAD.c":118:14 -1
     (nil))

;; if (_95 != 0)

(insn 163 162 164 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 143 [ _95 ])
            (const_int 0 [0]))) "queryTAD.c":118:14 -1
     (nil))

(jump_insn 164 163 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "queryTAD.c":118:14 -1
     (nil))

;; Generating RTL for gimple basic block 20

;; __builtin___asan_report_load8 (_91);

(insn 166 165 167 (set (reg:DI 5 di)
        (reg:DI 139 [ _91 ])) "queryTAD.c":118:14 -1
     (nil))

(call_insn 167 166 168 (call (mem:QI (symbol_ref:DI ("__asan_report_load8") [flags 0x41]  <function_decl 0x7fc58eea5900 __builtin___asan_report_load8>) [0 __builtin___asan_report_load8 S1 A8])
        (const_int 0 [0])) "queryTAD.c":118:14 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

(barrier 168 167 0)

;; Generating RTL for gimple basic block 21

;; 

(code_label 169 168 170 84 (nil) [0 uses])

(note 170 169 0 NOTE_INSN_BASIC_BLOCK)

;; aux_23 = q_22(D)->sensorsP;

(insn 171 170 172 (set (reg/f:DI 187)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [11 q+0 S8 A64])) "queryTAD.c":118:14 -1
     (nil))

(insn 172 171 173 (set (reg/f:DI 188)
        (mem/f:DI (plus:DI (reg/f:DI 187)
                (const_int 32 [0x20])) [8 q_22(D)->sensorsP+0 S8 A64])) "queryTAD.c":118:14 -1
     (nil))

(insn 173 172 0 (set (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [8 aux+0 S8 A64])
        (reg/f:DI 188)) "queryTAD.c":118:14 -1
     (nil))

;; Generating RTL for gimple basic block 22

;; _43 = &q_22(D)->sensorsP;

(insn 177 176 178 (set (reg/f:DI 189)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [11 q+0 S8 A64])) "queryTAD.c":120:29 -1
     (nil))

(insn 178 177 0 (parallel [
            (set (reg/f:DI 104 [ _43 ])
                (plus:DI (reg/f:DI 189)
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":120:29 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -40 [0xffffffffffffffd8])) [11 q+0 S8 A64])
            (const_int 32 [0x20]))
        (nil)))

;; _96 = (unsigned long) _43;

(insn 179 178 0 (set (reg:DI 144 [ _96 ])
        (reg/f:DI 104 [ _43 ])) "queryTAD.c":120:29 -1
     (nil))

;; _97 = _96 >> 3;

(insn 180 179 0 (parallel [
            (set (reg:DI 145 [ _97 ])
                (lshiftrt:DI (reg:DI 144 [ _96 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":120:29 -1
     (nil))

;; _98 = _97 + 2147450880;

(insn 181 180 0 (parallel [
            (set (reg:DI 146 [ _98 ])
                (plus:DI (reg:DI 145 [ _97 ])
                    (const_int 2147450880 [0x7fff8000])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":120:29 -1
     (nil))

;; _99 = (signed char *) _98;

(insn 182 181 0 (set (reg/f:DI 147 [ _99 ])
        (reg:DI 146 [ _98 ])) "queryTAD.c":120:29 -1
     (nil))

;; _100 = *_99;

(insn 183 182 0 (set (reg:QI 148 [ _100 ])
        (mem:QI (reg/f:DI 147 [ _99 ]) [10 *_99+0 S1 A8])) "queryTAD.c":120:29 -1
     (nil))

;; if (_100 != 0)

(insn 184 183 185 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 148 [ _100 ])
            (const_int 0 [0]))) "queryTAD.c":120:29 -1
     (nil))

(jump_insn 185 184 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "queryTAD.c":120:29 -1
     (nil))

;; Generating RTL for gimple basic block 23

;; __builtin___asan_report_load8 (_96);

(insn 187 186 188 (set (reg:DI 5 di)
        (reg:DI 144 [ _96 ])) "queryTAD.c":120:29 -1
     (nil))

(call_insn 188 187 189 (call (mem:QI (symbol_ref:DI ("__asan_report_load8") [flags 0x41]  <function_decl 0x7fc58eea5900 __builtin___asan_report_load8>) [0 __builtin___asan_report_load8 S1 A8])
        (const_int 0 [0])) "queryTAD.c":120:29 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

(barrier 189 188 0)

;; Generating RTL for gimple basic block 24

;; 

(code_label 190 189 191 86 (nil) [0 uses])

(note 191 190 0 NOTE_INSN_BASIC_BLOCK)

;; _12 = q_22(D)->sensorsP;

(insn 192 191 193 (set (reg/f:DI 190)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [11 q+0 S8 A64])) "queryTAD.c":120:29 -1
     (nil))

(insn 193 192 0 (set (reg/f:DI 93 [ _12 ])
        (mem/f:DI (plus:DI (reg/f:DI 190)
                (const_int 32 [0x20])) [8 q_22(D)->sensorsP+0 S8 A64])) "queryTAD.c":120:29 -1
     (nil))

;; _44 = &_12->ID;

(insn 194 193 0 (set (reg/f:DI 105 [ _44 ])
        (reg/f:DI 93 [ _12 ])) "queryTAD.c":120:9 -1
     (nil))

;; _101 = (unsigned long) _44;

(insn 195 194 0 (set (reg:DI 149 [ _101 ])
        (reg/f:DI 105 [ _44 ])) "queryTAD.c":120:9 -1
     (nil))

;; _102 = _101 >> 3;

(insn 196 195 0 (parallel [
            (set (reg:DI 150 [ _102 ])
                (lshiftrt:DI (reg:DI 149 [ _101 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":120:9 -1
     (nil))

;; _103 = _102 + 2147450880;

(insn 197 196 0 (parallel [
            (set (reg:DI 151 [ _103 ])
                (plus:DI (reg:DI 150 [ _102 ])
                    (const_int 2147450880 [0x7fff8000])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":120:9 -1
     (nil))

;; _104 = (signed char *) _103;

(insn 198 197 0 (set (reg/f:DI 152 [ _104 ])
        (reg:DI 151 [ _103 ])) "queryTAD.c":120:9 -1
     (nil))

;; _105 = *_104;

(insn 199 198 0 (set (reg:QI 153 [ _105 ])
        (mem:QI (reg/f:DI 152 [ _104 ]) [10 *_104+0 S1 A8])) "queryTAD.c":120:9 -1
     (nil))

;; if (_105 != 0)

(insn 200 199 201 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 153 [ _105 ])
            (const_int 0 [0]))) "queryTAD.c":120:9 -1
     (nil))

(jump_insn 201 200 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "queryTAD.c":120:9 -1
     (nil))

;; Generating RTL for gimple basic block 25

;; __builtin___asan_report_load8 (_101);

(insn 203 202 204 (set (reg:DI 5 di)
        (reg:DI 149 [ _101 ])) "queryTAD.c":120:9 -1
     (nil))

(call_insn 204 203 205 (call (mem:QI (symbol_ref:DI ("__asan_report_load8") [flags 0x41]  <function_decl 0x7fc58eea5900 __builtin___asan_report_load8>) [0 __builtin___asan_report_load8 S1 A8])
        (const_int 0 [0])) "queryTAD.c":120:9 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

(barrier 205 204 0)

;; Generating RTL for gimple basic block 26

;; 

(code_label 206 205 207 87 (nil) [0 uses])

(note 207 206 0 NOTE_INSN_BASIC_BLOCK)

;; _13 = _12->ID;

(insn 208 207 0 (set (reg:DI 94 [ _13 ])
        (mem:DI (reg/f:DI 93 [ _12 ]) [2 _12->ID+0 S8 A64])) "queryTAD.c":120:9 -1
     (nil))

;; printf ("ID:%lu\t", _13);

(insn 209 208 210 (set (reg:DI 4 si)
        (reg:DI 94 [ _13 ])) "queryTAD.c":120:9 -1
     (nil))

(insn 210 209 211 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC14") [flags 0x2]  <var_decl 0x7fc58ecb7f30 *.LC14>)) "queryTAD.c":120:9 -1
     (nil))

(insn 211 210 212 (set (reg:QI 0 ax)
        (const_int 0 [0])) "queryTAD.c":120:9 -1
     (nil))

(call_insn 212 211 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7fc58ee67000 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) "queryTAD.c":120:9 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (nil)))))

;; _45 = &q_22(D)->sensorsP;

(insn 213 212 214 (set (reg/f:DI 191)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [11 q+0 S8 A64])) "queryTAD.c":121:31 -1
     (nil))

(insn 214 213 0 (parallel [
            (set (reg/f:DI 106 [ _45 ])
                (plus:DI (reg/f:DI 191)
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":121:31 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -40 [0xffffffffffffffd8])) [11 q+0 S8 A64])
            (const_int 32 [0x20]))
        (nil)))

;; _106 = (unsigned long) _45;

(insn 215 214 0 (set (reg:DI 154 [ _106 ])
        (reg/f:DI 106 [ _45 ])) "queryTAD.c":121:31 -1
     (nil))

;; _107 = _106 >> 3;

(insn 216 215 0 (parallel [
            (set (reg:DI 155 [ _107 ])
                (lshiftrt:DI (reg:DI 154 [ _106 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":121:31 -1
     (nil))

;; _108 = _107 + 2147450880;

(insn 217 216 0 (parallel [
            (set (reg:DI 156 [ _108 ])
                (plus:DI (reg:DI 155 [ _107 ])
                    (const_int 2147450880 [0x7fff8000])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":121:31 -1
     (nil))

;; _109 = (signed char *) _108;

(insn 218 217 0 (set (reg/f:DI 157 [ _109 ])
        (reg:DI 156 [ _108 ])) "queryTAD.c":121:31 -1
     (nil))

;; _110 = *_109;

(insn 219 218 0 (set (reg:QI 158 [ _110 ])
        (mem:QI (reg/f:DI 157 [ _109 ]) [10 *_109+0 S1 A8])) "queryTAD.c":121:31 -1
     (nil))

;; if (_110 != 0)

(insn 220 219 221 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 158 [ _110 ])
            (const_int 0 [0]))) "queryTAD.c":121:31 -1
     (nil))

(jump_insn 221 220 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "queryTAD.c":121:31 -1
     (nil))

;; Generating RTL for gimple basic block 27

;; __builtin___asan_report_load8 (_106);

(insn 223 222 224 (set (reg:DI 5 di)
        (reg:DI 154 [ _106 ])) "queryTAD.c":121:31 -1
     (nil))

(call_insn 224 223 225 (call (mem:QI (symbol_ref:DI ("__asan_report_load8") [flags 0x41]  <function_decl 0x7fc58eea5900 __builtin___asan_report_load8>) [0 __builtin___asan_report_load8 S1 A8])
        (const_int 0 [0])) "queryTAD.c":121:31 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

(barrier 225 224 0)

;; Generating RTL for gimple basic block 28

;; 

(code_label 226 225 227 88 (nil) [0 uses])

(note 227 226 0 NOTE_INSN_BASIC_BLOCK)

;; _14 = q_22(D)->sensorsP;

(insn 228 227 229 (set (reg/f:DI 192)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [11 q+0 S8 A64])) "queryTAD.c":121:31 -1
     (nil))

(insn 229 228 0 (set (reg/f:DI 95 [ _14 ])
        (mem/f:DI (plus:DI (reg/f:DI 192)
                (const_int 32 [0x20])) [8 q_22(D)->sensorsP+0 S8 A64])) "queryTAD.c":121:31 -1
     (nil))

;; _46 = &_14->pedestrians;

(insn 230 229 0 (parallel [
            (set (reg/f:DI 107 [ _46 ])
                (plus:DI (reg/f:DI 95 [ _14 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":121:9 -1
     (nil))

;; _111 = (unsigned long) _46;

(insn 231 230 0 (set (reg:DI 159 [ _111 ])
        (reg/f:DI 107 [ _46 ])) "queryTAD.c":121:9 -1
     (nil))

;; _112 = _111 >> 3;

(insn 232 231 0 (parallel [
            (set (reg:DI 160 [ _112 ])
                (lshiftrt:DI (reg:DI 159 [ _111 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":121:9 -1
     (nil))

;; _113 = _112 + 2147450880;

(insn 233 232 0 (parallel [
            (set (reg:DI 161 [ _113 ])
                (plus:DI (reg:DI 160 [ _112 ])
                    (const_int 2147450880 [0x7fff8000])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":121:9 -1
     (nil))

;; _114 = (signed char *) _113;

(insn 234 233 0 (set (reg/f:DI 162 [ _114 ])
        (reg:DI 161 [ _113 ])) "queryTAD.c":121:9 -1
     (nil))

;; _115 = *_114;

(insn 235 234 0 (set (reg:QI 163 [ _115 ])
        (mem:QI (reg/f:DI 162 [ _114 ]) [10 *_114+0 S1 A8])) "queryTAD.c":121:9 -1
     (nil))

;; if (_115 != 0)

(insn 236 235 237 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 163 [ _115 ])
            (const_int 0 [0]))) "queryTAD.c":121:9 -1
     (nil))

(jump_insn 237 236 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "queryTAD.c":121:9 -1
     (nil))

;; Generating RTL for gimple basic block 29

;; __builtin___asan_report_load8 (_111);

(insn 239 238 240 (set (reg:DI 5 di)
        (reg:DI 159 [ _111 ])) "queryTAD.c":121:9 -1
     (nil))

(call_insn 240 239 241 (call (mem:QI (symbol_ref:DI ("__asan_report_load8") [flags 0x41]  <function_decl 0x7fc58eea5900 __builtin___asan_report_load8>) [0 __builtin___asan_report_load8 S1 A8])
        (const_int 0 [0])) "queryTAD.c":121:9 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

(barrier 241 240 0)

;; Generating RTL for gimple basic block 30

;; 

(code_label 242 241 243 89 (nil) [0 uses])

(note 243 242 0 NOTE_INSN_BASIC_BLOCK)

;; _15 = _14->pedestrians;

(insn 244 243 0 (set (reg:DI 96 [ _15 ])
        (mem:DI (plus:DI (reg/f:DI 95 [ _14 ])
                (const_int 8 [0x8])) [2 _14->pedestrians+0 S8 A64])) "queryTAD.c":121:9 -1
     (nil))

;; printf ("Name:%lu\t", _15);

(insn 245 244 246 (set (reg:DI 4 si)
        (reg:DI 96 [ _15 ])) "queryTAD.c":121:9 -1
     (nil))

(insn 246 245 247 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC15") [flags 0x2]  <var_decl 0x7fc58ecc7000 *.LC15>)) "queryTAD.c":121:9 -1
     (nil))

(insn 247 246 248 (set (reg:QI 0 ax)
        (const_int 0 [0])) "queryTAD.c":121:9 -1
     (nil))

(call_insn 248 247 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7fc58ee67000 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) "queryTAD.c":121:9 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (nil)))))

;; _47 = &aux_17->tail;

(insn 249 248 250 (set (reg/f:DI 193)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [8 aux+0 S8 A64])) "queryTAD.c":122:13 -1
     (nil))

(insn 250 249 0 (parallel [
            (set (reg/f:DI 108 [ _47 ])
                (plus:DI (reg/f:DI 193)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":122:13 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])) [8 aux+0 S8 A64])
            (const_int 16 [0x10]))
        (nil)))

;; _116 = (unsigned long) _47;

(insn 251 250 0 (set (reg:DI 164 [ _116 ])
        (reg/f:DI 108 [ _47 ])) "queryTAD.c":122:13 -1
     (nil))

;; _117 = _116 >> 3;

(insn 252 251 0 (parallel [
            (set (reg:DI 165 [ _117 ])
                (lshiftrt:DI (reg:DI 164 [ _116 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":122:13 -1
     (nil))

;; _118 = _117 + 2147450880;

(insn 253 252 0 (parallel [
            (set (reg:DI 166 [ _118 ])
                (plus:DI (reg:DI 165 [ _117 ])
                    (const_int 2147450880 [0x7fff8000])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":122:13 -1
     (nil))

;; _119 = (signed char *) _118;

(insn 254 253 0 (set (reg/f:DI 167 [ _119 ])
        (reg:DI 166 [ _118 ])) "queryTAD.c":122:13 -1
     (nil))

;; _120 = *_119;

(insn 255 254 0 (set (reg:QI 168 [ _120 ])
        (mem:QI (reg/f:DI 167 [ _119 ]) [10 *_119+0 S1 A8])) "queryTAD.c":122:13 -1
     (nil))

;; if (_120 != 0)

(insn 256 255 257 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 168 [ _120 ])
            (const_int 0 [0]))) "queryTAD.c":122:13 -1
     (nil))

(jump_insn 257 256 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "queryTAD.c":122:13 -1
     (nil))

;; Generating RTL for gimple basic block 31

;; __builtin___asan_report_load8 (_116);

(insn 259 258 260 (set (reg:DI 5 di)
        (reg:DI 164 [ _116 ])) "queryTAD.c":122:13 -1
     (nil))

(call_insn 260 259 261 (call (mem:QI (symbol_ref:DI ("__asan_report_load8") [flags 0x41]  <function_decl 0x7fc58eea5900 __builtin___asan_report_load8>) [0 __builtin___asan_report_load8 S1 A8])
        (const_int 0 [0])) "queryTAD.c":122:13 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

(barrier 261 260 0)

;; Generating RTL for gimple basic block 32

;; 

(code_label 262 261 263 90 (nil) [0 uses])

(note 263 262 0 NOTE_INSN_BASIC_BLOCK)

;; aux_26 = aux_17->tail;

(insn 264 263 265 (set (reg/f:DI 194)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [8 aux+0 S8 A64])) "queryTAD.c":122:13 -1
     (nil))

(insn 265 264 266 (set (reg/f:DI 195)
        (mem/f:DI (plus:DI (reg/f:DI 194)
                (const_int 16 [0x10])) [8 aux_17->tail+0 S8 A64])) "queryTAD.c":122:13 -1
     (nil))

(insn 266 265 0 (set (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [8 aux+0 S8 A64])
        (reg/f:DI 195)) "queryTAD.c":122:13 -1
     (nil))

;; Generating RTL for gimple basic block 33

;; 

(code_label 267 266 268 85 (nil) [0 uses])

(note 268 267 0 NOTE_INSN_BASIC_BLOCK)

;; if (aux_17 != 0B)

(insn 270 268 271 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])) [8 aux+0 S8 A64])
            (const_int 0 [0]))) "queryTAD.c":119:10 -1
     (nil))

(jump_insn 271 270 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 269)
            (pc))) "queryTAD.c":119:10 -1
     (nil))

;; Generating RTL for gimple basic block 34


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Forwarding edge 34->35 to 36 failed.
Merging block 36 into block 35...
Merged blocks 35 and 36.
Merged 35 and 36 without moving.


try_optimize_cfg iteration 2

fix_loop_structure: fixing up loops for function


;;
;; Full RTL generated for this function:
;;
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 4, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [11 q+0 S8 A64])
        (reg:DI 5 di [ q ])) "queryTAD.c":107:26 -1
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [13 i+0 S4 A32])
        (const_int 0 [0])) "queryTAD.c":108:13 -1
     (nil))
(jump_insn 7 6 8 2 (set (pc)
        (label_ref 148)) "queryTAD.c":108:5 -1
     (nil)
 -> 148)
;;  succ:       19

(barrier 8 7 150)
;; basic block 4, loop depth 1, maybe hot
;;  prev block 2, next block 5, flags: (NEW, REACHABLE, RTL)
;;  pred:       19
(code_label 150 8 9 4 83 (nil) [1 uses])
(note 9 150 10 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 10 9 11 4 (set (reg:DI 5 di)
        (const_int 24 [0x18])) "queryTAD.c":109:23 -1
     (nil))
(call_insn 11 10 12 4 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x7fc58ee82000 malloc>) [0 __builtin_malloc S1 A8])
            (const_int 0 [0]))) "queryTAD.c":109:23 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 12 11 13 4 (set (reg/f:DI 169)
        (reg:DI 0 ax)) "queryTAD.c":109:23 -1
     (expr_list:REG_NOALIAS (reg/f:DI 169)
        (nil)))
(insn 13 12 14 4 (set (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [8 aux+0 S8 A64])
        (reg/f:DI 169)) "queryTAD.c":109:23 -1
     (nil))
(insn 14 13 15 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [8 aux+0 S8 A64])
            (const_int 0 [0]))) "queryTAD.c":110:12 -1
     (nil))
(jump_insn 15 14 16 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 23)
            (pc))) "queryTAD.c":110:12 -1
     (nil)
 -> 23)
;;  succ:       5 (FALLTHRU)
;;              6

;; basic block 5, loop depth 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL)
;;  pred:       4 (FALLTHRU)
(note 16 15 17 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 17 16 18 5 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x7fc58ec2dcf0 *.LC0>)) "queryTAD.c":111:13 -1
     (nil))
(call_insn 18 17 19 5 (call (mem:QI (symbol_ref:DI ("perror") [flags 0x41]  <function_decl 0x7fc58ef5f500 perror>) [0 perror S1 A8])
        (const_int 0 [0])) "queryTAD.c":111:13 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(call_insn 19 18 20 5 (call (mem:QI (symbol_ref:DI ("__asan_handle_no_return") [flags 0x41]  <function_decl 0x7fc58eead800 __builtin___asan_handle_no_return>) [0 __builtin___asan_handle_no_return S1 A8])
        (const_int 0 [0])) "queryTAD.c":112:13 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))
(insn 20 19 21 5 (set (reg:SI 5 di)
        (const_int 1 [0x1])) "queryTAD.c":112:13 -1
     (nil))
(call_insn 21 20 22 5 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x7fc58ee7c900 exit>) [0 __builtin_exit S1 A8])
        (const_int 0 [0])) "queryTAD.c":112:13 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
;;  succ:      

(barrier 22 21 23)
;; basic block 6, loop depth 1, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL)
;;  pred:       4
(code_label 23 22 24 6 76 (nil) [1 uses])
(note 24 23 25 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 25 24 26 6 (set (reg:SI 170)
        (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [13 i+0 S4 A32])) "queryTAD.c":114:20 -1
     (nil))
(insn 26 25 27 6 (parallel [
            (set (reg:SI 82 [ _1 ])
                (plus:SI (reg:SI 170)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":114:20 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])) [13 i+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 27 26 28 6 (set (reg:DI 83 [ _2 ])
        (sign_extend:DI (reg:SI 82 [ _1 ]))) "queryTAD.c":114:20 -1
     (nil))
(insn 28 27 29 6 (set (reg/f:DI 97 [ _36 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [8 aux+0 S8 A64])) "queryTAD.c":114:17 -1
     (nil))
(insn 29 28 30 6 (set (reg:DI 109 [ _61 ])
        (reg/f:DI 97 [ _36 ])) "queryTAD.c":114:17 -1
     (nil))
(insn 30 29 31 6 (parallel [
            (set (reg:DI 110 [ _62 ])
                (lshiftrt:DI (reg:DI 109 [ _61 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":114:17 -1
     (nil))
(insn 31 30 32 6 (parallel [
            (set (reg:DI 111 [ _63 ])
                (plus:DI (reg:DI 110 [ _62 ])
                    (const_int 2147450880 [0x7fff8000])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":114:17 -1
     (nil))
(insn 32 31 33 6 (set (reg/f:DI 112 [ _64 ])
        (reg:DI 111 [ _63 ])) "queryTAD.c":114:17 -1
     (nil))
(insn 33 32 34 6 (set (reg:QI 113 [ _65 ])
        (mem:QI (reg/f:DI 112 [ _64 ]) [10 *_64+0 S1 A8])) "queryTAD.c":114:17 -1
     (nil))
(insn 34 33 35 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 113 [ _65 ])
            (const_int 0 [0]))) "queryTAD.c":114:17 -1
     (nil))
(jump_insn 35 34 36 6 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 40)
            (pc))) "queryTAD.c":114:17 -1
     (nil)
 -> 40)
;;  succ:       8 [100.0% (guessed)] 
;;              7 [0.0% (guessed)]  (FALLTHRU)

;; basic block 7, loop depth 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL)
;;  pred:       6 [0.0% (guessed)]  (FALLTHRU)
(note 36 35 37 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 37 36 38 7 (set (reg:DI 5 di)
        (reg:DI 109 [ _61 ])) "queryTAD.c":114:17 -1
     (nil))
(call_insn 38 37 39 7 (call (mem:QI (symbol_ref:DI ("__asan_report_store8") [flags 0x41]  <function_decl 0x7fc58eea5f00 __builtin___asan_report_store8>) [0 __builtin___asan_report_store8 S1 A8])
        (const_int 0 [0])) "queryTAD.c":114:17 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:      

(barrier 39 38 40)
;; basic block 8, loop depth 1, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL)
;;  pred:       6 [100.0% (guessed)] 
(code_label 40 39 41 8 77 (nil) [1 uses])
(note 41 40 42 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 42 41 43 8 (set (reg/f:DI 171)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [8 aux+0 S8 A64])) "queryTAD.c":114:17 -1
     (nil))
(insn 43 42 44 8 (set (mem:DI (reg/f:DI 171) [2 aux_28->ID+0 S8 A64])
        (reg:DI 83 [ _2 ])) "queryTAD.c":114:17 -1
     (nil))
(insn 44 43 45 8 (set (reg/f:DI 172)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [11 q+0 S8 A64])) "queryTAD.c":115:29 -1
     (nil))
(insn 45 44 46 8 (parallel [
            (set (reg/f:DI 98 [ _37 ])
                (plus:DI (reg/f:DI 172)
                    (const_int 24 [0x18])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":115:29 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -40 [0xffffffffffffffd8])) [11 q+0 S8 A64])
            (const_int 24 [0x18]))
        (nil)))
(insn 46 45 47 8 (set (reg:DI 114 [ _66 ])
        (reg/f:DI 98 [ _37 ])) "queryTAD.c":115:29 -1
     (nil))
(insn 47 46 48 8 (parallel [
            (set (reg:DI 115 [ _67 ])
                (lshiftrt:DI (reg:DI 114 [ _66 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":115:29 -1
     (nil))
(insn 48 47 49 8 (parallel [
            (set (reg:DI 116 [ _68 ])
                (plus:DI (reg:DI 115 [ _67 ])
                    (const_int 2147450880 [0x7fff8000])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":115:29 -1
     (nil))
(insn 49 48 50 8 (set (reg/f:DI 117 [ _69 ])
        (reg:DI 116 [ _68 ])) "queryTAD.c":115:29 -1
     (nil))
(insn 50 49 51 8 (set (reg:QI 118 [ _70 ])
        (mem:QI (reg/f:DI 117 [ _69 ]) [10 *_69+0 S1 A8])) "queryTAD.c":115:29 -1
     (nil))
(insn 51 50 52 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 118 [ _70 ])
            (const_int 0 [0]))) "queryTAD.c":115:29 -1
     (nil))
(jump_insn 52 51 53 8 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 57)
            (pc))) "queryTAD.c":115:29 -1
     (nil)
 -> 57)
;;  succ:       10 [100.0% (guessed)] 
;;              9 [0.0% (guessed)]  (FALLTHRU)

;; basic block 9, loop depth 0, maybe hot
;;  prev block 8, next block 10, flags: (NEW, REACHABLE, RTL)
;;  pred:       8 [0.0% (guessed)]  (FALLTHRU)
(note 53 52 54 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 54 53 55 9 (set (reg:DI 5 di)
        (reg:DI 114 [ _66 ])) "queryTAD.c":115:29 -1
     (nil))
(call_insn 55 54 56 9 (call (mem:QI (symbol_ref:DI ("__asan_report_load8") [flags 0x41]  <function_decl 0x7fc58eea5900 __builtin___asan_report_load8>) [0 __builtin___asan_report_load8 S1 A8])
        (const_int 0 [0])) "queryTAD.c":115:29 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:      

(barrier 56 55 57)
;; basic block 10, loop depth 1, maybe hot
;;  prev block 9, next block 11, flags: (NEW, REACHABLE, RTL)
;;  pred:       8 [100.0% (guessed)] 
(code_label 57 56 58 10 78 (nil) [1 uses])
(note 58 57 59 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 59 58 60 10 (set (reg/f:DI 173)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [11 q+0 S8 A64])) "queryTAD.c":115:29 -1
     (nil))
(insn 60 59 61 10 (set (reg/f:DI 84 [ _3 ])
        (mem/f:DI (plus:DI (reg/f:DI 173)
                (const_int 24 [0x18])) [7 q_22(D)->sensorsID+0 S8 A64])) "queryTAD.c":115:29 -1
     (nil))
(insn 61 60 62 10 (set (reg:SI 174)
        (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [13 i+0 S4 A32])) "queryTAD.c":115:40 -1
     (nil))
(insn 62 61 63 10 (set (reg:DI 85 [ _4 ])
        (sign_extend:DI (reg:SI 174))) "queryTAD.c":115:40 -1
     (nil))
(insn 63 62 64 10 (set (reg:DI 175)
        (reg:DI 85 [ _4 ])) "queryTAD.c":115:40 -1
     (nil))
(insn 64 63 65 10 (parallel [
            (set (reg:DI 175)
                (ashift:DI (reg:DI 175)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":115:40 -1
     (nil))
(insn 65 64 66 10 (parallel [
            (set (reg:DI 175)
                (plus:DI (reg:DI 175)
                    (reg:DI 85 [ _4 ])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":115:40 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 85 [ _4 ])
            (const_int 5 [0x5]))
        (nil)))
(insn 66 65 67 10 (parallel [
            (set (reg:DI 176)
                (ashift:DI (reg:DI 175)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":115:40 -1
     (nil))
(insn 67 66 68 10 (set (reg:DI 175)
        (reg:DI 176)) "queryTAD.c":115:40 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 85 [ _4 ])
            (const_int 80 [0x50]))
        (nil)))
(insn 68 67 69 10 (set (reg:DI 86 [ _5 ])
        (reg:DI 175)) "queryTAD.c":115:40 -1
     (nil))
(insn 69 68 70 10 (parallel [
            (set (reg/f:DI 87 [ _6 ])
                (plus:DI (reg/f:DI 84 [ _3 ])
                    (reg:DI 86 [ _5 ])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":115:40 -1
     (nil))
(insn 70 69 71 10 (set (reg/f:DI 99 [ _38 ])
        (reg/f:DI 87 [ _6 ])) "queryTAD.c":115:43 -1
     (nil))
(insn 71 70 72 10 (set (reg:DI 119 [ _71 ])
        (reg/f:DI 99 [ _38 ])) "queryTAD.c":115:43 -1
     (nil))
(insn 72 71 73 10 (parallel [
            (set (reg:DI 120 [ _72 ])
                (lshiftrt:DI (reg:DI 119 [ _71 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":115:43 -1
     (nil))
(insn 73 72 74 10 (parallel [
            (set (reg:DI 121 [ _73 ])
                (plus:DI (reg:DI 120 [ _72 ])
                    (const_int 2147450880 [0x7fff8000])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":115:43 -1
     (nil))
(insn 74 73 75 10 (set (reg/f:DI 122 [ _74 ])
        (reg:DI 121 [ _73 ])) "queryTAD.c":115:43 -1
     (nil))
(insn 75 74 76 10 (set (reg:QI 123 [ _75 ])
        (mem:QI (reg/f:DI 122 [ _74 ]) [10 *_74+0 S1 A8])) "queryTAD.c":115:43 -1
     (nil))
(insn 76 75 77 10 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 123 [ _75 ])
            (const_int 0 [0]))) "queryTAD.c":115:43 -1
     (nil))
(jump_insn 77 76 78 10 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 82)
            (pc))) "queryTAD.c":115:43 -1
     (nil)
 -> 82)
;;  succ:       12 [100.0% (guessed)] 
;;              11 [0.0% (guessed)]  (FALLTHRU)

;; basic block 11, loop depth 0, maybe hot
;;  prev block 10, next block 12, flags: (NEW, REACHABLE, RTL)
;;  pred:       10 [0.0% (guessed)]  (FALLTHRU)
(note 78 77 79 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 79 78 80 11 (set (reg:DI 5 di)
        (reg:DI 119 [ _71 ])) "queryTAD.c":115:43 -1
     (nil))
(call_insn 80 79 81 11 (call (mem:QI (symbol_ref:DI ("__asan_report_load8") [flags 0x41]  <function_decl 0x7fc58eea5900 __builtin___asan_report_load8>) [0 __builtin___asan_report_load8 S1 A8])
        (const_int 0 [0])) "queryTAD.c":115:43 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:      

(barrier 81 80 82)
;; basic block 12, loop depth 1, maybe hot
;;  prev block 11, next block 13, flags: (NEW, REACHABLE, RTL)
;;  pred:       10 [100.0% (guessed)] 
(code_label 82 81 83 12 79 (nil) [1 uses])
(note 83 82 84 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 84 83 85 12 (set (reg:DI 88 [ _7 ])
        (mem:DI (reg/f:DI 87 [ _6 ]) [2 _6->total+0 S8 A64])) "queryTAD.c":115:43 -1
     (nil))
(insn 85 84 86 12 (set (reg/f:DI 177)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [8 aux+0 S8 A64])) "queryTAD.c":115:26 -1
     (nil))
(insn 86 85 87 12 (parallel [
            (set (reg/f:DI 100 [ _39 ])
                (plus:DI (reg/f:DI 177)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":115:26 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [8 aux+0 S8 A64])
            (const_int 8 [0x8]))
        (nil)))
(insn 87 86 88 12 (set (reg:DI 124 [ _76 ])
        (reg/f:DI 100 [ _39 ])) "queryTAD.c":115:26 -1
     (nil))
(insn 88 87 89 12 (parallel [
            (set (reg:DI 125 [ _77 ])
                (lshiftrt:DI (reg:DI 124 [ _76 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":115:26 -1
     (nil))
(insn 89 88 90 12 (parallel [
            (set (reg:DI 126 [ _78 ])
                (plus:DI (reg:DI 125 [ _77 ])
                    (const_int 2147450880 [0x7fff8000])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":115:26 -1
     (nil))
(insn 90 89 91 12 (set (reg/f:DI 127 [ _79 ])
        (reg:DI 126 [ _78 ])) "queryTAD.c":115:26 -1
     (nil))
(insn 91 90 92 12 (set (reg:QI 128 [ _80 ])
        (mem:QI (reg/f:DI 127 [ _79 ]) [10 *_79+0 S1 A8])) "queryTAD.c":115:26 -1
     (nil))
(insn 92 91 93 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 128 [ _80 ])
            (const_int 0 [0]))) "queryTAD.c":115:26 -1
     (nil))
(jump_insn 93 92 94 12 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 98)
            (pc))) "queryTAD.c":115:26 -1
     (nil)
 -> 98)
;;  succ:       14 [100.0% (guessed)] 
;;              13 [0.0% (guessed)]  (FALLTHRU)

;; basic block 13, loop depth 0, maybe hot
;;  prev block 12, next block 14, flags: (NEW, REACHABLE, RTL)
;;  pred:       12 [0.0% (guessed)]  (FALLTHRU)
(note 94 93 95 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 95 94 96 13 (set (reg:DI 5 di)
        (reg:DI 124 [ _76 ])) "queryTAD.c":115:26 -1
     (nil))
(call_insn 96 95 97 13 (call (mem:QI (symbol_ref:DI ("__asan_report_store8") [flags 0x41]  <function_decl 0x7fc58eea5f00 __builtin___asan_report_store8>) [0 __builtin___asan_report_store8 S1 A8])
        (const_int 0 [0])) "queryTAD.c":115:26 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:      

(barrier 97 96 98)
;; basic block 14, loop depth 1, maybe hot
;;  prev block 13, next block 15, flags: (NEW, REACHABLE, RTL)
;;  pred:       12 [100.0% (guessed)] 
(code_label 98 97 99 14 80 (nil) [1 uses])
(note 99 98 100 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 100 99 101 14 (set (reg/f:DI 178)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [8 aux+0 S8 A64])) "queryTAD.c":115:26 -1
     (nil))
(insn 101 100 102 14 (set (mem:DI (plus:DI (reg/f:DI 178)
                (const_int 8 [0x8])) [2 aux_28->pedestrians+0 S8 A64])
        (reg:DI 88 [ _7 ])) "queryTAD.c":115:26 -1
     (nil))
(insn 102 101 103 14 (set (reg:SI 179)
        (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [13 i+0 S4 A32])) "queryTAD.c":116:23 -1
     (nil))
(insn 103 102 104 14 (set (reg:DI 89 [ _8 ])
        (sign_extend:DI (reg:SI 179))) "queryTAD.c":116:23 -1
     (nil))
(insn 104 103 105 14 (set (reg/f:DI 180)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [11 q+0 S8 A64])) "queryTAD.c":116:23 -1
     (nil))
(insn 105 104 106 14 (set (reg/f:DI 90 [ _9 ])
        (mem/f:DI (plus:DI (reg/f:DI 180)
                (const_int 24 [0x18])) [7 q_22(D)->sensorsID+0 S8 A64])) "queryTAD.c":116:23 -1
     (nil))
(insn 106 105 107 14 (set (reg/f:DI 181)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [11 q+0 S8 A64])) "queryTAD.c":116:23 -1
     (nil))
(insn 107 106 108 14 (parallel [
            (set (reg/f:DI 101 [ _40 ])
                (plus:DI (reg/f:DI 181)
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":116:23 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -40 [0xffffffffffffffd8])) [11 q+0 S8 A64])
            (const_int 32 [0x20]))
        (nil)))
(insn 108 107 109 14 (set (reg:DI 129 [ _81 ])
        (reg/f:DI 101 [ _40 ])) "queryTAD.c":116:23 -1
     (nil))
(insn 109 108 110 14 (parallel [
            (set (reg:DI 130 [ _82 ])
                (lshiftrt:DI (reg:DI 129 [ _81 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":116:23 -1
     (nil))
(insn 110 109 111 14 (parallel [
            (set (reg:DI 131 [ _83 ])
                (plus:DI (reg:DI 130 [ _82 ])
                    (const_int 2147450880 [0x7fff8000])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":116:23 -1
     (nil))
(insn 111 110 112 14 (set (reg/f:DI 132 [ _84 ])
        (reg:DI 131 [ _83 ])) "queryTAD.c":116:23 -1
     (nil))
(insn 112 111 113 14 (set (reg:QI 133 [ _85 ])
        (mem:QI (reg/f:DI 132 [ _84 ]) [10 *_84+0 S1 A8])) "queryTAD.c":116:23 -1
     (nil))
(insn 113 112 114 14 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 133 [ _85 ])
            (const_int 0 [0]))) "queryTAD.c":116:23 -1
     (nil))
(jump_insn 114 113 115 14 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 119)
            (pc))) "queryTAD.c":116:23 -1
     (nil)
 -> 119)
;;  succ:       16 [100.0% (guessed)] 
;;              15 [0.0% (guessed)]  (FALLTHRU)

;; basic block 15, loop depth 0, maybe hot
;;  prev block 14, next block 16, flags: (NEW, REACHABLE, RTL)
;;  pred:       14 [0.0% (guessed)]  (FALLTHRU)
(note 115 114 116 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 116 115 117 15 (set (reg:DI 5 di)
        (reg:DI 129 [ _81 ])) "queryTAD.c":116:23 -1
     (nil))
(call_insn 117 116 118 15 (call (mem:QI (symbol_ref:DI ("__asan_report_load8") [flags 0x41]  <function_decl 0x7fc58eea5900 __builtin___asan_report_load8>) [0 __builtin___asan_report_load8 S1 A8])
        (const_int 0 [0])) "queryTAD.c":116:23 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:      

(barrier 118 117 119)
;; basic block 16, loop depth 1, maybe hot
;;  prev block 15, next block 17, flags: (NEW, REACHABLE, RTL)
;;  pred:       14 [100.0% (guessed)] 
(code_label 119 118 120 16 81 (nil) [1 uses])
(note 120 119 121 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 121 120 122 16 (set (reg/f:DI 182)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [11 q+0 S8 A64])) "queryTAD.c":116:23 -1
     (nil))
(insn 122 121 123 16 (set (reg/f:DI 91 [ _10 ])
        (mem/f:DI (plus:DI (reg/f:DI 182)
                (const_int 32 [0x20])) [8 q_22(D)->sensorsP+0 S8 A64])) "queryTAD.c":116:23 -1
     (nil))
(insn 123 122 124 16 (set (reg:DI 183)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [8 aux+0 S8 A64])) "queryTAD.c":116:23 -1
     (nil))
(insn 124 123 125 16 (set (reg:DI 2 cx)
        (reg:DI 89 [ _8 ])) "queryTAD.c":116:23 -1
     (nil))
(insn 125 124 126 16 (set (reg:DI 1 dx)
        (reg/f:DI 90 [ _9 ])) "queryTAD.c":116:23 -1
     (nil))
(insn 126 125 127 16 (set (reg:DI 4 si)
        (reg:DI 183)) "queryTAD.c":116:23 -1
     (nil))
(insn 127 126 128 16 (set (reg:DI 5 di)
        (reg/f:DI 91 [ _10 ])) "queryTAD.c":116:23 -1
     (nil))
(call_insn 128 127 129 16 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("makeSenLRec") [flags 0x3]  <function_decl 0x7fc58ebf9e00 makeSenLRec>) [0 makeSenLRec S1 A8])
            (const_int 0 [0]))) "queryTAD.c":116:23 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 129 128 130 16 (set (reg/f:DI 92 [ _11 ])
        (reg:DI 0 ax)) "queryTAD.c":116:23 -1
     (nil))
(insn 130 129 131 16 (set (reg/f:DI 184)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [11 q+0 S8 A64])) "queryTAD.c":116:21 -1
     (nil))
(insn 131 130 132 16 (parallel [
            (set (reg/f:DI 102 [ _41 ])
                (plus:DI (reg/f:DI 184)
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":116:21 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -40 [0xffffffffffffffd8])) [11 q+0 S8 A64])
            (const_int 32 [0x20]))
        (nil)))
(insn 132 131 133 16 (set (reg:DI 134 [ _86 ])
        (reg/f:DI 102 [ _41 ])) "queryTAD.c":116:21 -1
     (nil))
(insn 133 132 134 16 (parallel [
            (set (reg:DI 135 [ _87 ])
                (lshiftrt:DI (reg:DI 134 [ _86 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":116:21 -1
     (nil))
(insn 134 133 135 16 (parallel [
            (set (reg:DI 136 [ _88 ])
                (plus:DI (reg:DI 135 [ _87 ])
                    (const_int 2147450880 [0x7fff8000])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":116:21 -1
     (nil))
(insn 135 134 136 16 (set (reg/f:DI 137 [ _89 ])
        (reg:DI 136 [ _88 ])) "queryTAD.c":116:21 -1
     (nil))
(insn 136 135 137 16 (set (reg:QI 138 [ _90 ])
        (mem:QI (reg/f:DI 137 [ _89 ]) [10 *_89+0 S1 A8])) "queryTAD.c":116:21 -1
     (nil))
(insn 137 136 138 16 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 138 [ _90 ])
            (const_int 0 [0]))) "queryTAD.c":116:21 -1
     (nil))
(jump_insn 138 137 139 16 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 143)
            (pc))) "queryTAD.c":116:21 -1
     (nil)
 -> 143)
;;  succ:       18 [100.0% (guessed)] 
;;              17 [0.0% (guessed)]  (FALLTHRU)

;; basic block 17, loop depth 0, maybe hot
;;  prev block 16, next block 18, flags: (NEW, REACHABLE, RTL)
;;  pred:       16 [0.0% (guessed)]  (FALLTHRU)
(note 139 138 140 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 140 139 141 17 (set (reg:DI 5 di)
        (reg:DI 134 [ _86 ])) "queryTAD.c":116:21 -1
     (nil))
(call_insn 141 140 142 17 (call (mem:QI (symbol_ref:DI ("__asan_report_store8") [flags 0x41]  <function_decl 0x7fc58eea5f00 __builtin___asan_report_store8>) [0 __builtin___asan_report_store8 S1 A8])
        (const_int 0 [0])) "queryTAD.c":116:21 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:      

(barrier 142 141 143)
;; basic block 18, loop depth 1, maybe hot
;;  prev block 17, next block 19, flags: (NEW, REACHABLE, RTL)
;;  pred:       16 [100.0% (guessed)] 
(code_label 143 142 144 18 82 (nil) [1 uses])
(note 144 143 145 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 145 144 146 18 (set (reg/f:DI 185)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [11 q+0 S8 A64])) "queryTAD.c":116:21 -1
     (nil))
(insn 146 145 147 18 (set (mem/f:DI (plus:DI (reg/f:DI 185)
                (const_int 32 [0x20])) [8 q_22(D)->sensorsP+0 S8 A64])
        (reg/f:DI 92 [ _11 ])) "queryTAD.c":116:21 -1
     (nil))
(insn 147 146 148 18 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                        (const_int -20 [0xffffffffffffffec])) [13 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                            (const_int -20 [0xffffffffffffffec])) [13 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":108:30 -1
     (nil))
;;  succ:       19 (FALLTHRU,DFS_BACK)

;; basic block 19, loop depth 1, maybe hot
;;  prev block 18, next block 20, flags: (NEW, REACHABLE, RTL)
;;  pred:       2
;;              18 (FALLTHRU,DFS_BACK)
(code_label 148 147 149 19 75 (nil) [1 uses])
(note 149 148 153 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 153 149 154 19 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])) [13 i+0 S4 A32])
            (const_int 85 [0x55]))) "queryTAD.c":108:5 -1
     (nil))
(jump_insn 154 153 155 19 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 150)
            (pc))) "queryTAD.c":108:5 -1
     (nil)
 -> 150)
;;  succ:       4
;;              20 (FALLTHRU)

;; basic block 20, loop depth 0, maybe hot
;;  prev block 19, next block 21, flags: (NEW, REACHABLE, RTL)
;;  pred:       19 (FALLTHRU)
(note 155 154 156 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 156 155 157 20 (set (reg/f:DI 186)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [11 q+0 S8 A64])) "queryTAD.c":118:14 -1
     (nil))
(insn 157 156 158 20 (parallel [
            (set (reg/f:DI 103 [ _42 ])
                (plus:DI (reg/f:DI 186)
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":118:14 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -40 [0xffffffffffffffd8])) [11 q+0 S8 A64])
            (const_int 32 [0x20]))
        (nil)))
(insn 158 157 159 20 (set (reg:DI 139 [ _91 ])
        (reg/f:DI 103 [ _42 ])) "queryTAD.c":118:14 -1
     (nil))
(insn 159 158 160 20 (parallel [
            (set (reg:DI 140 [ _92 ])
                (lshiftrt:DI (reg:DI 139 [ _91 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":118:14 -1
     (nil))
(insn 160 159 161 20 (parallel [
            (set (reg:DI 141 [ _93 ])
                (plus:DI (reg:DI 140 [ _92 ])
                    (const_int 2147450880 [0x7fff8000])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":118:14 -1
     (nil))
(insn 161 160 162 20 (set (reg/f:DI 142 [ _94 ])
        (reg:DI 141 [ _93 ])) "queryTAD.c":118:14 -1
     (nil))
(insn 162 161 163 20 (set (reg:QI 143 [ _95 ])
        (mem:QI (reg/f:DI 142 [ _94 ]) [10 *_94+0 S1 A8])) "queryTAD.c":118:14 -1
     (nil))
(insn 163 162 164 20 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 143 [ _95 ])
            (const_int 0 [0]))) "queryTAD.c":118:14 -1
     (nil))
(jump_insn 164 163 165 20 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 169)
            (pc))) "queryTAD.c":118:14 -1
     (nil)
 -> 169)
;;  succ:       22 [100.0% (guessed)] 
;;              21 [0.0% (guessed)]  (FALLTHRU)

;; basic block 21, loop depth 0, maybe hot
;;  prev block 20, next block 22, flags: (NEW, REACHABLE, RTL)
;;  pred:       20 [0.0% (guessed)]  (FALLTHRU)
(note 165 164 166 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 166 165 167 21 (set (reg:DI 5 di)
        (reg:DI 139 [ _91 ])) "queryTAD.c":118:14 -1
     (nil))
(call_insn 167 166 168 21 (call (mem:QI (symbol_ref:DI ("__asan_report_load8") [flags 0x41]  <function_decl 0x7fc58eea5900 __builtin___asan_report_load8>) [0 __builtin___asan_report_load8 S1 A8])
        (const_int 0 [0])) "queryTAD.c":118:14 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:      

(barrier 168 167 169)
;; basic block 22, loop depth 0, maybe hot
;;  prev block 21, next block 23, flags: (NEW, REACHABLE, RTL)
;;  pred:       20 [100.0% (guessed)] 
(code_label 169 168 170 22 84 (nil) [1 uses])
(note 170 169 171 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 171 170 172 22 (set (reg/f:DI 187)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [11 q+0 S8 A64])) "queryTAD.c":118:14 -1
     (nil))
(insn 172 171 173 22 (set (reg/f:DI 188)
        (mem/f:DI (plus:DI (reg/f:DI 187)
                (const_int 32 [0x20])) [8 q_22(D)->sensorsP+0 S8 A64])) "queryTAD.c":118:14 -1
     (nil))
(insn 173 172 174 22 (set (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [8 aux+0 S8 A64])
        (reg/f:DI 188)) "queryTAD.c":118:14 -1
     (nil))
(jump_insn 174 173 175 22 (set (pc)
        (label_ref 267)) "queryTAD.c":119:10 -1
     (nil)
 -> 267)
;;  succ:       34

(barrier 175 174 269)
;; basic block 23, loop depth 1, maybe hot
;;  prev block 22, next block 24, flags: (NEW, REACHABLE, RTL)
;;  pred:       34
(code_label 269 175 176 23 91 (nil) [1 uses])
(note 176 269 177 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 177 176 178 23 (set (reg/f:DI 189)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [11 q+0 S8 A64])) "queryTAD.c":120:29 -1
     (nil))
(insn 178 177 179 23 (parallel [
            (set (reg/f:DI 104 [ _43 ])
                (plus:DI (reg/f:DI 189)
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":120:29 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -40 [0xffffffffffffffd8])) [11 q+0 S8 A64])
            (const_int 32 [0x20]))
        (nil)))
(insn 179 178 180 23 (set (reg:DI 144 [ _96 ])
        (reg/f:DI 104 [ _43 ])) "queryTAD.c":120:29 -1
     (nil))
(insn 180 179 181 23 (parallel [
            (set (reg:DI 145 [ _97 ])
                (lshiftrt:DI (reg:DI 144 [ _96 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":120:29 -1
     (nil))
(insn 181 180 182 23 (parallel [
            (set (reg:DI 146 [ _98 ])
                (plus:DI (reg:DI 145 [ _97 ])
                    (const_int 2147450880 [0x7fff8000])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":120:29 -1
     (nil))
(insn 182 181 183 23 (set (reg/f:DI 147 [ _99 ])
        (reg:DI 146 [ _98 ])) "queryTAD.c":120:29 -1
     (nil))
(insn 183 182 184 23 (set (reg:QI 148 [ _100 ])
        (mem:QI (reg/f:DI 147 [ _99 ]) [10 *_99+0 S1 A8])) "queryTAD.c":120:29 -1
     (nil))
(insn 184 183 185 23 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 148 [ _100 ])
            (const_int 0 [0]))) "queryTAD.c":120:29 -1
     (nil))
(jump_insn 185 184 186 23 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 190)
            (pc))) "queryTAD.c":120:29 -1
     (nil)
 -> 190)
;;  succ:       25 [100.0% (guessed)] 
;;              24 [0.0% (guessed)]  (FALLTHRU)

;; basic block 24, loop depth 0, maybe hot
;;  prev block 23, next block 25, flags: (NEW, REACHABLE, RTL)
;;  pred:       23 [0.0% (guessed)]  (FALLTHRU)
(note 186 185 187 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 187 186 188 24 (set (reg:DI 5 di)
        (reg:DI 144 [ _96 ])) "queryTAD.c":120:29 -1
     (nil))
(call_insn 188 187 189 24 (call (mem:QI (symbol_ref:DI ("__asan_report_load8") [flags 0x41]  <function_decl 0x7fc58eea5900 __builtin___asan_report_load8>) [0 __builtin___asan_report_load8 S1 A8])
        (const_int 0 [0])) "queryTAD.c":120:29 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:      

(barrier 189 188 190)
;; basic block 25, loop depth 1, maybe hot
;;  prev block 24, next block 26, flags: (NEW, REACHABLE, RTL)
;;  pred:       23 [100.0% (guessed)] 
(code_label 190 189 191 25 86 (nil) [1 uses])
(note 191 190 192 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 192 191 193 25 (set (reg/f:DI 190)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [11 q+0 S8 A64])) "queryTAD.c":120:29 -1
     (nil))
(insn 193 192 194 25 (set (reg/f:DI 93 [ _12 ])
        (mem/f:DI (plus:DI (reg/f:DI 190)
                (const_int 32 [0x20])) [8 q_22(D)->sensorsP+0 S8 A64])) "queryTAD.c":120:29 -1
     (nil))
(insn 194 193 195 25 (set (reg/f:DI 105 [ _44 ])
        (reg/f:DI 93 [ _12 ])) "queryTAD.c":120:9 -1
     (nil))
(insn 195 194 196 25 (set (reg:DI 149 [ _101 ])
        (reg/f:DI 105 [ _44 ])) "queryTAD.c":120:9 -1
     (nil))
(insn 196 195 197 25 (parallel [
            (set (reg:DI 150 [ _102 ])
                (lshiftrt:DI (reg:DI 149 [ _101 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":120:9 -1
     (nil))
(insn 197 196 198 25 (parallel [
            (set (reg:DI 151 [ _103 ])
                (plus:DI (reg:DI 150 [ _102 ])
                    (const_int 2147450880 [0x7fff8000])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":120:9 -1
     (nil))
(insn 198 197 199 25 (set (reg/f:DI 152 [ _104 ])
        (reg:DI 151 [ _103 ])) "queryTAD.c":120:9 -1
     (nil))
(insn 199 198 200 25 (set (reg:QI 153 [ _105 ])
        (mem:QI (reg/f:DI 152 [ _104 ]) [10 *_104+0 S1 A8])) "queryTAD.c":120:9 -1
     (nil))
(insn 200 199 201 25 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 153 [ _105 ])
            (const_int 0 [0]))) "queryTAD.c":120:9 -1
     (nil))
(jump_insn 201 200 202 25 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 206)
            (pc))) "queryTAD.c":120:9 -1
     (nil)
 -> 206)
;;  succ:       27 [100.0% (guessed)] 
;;              26 [0.0% (guessed)]  (FALLTHRU)

;; basic block 26, loop depth 0, maybe hot
;;  prev block 25, next block 27, flags: (NEW, REACHABLE, RTL)
;;  pred:       25 [0.0% (guessed)]  (FALLTHRU)
(note 202 201 203 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 203 202 204 26 (set (reg:DI 5 di)
        (reg:DI 149 [ _101 ])) "queryTAD.c":120:9 -1
     (nil))
(call_insn 204 203 205 26 (call (mem:QI (symbol_ref:DI ("__asan_report_load8") [flags 0x41]  <function_decl 0x7fc58eea5900 __builtin___asan_report_load8>) [0 __builtin___asan_report_load8 S1 A8])
        (const_int 0 [0])) "queryTAD.c":120:9 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:      

(barrier 205 204 206)
;; basic block 27, loop depth 1, maybe hot
;;  prev block 26, next block 28, flags: (NEW, REACHABLE, RTL)
;;  pred:       25 [100.0% (guessed)] 
(code_label 206 205 207 27 87 (nil) [1 uses])
(note 207 206 208 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn 208 207 209 27 (set (reg:DI 94 [ _13 ])
        (mem:DI (reg/f:DI 93 [ _12 ]) [2 _12->ID+0 S8 A64])) "queryTAD.c":120:9 -1
     (nil))
(insn 209 208 210 27 (set (reg:DI 4 si)
        (reg:DI 94 [ _13 ])) "queryTAD.c":120:9 -1
     (nil))
(insn 210 209 211 27 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC14") [flags 0x2]  <var_decl 0x7fc58ecb7f30 *.LC14>)) "queryTAD.c":120:9 -1
     (nil))
(insn 211 210 212 27 (set (reg:QI 0 ax)
        (const_int 0 [0])) "queryTAD.c":120:9 -1
     (nil))
(call_insn 212 211 213 27 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7fc58ee67000 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) "queryTAD.c":120:9 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (nil)))))
(insn 213 212 214 27 (set (reg/f:DI 191)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [11 q+0 S8 A64])) "queryTAD.c":121:31 -1
     (nil))
(insn 214 213 215 27 (parallel [
            (set (reg/f:DI 106 [ _45 ])
                (plus:DI (reg/f:DI 191)
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":121:31 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -40 [0xffffffffffffffd8])) [11 q+0 S8 A64])
            (const_int 32 [0x20]))
        (nil)))
(insn 215 214 216 27 (set (reg:DI 154 [ _106 ])
        (reg/f:DI 106 [ _45 ])) "queryTAD.c":121:31 -1
     (nil))
(insn 216 215 217 27 (parallel [
            (set (reg:DI 155 [ _107 ])
                (lshiftrt:DI (reg:DI 154 [ _106 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":121:31 -1
     (nil))
(insn 217 216 218 27 (parallel [
            (set (reg:DI 156 [ _108 ])
                (plus:DI (reg:DI 155 [ _107 ])
                    (const_int 2147450880 [0x7fff8000])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":121:31 -1
     (nil))
(insn 218 217 219 27 (set (reg/f:DI 157 [ _109 ])
        (reg:DI 156 [ _108 ])) "queryTAD.c":121:31 -1
     (nil))
(insn 219 218 220 27 (set (reg:QI 158 [ _110 ])
        (mem:QI (reg/f:DI 157 [ _109 ]) [10 *_109+0 S1 A8])) "queryTAD.c":121:31 -1
     (nil))
(insn 220 219 221 27 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 158 [ _110 ])
            (const_int 0 [0]))) "queryTAD.c":121:31 -1
     (nil))
(jump_insn 221 220 222 27 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 226)
            (pc))) "queryTAD.c":121:31 -1
     (nil)
 -> 226)
;;  succ:       29 [100.0% (guessed)] 
;;              28 [0.0% (guessed)]  (FALLTHRU)

;; basic block 28, loop depth 0, maybe hot
;;  prev block 27, next block 29, flags: (NEW, REACHABLE, RTL)
;;  pred:       27 [0.0% (guessed)]  (FALLTHRU)
(note 222 221 223 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(insn 223 222 224 28 (set (reg:DI 5 di)
        (reg:DI 154 [ _106 ])) "queryTAD.c":121:31 -1
     (nil))
(call_insn 224 223 225 28 (call (mem:QI (symbol_ref:DI ("__asan_report_load8") [flags 0x41]  <function_decl 0x7fc58eea5900 __builtin___asan_report_load8>) [0 __builtin___asan_report_load8 S1 A8])
        (const_int 0 [0])) "queryTAD.c":121:31 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:      

(barrier 225 224 226)
;; basic block 29, loop depth 1, maybe hot
;;  prev block 28, next block 30, flags: (NEW, REACHABLE, RTL)
;;  pred:       27 [100.0% (guessed)] 
(code_label 226 225 227 29 88 (nil) [1 uses])
(note 227 226 228 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(insn 228 227 229 29 (set (reg/f:DI 192)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [11 q+0 S8 A64])) "queryTAD.c":121:31 -1
     (nil))
(insn 229 228 230 29 (set (reg/f:DI 95 [ _14 ])
        (mem/f:DI (plus:DI (reg/f:DI 192)
                (const_int 32 [0x20])) [8 q_22(D)->sensorsP+0 S8 A64])) "queryTAD.c":121:31 -1
     (nil))
(insn 230 229 231 29 (parallel [
            (set (reg/f:DI 107 [ _46 ])
                (plus:DI (reg/f:DI 95 [ _14 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":121:9 -1
     (nil))
(insn 231 230 232 29 (set (reg:DI 159 [ _111 ])
        (reg/f:DI 107 [ _46 ])) "queryTAD.c":121:9 -1
     (nil))
(insn 232 231 233 29 (parallel [
            (set (reg:DI 160 [ _112 ])
                (lshiftrt:DI (reg:DI 159 [ _111 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":121:9 -1
     (nil))
(insn 233 232 234 29 (parallel [
            (set (reg:DI 161 [ _113 ])
                (plus:DI (reg:DI 160 [ _112 ])
                    (const_int 2147450880 [0x7fff8000])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":121:9 -1
     (nil))
(insn 234 233 235 29 (set (reg/f:DI 162 [ _114 ])
        (reg:DI 161 [ _113 ])) "queryTAD.c":121:9 -1
     (nil))
(insn 235 234 236 29 (set (reg:QI 163 [ _115 ])
        (mem:QI (reg/f:DI 162 [ _114 ]) [10 *_114+0 S1 A8])) "queryTAD.c":121:9 -1
     (nil))
(insn 236 235 237 29 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 163 [ _115 ])
            (const_int 0 [0]))) "queryTAD.c":121:9 -1
     (nil))
(jump_insn 237 236 238 29 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 242)
            (pc))) "queryTAD.c":121:9 -1
     (nil)
 -> 242)
;;  succ:       31 [100.0% (guessed)] 
;;              30 [0.0% (guessed)]  (FALLTHRU)

;; basic block 30, loop depth 0, maybe hot
;;  prev block 29, next block 31, flags: (NEW, REACHABLE, RTL)
;;  pred:       29 [0.0% (guessed)]  (FALLTHRU)
(note 238 237 239 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(insn 239 238 240 30 (set (reg:DI 5 di)
        (reg:DI 159 [ _111 ])) "queryTAD.c":121:9 -1
     (nil))
(call_insn 240 239 241 30 (call (mem:QI (symbol_ref:DI ("__asan_report_load8") [flags 0x41]  <function_decl 0x7fc58eea5900 __builtin___asan_report_load8>) [0 __builtin___asan_report_load8 S1 A8])
        (const_int 0 [0])) "queryTAD.c":121:9 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:      

(barrier 241 240 242)
;; basic block 31, loop depth 1, maybe hot
;;  prev block 30, next block 32, flags: (NEW, REACHABLE, RTL)
;;  pred:       29 [100.0% (guessed)] 
(code_label 242 241 243 31 89 (nil) [1 uses])
(note 243 242 244 31 [bb 31] NOTE_INSN_BASIC_BLOCK)
(insn 244 243 245 31 (set (reg:DI 96 [ _15 ])
        (mem:DI (plus:DI (reg/f:DI 95 [ _14 ])
                (const_int 8 [0x8])) [2 _14->pedestrians+0 S8 A64])) "queryTAD.c":121:9 -1
     (nil))
(insn 245 244 246 31 (set (reg:DI 4 si)
        (reg:DI 96 [ _15 ])) "queryTAD.c":121:9 -1
     (nil))
(insn 246 245 247 31 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC15") [flags 0x2]  <var_decl 0x7fc58ecc7000 *.LC15>)) "queryTAD.c":121:9 -1
     (nil))
(insn 247 246 248 31 (set (reg:QI 0 ax)
        (const_int 0 [0])) "queryTAD.c":121:9 -1
     (nil))
(call_insn 248 247 249 31 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7fc58ee67000 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) "queryTAD.c":121:9 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (nil)))))
(insn 249 248 250 31 (set (reg/f:DI 193)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [8 aux+0 S8 A64])) "queryTAD.c":122:13 -1
     (nil))
(insn 250 249 251 31 (parallel [
            (set (reg/f:DI 108 [ _47 ])
                (plus:DI (reg/f:DI 193)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":122:13 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])) [8 aux+0 S8 A64])
            (const_int 16 [0x10]))
        (nil)))
(insn 251 250 252 31 (set (reg:DI 164 [ _116 ])
        (reg/f:DI 108 [ _47 ])) "queryTAD.c":122:13 -1
     (nil))
(insn 252 251 253 31 (parallel [
            (set (reg:DI 165 [ _117 ])
                (lshiftrt:DI (reg:DI 164 [ _116 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":122:13 -1
     (nil))
(insn 253 252 254 31 (parallel [
            (set (reg:DI 166 [ _118 ])
                (plus:DI (reg:DI 165 [ _117 ])
                    (const_int 2147450880 [0x7fff8000])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":122:13 -1
     (nil))
(insn 254 253 255 31 (set (reg/f:DI 167 [ _119 ])
        (reg:DI 166 [ _118 ])) "queryTAD.c":122:13 -1
     (nil))
(insn 255 254 256 31 (set (reg:QI 168 [ _120 ])
        (mem:QI (reg/f:DI 167 [ _119 ]) [10 *_119+0 S1 A8])) "queryTAD.c":122:13 -1
     (nil))
(insn 256 255 257 31 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 168 [ _120 ])
            (const_int 0 [0]))) "queryTAD.c":122:13 -1
     (nil))
(jump_insn 257 256 258 31 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 262)
            (pc))) "queryTAD.c":122:13 -1
     (nil)
 -> 262)
;;  succ:       33 [100.0% (guessed)] 
;;              32 [0.0% (guessed)]  (FALLTHRU)

;; basic block 32, loop depth 0, maybe hot
;;  prev block 31, next block 33, flags: (NEW, REACHABLE, RTL)
;;  pred:       31 [0.0% (guessed)]  (FALLTHRU)
(note 258 257 259 32 [bb 32] NOTE_INSN_BASIC_BLOCK)
(insn 259 258 260 32 (set (reg:DI 5 di)
        (reg:DI 164 [ _116 ])) "queryTAD.c":122:13 -1
     (nil))
(call_insn 260 259 261 32 (call (mem:QI (symbol_ref:DI ("__asan_report_load8") [flags 0x41]  <function_decl 0x7fc58eea5900 __builtin___asan_report_load8>) [0 __builtin___asan_report_load8 S1 A8])
        (const_int 0 [0])) "queryTAD.c":122:13 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:      

(barrier 261 260 262)
;; basic block 33, loop depth 1, maybe hot
;;  prev block 32, next block 34, flags: (NEW, REACHABLE, RTL)
;;  pred:       31 [100.0% (guessed)] 
(code_label 262 261 263 33 90 (nil) [1 uses])
(note 263 262 264 33 [bb 33] NOTE_INSN_BASIC_BLOCK)
(insn 264 263 265 33 (set (reg/f:DI 194)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [8 aux+0 S8 A64])) "queryTAD.c":122:13 -1
     (nil))
(insn 265 264 266 33 (set (reg/f:DI 195)
        (mem/f:DI (plus:DI (reg/f:DI 194)
                (const_int 16 [0x10])) [8 aux_17->tail+0 S8 A64])) "queryTAD.c":122:13 -1
     (nil))
(insn 266 265 267 33 (set (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [8 aux+0 S8 A64])
        (reg/f:DI 195)) "queryTAD.c":122:13 -1
     (nil))
;;  succ:       34 (FALLTHRU,DFS_BACK)

;; basic block 34, loop depth 1, maybe hot
;;  prev block 33, next block 35, flags: (NEW, REACHABLE, RTL)
;;  pred:       22
;;              33 (FALLTHRU,DFS_BACK)
(code_label 267 266 268 34 85 (nil) [1 uses])
(note 268 267 270 34 [bb 34] NOTE_INSN_BASIC_BLOCK)
(insn 270 268 271 34 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])) [8 aux+0 S8 A64])
            (const_int 0 [0]))) "queryTAD.c":119:10 -1
     (nil))
(jump_insn 271 270 272 34 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 269)
            (pc))) "queryTAD.c":119:10 -1
     (nil)
 -> 269)
;;  succ:       23
;;              35 (FALLTHRU)

;; basic block 35, loop depth 0, maybe hot
;;  prev block 34, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       34 (FALLTHRU)
(note 272 271 0 35 [bb 35] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [always]  (FALLTHRU)


;; Function freeRecYears (freeRecYears, funcdef_no=9, decl_uid=3462, cgraph_uid=10, symbol_order=9)

freeRecYears (struct TYear * years)
{
  struct year * _1;
  struct year * * _7;
  unsigned long _9;
  unsigned long _10;
  unsigned long _11;
  signed char * _12;
  signed char _13;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  if (years_3(D) == 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]
;;    succ:       3
;;                4

;;   basic block 3, loop depth 0
;;    pred:       2
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 7>; [INV]
;;    succ:       7

;;   basic block 4, loop depth 0
;;    pred:       2
  _7 = &years_3(D)->tail;
  _9 = (unsigned long) _7;
  _10 = _9 >> 3;
  _11 = _10 + 2147450880;
  _12 = (signed char *) _11;
  _13 = *_12;
  if (_13 != 0)
    goto <bb 5>; [0.05%]
  else
    goto <bb 6>; [99.95%]
;;    succ:       6
;;                5

;;   basic block 5, loop depth 0
;;    pred:       4
  __builtin___asan_report_load8 (_9);
;;    succ:      

;;   basic block 6, loop depth 0
;;    pred:       4
  _1 = years_3(D)->tail;
  freeRecYears (_1);
  free (years_3(D));
;;    succ:       7

;;   basic block 7, loop depth 0
;;    pred:       3
;;                6
<L2>:
  return;
;;    succ:       EXIT

}



Partition map 

Partition 1 (_1 - 1 )
Partition 3 (years_3(D) - 3 )
Partition 7 (_7 - 7 )
Partition 9 (_9 - 9 )
Partition 10 (_10 - 10 )
Partition 11 (_11 - 11 )
Partition 12 (_12 - 12 )
Partition 13 (_13 - 13 )


Coalescible Partition map 

Partition 0, base 0 (years_3(D) - 3 )


Partition map 

Partition 0 (years_3(D) - 3 )


Conflict graph:

After sorting:
Coalesce List:

Partition map 

Partition 0 (years_3(D) - 3 )

After Coalescing:

Partition map 

Partition 0 (_1 - 1 )
Partition 1 (years_3(D) - 3 )
Partition 2 (_7 - 7 )
Partition 3 (_9 - 9 )
Partition 4 (_10 - 10 )
Partition 5 (_11 - 11 )
Partition 6 (_12 - 12 )
Partition 7 (_13 - 13 )

freeRecYears (struct TYear * years)
{
  struct year * _1;
  struct year * * _7;
  unsigned long _9;
  unsigned long _10;
  unsigned long _11;
  signed char * _12;
  signed char _13;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  if (years_3(D) == 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]
;;    succ:       3
;;                4

;;   basic block 3, loop depth 0
;;    pred:       2
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 7>; [INV]
;;    succ:       7

;;   basic block 4, loop depth 0
;;    pred:       2
  _7 = &years_3(D)->tail;
  _9 = (unsigned long) _7;
  _10 = _9 >> 3;
  _11 = _10 + 2147450880;
  _12 = (signed char *) _11;
  _13 = *_12;
  if (_13 != 0)
    goto <bb 5>; [0.05%]
  else
    goto <bb 6>; [99.95%]
;;    succ:       6
;;                5

;;   basic block 5, loop depth 0
;;    pred:       4
  __builtin___asan_report_load8 (_9);
;;    succ:      

;;   basic block 6, loop depth 0
;;    pred:       4
  _1 = years_3(D)->tail;
  freeRecYears (_1);
  free (years_3(D));
;;    succ:       7

;;   basic block 7, loop depth 0
;;    pred:       3
;;                6
<L2>:
  return;
;;    succ:       EXIT

}



;; Generating RTL for gimple basic block 2

;; if (years_3(D) == 0B)

(insn 6 5 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [6 years+0 S8 A64])
            (const_int 0 [0]))) "queryTAD.c":127:7 -1
     (nil))

(jump_insn 7 6 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "queryTAD.c":127:7 -1
     (nil))

;; Generating RTL for gimple basic block 3

;; // predicted unlikely by early return (on trees) predictor.

(nil)

;; Generating RTL for gimple basic block 4

;; 

(code_label 11 10 12 93 (nil) [0 uses])

(note 12 11 0 NOTE_INSN_BASIC_BLOCK)

;; _7 = &years_3(D)->tail;

(insn 13 12 14 (set (reg/f:DI 89)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [6 years+0 S8 A64])) "queryTAD.c":130:23 -1
     (nil))

(insn 14 13 0 (parallel [
            (set (reg/f:DI 83 [ _7 ])
                (plus:DI (reg/f:DI 89)
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":130:23 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [6 years+0 S8 A64])
            (const_int 32 [0x20]))
        (nil)))

;; _9 = (unsigned long) _7;

(insn 15 14 0 (set (reg:DI 84 [ _9 ])
        (reg/f:DI 83 [ _7 ])) "queryTAD.c":130:23 -1
     (nil))

;; _10 = _9 >> 3;

(insn 16 15 0 (parallel [
            (set (reg:DI 85 [ _10 ])
                (lshiftrt:DI (reg:DI 84 [ _9 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":130:23 -1
     (nil))

;; _11 = _10 + 2147450880;

(insn 17 16 0 (parallel [
            (set (reg:DI 86 [ _11 ])
                (plus:DI (reg:DI 85 [ _10 ])
                    (const_int 2147450880 [0x7fff8000])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":130:23 -1
     (nil))

;; _12 = (signed char *) _11;

(insn 18 17 0 (set (reg/f:DI 87 [ _12 ])
        (reg:DI 86 [ _11 ])) "queryTAD.c":130:23 -1
     (nil))

;; _13 = *_12;

(insn 19 18 0 (set (reg:QI 88 [ _13 ])
        (mem:QI (reg/f:DI 87 [ _12 ]) [10 *_12+0 S1 A8])) "queryTAD.c":130:23 -1
     (nil))

;; if (_13 != 0)

(insn 20 19 21 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 88 [ _13 ])
            (const_int 0 [0]))) "queryTAD.c":130:23 -1
     (nil))

(jump_insn 21 20 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "queryTAD.c":130:23 -1
     (nil))

;; Generating RTL for gimple basic block 5

;; __builtin___asan_report_load8 (_9);

(insn 23 22 24 (set (reg:DI 5 di)
        (reg:DI 84 [ _9 ])) "queryTAD.c":130:23 -1
     (nil))

(call_insn 24 23 25 (call (mem:QI (symbol_ref:DI ("__asan_report_load8") [flags 0x41]  <function_decl 0x7fc58eea5900 __builtin___asan_report_load8>) [0 __builtin___asan_report_load8 S1 A8])
        (const_int 0 [0])) "queryTAD.c":130:23 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

(barrier 25 24 0)

;; Generating RTL for gimple basic block 6

;; 

(code_label 26 25 27 95 (nil) [0 uses])

(note 27 26 0 NOTE_INSN_BASIC_BLOCK)

;; _1 = years_3(D)->tail;

(insn 28 27 29 (set (reg/f:DI 90)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [6 years+0 S8 A64])) "queryTAD.c":130:23 -1
     (nil))

(insn 29 28 0 (set (reg/f:DI 82 [ _1 ])
        (mem/f:DI (plus:DI (reg/f:DI 90)
                (const_int 32 [0x20])) [6 years_3(D)->tail+0 S8 A64])) "queryTAD.c":130:23 -1
     (nil))

;; freeRecYears (_1);

(insn 30 29 31 (set (reg:DI 5 di)
        (reg/f:DI 82 [ _1 ])) "queryTAD.c":130:5 -1
     (nil))

(call_insn 31 30 0 (call (mem:QI (symbol_ref:DI ("freeRecYears") [flags 0x3]  <function_decl 0x7fc58ec06200 freeRecYears>) [0 freeRecYears S1 A8])
        (const_int 0 [0])) "queryTAD.c":130:5 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

;; free (years_3(D));

(insn 32 31 33 (set (reg:DI 91)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [6 years+0 S8 A64])) "queryTAD.c":131:5 -1
     (nil))

(insn 33 32 34 (set (reg:DI 5 di)
        (reg:DI 91)) "queryTAD.c":131:5 -1
     (nil))

(call_insn 34 33 0 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7fc58ee7d600 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) "queryTAD.c":131:5 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

;; Generating RTL for gimple basic block 7

;; <L2>:

(code_label 35 34 36 94 (nil) [0 uses])

(note 36 35 0 NOTE_INSN_BASIC_BLOCK)


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Forwarding edge 2->4 to 9 failed.
Forwarding edge 2->4 to 9 failed.
Redirecting jump 9 from 8 to 9.
Merging block 8 into block 7...
Merged blocks 7 and 8.
Merged 7 and 8 without moving.


try_optimize_cfg iteration 2

Forwarding edge 2->4 to 9 failed.
fix_loop_structure: fixing up loops for function


;;
;; Full RTL generated for this function:
;;
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 4, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [6 years+0 S8 A64])
        (reg:DI 5 di [ years ])) "queryTAD.c":126:40 -1
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [6 years+0 S8 A64])
            (const_int 0 [0]))) "queryTAD.c":127:7 -1
     (nil))
(jump_insn 7 6 8 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 11)
            (pc))) "queryTAD.c":127:7 -1
     (nil)
 -> 11)
;;  succ:       4 (FALLTHRU)
;;              5

;; basic block 4, loop depth 0, maybe hot
;;  prev block 2, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
(note 8 7 9 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(jump_insn 9 8 10 4 (set (pc)
        (label_ref:DI 37)) "queryTAD.c":128:9 660 {jump}
     (nil)
 -> 37)
;;  succ:       9 [always] 

(barrier 10 9 11)
;; basic block 5, loop depth 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL)
;;  pred:       2
(code_label 11 10 12 5 93 (nil) [1 uses])
(note 12 11 13 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 5 (set (reg/f:DI 89)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [6 years+0 S8 A64])) "queryTAD.c":130:23 -1
     (nil))
(insn 14 13 15 5 (parallel [
            (set (reg/f:DI 83 [ _7 ])
                (plus:DI (reg/f:DI 89)
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":130:23 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [6 years+0 S8 A64])
            (const_int 32 [0x20]))
        (nil)))
(insn 15 14 16 5 (set (reg:DI 84 [ _9 ])
        (reg/f:DI 83 [ _7 ])) "queryTAD.c":130:23 -1
     (nil))
(insn 16 15 17 5 (parallel [
            (set (reg:DI 85 [ _10 ])
                (lshiftrt:DI (reg:DI 84 [ _9 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":130:23 -1
     (nil))
(insn 17 16 18 5 (parallel [
            (set (reg:DI 86 [ _11 ])
                (plus:DI (reg:DI 85 [ _10 ])
                    (const_int 2147450880 [0x7fff8000])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":130:23 -1
     (nil))
(insn 18 17 19 5 (set (reg/f:DI 87 [ _12 ])
        (reg:DI 86 [ _11 ])) "queryTAD.c":130:23 -1
     (nil))
(insn 19 18 20 5 (set (reg:QI 88 [ _13 ])
        (mem:QI (reg/f:DI 87 [ _12 ]) [10 *_12+0 S1 A8])) "queryTAD.c":130:23 -1
     (nil))
(insn 20 19 21 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 88 [ _13 ])
            (const_int 0 [0]))) "queryTAD.c":130:23 -1
     (nil))
(jump_insn 21 20 22 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 26)
            (pc))) "queryTAD.c":130:23 -1
     (nil)
 -> 26)
;;  succ:       7 [100.0% (guessed)] 
;;              6 [0.0% (guessed)]  (FALLTHRU)

;; basic block 6, loop depth 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL)
;;  pred:       5 [0.0% (guessed)]  (FALLTHRU)
(note 22 21 23 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 23 22 24 6 (set (reg:DI 5 di)
        (reg:DI 84 [ _9 ])) "queryTAD.c":130:23 -1
     (nil))
(call_insn 24 23 25 6 (call (mem:QI (symbol_ref:DI ("__asan_report_load8") [flags 0x41]  <function_decl 0x7fc58eea5900 __builtin___asan_report_load8>) [0 __builtin___asan_report_load8 S1 A8])
        (const_int 0 [0])) "queryTAD.c":130:23 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:      

(barrier 25 24 26)
;; basic block 7, loop depth 0, maybe hot
;;  prev block 6, next block 9, flags: (NEW, REACHABLE, RTL)
;;  pred:       5 [100.0% (guessed)] 
(code_label 26 25 27 7 95 (nil) [1 uses])
(note 27 26 28 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 28 27 29 7 (set (reg/f:DI 90)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [6 years+0 S8 A64])) "queryTAD.c":130:23 -1
     (nil))
(insn 29 28 30 7 (set (reg/f:DI 82 [ _1 ])
        (mem/f:DI (plus:DI (reg/f:DI 90)
                (const_int 32 [0x20])) [6 years_3(D)->tail+0 S8 A64])) "queryTAD.c":130:23 -1
     (nil))
(insn 30 29 31 7 (set (reg:DI 5 di)
        (reg/f:DI 82 [ _1 ])) "queryTAD.c":130:5 -1
     (nil))
(call_insn 31 30 32 7 (call (mem:QI (symbol_ref:DI ("freeRecYears") [flags 0x3]  <function_decl 0x7fc58ec06200 freeRecYears>) [0 freeRecYears S1 A8])
        (const_int 0 [0])) "queryTAD.c":130:5 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 32 31 33 7 (set (reg:DI 91)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [6 years+0 S8 A64])) "queryTAD.c":131:5 -1
     (nil))
(insn 33 32 34 7 (set (reg:DI 5 di)
        (reg:DI 91)) "queryTAD.c":131:5 -1
     (nil))
(call_insn 34 33 37 7 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7fc58ee7d600 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) "queryTAD.c":131:5 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       9 (FALLTHRU)

;; basic block 9, loop depth 0, maybe hot
;;  prev block 7, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       7 (FALLTHRU)
;;              4 [always] 
(code_label 37 34 38 9 92 (nil) [1 uses])
(note 38 37 0 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [always]  (FALLTHRU)


;; Function freeRecSen (freeRecSen, funcdef_no=10, decl_uid=3465, cgraph_uid=11, symbol_order=10)

freeRecSen (struct TNodeS * l)
{
  struct Nsensor * _1;
  struct Nsensor * * _7;
  unsigned long _9;
  unsigned long _10;
  unsigned long _11;
  signed char * _12;
  signed char _13;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  if (l_3(D) == 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]
;;    succ:       3
;;                4

;;   basic block 3, loop depth 0
;;    pred:       2
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 7>; [INV]
;;    succ:       7

;;   basic block 4, loop depth 0
;;    pred:       2
  _7 = &l_3(D)->tail;
  _9 = (unsigned long) _7;
  _10 = _9 >> 3;
  _11 = _10 + 2147450880;
  _12 = (signed char *) _11;
  _13 = *_12;
  if (_13 != 0)
    goto <bb 5>; [0.05%]
  else
    goto <bb 6>; [99.95%]
;;    succ:       6
;;                5

;;   basic block 5, loop depth 0
;;    pred:       4
  __builtin___asan_report_load8 (_9);
;;    succ:      

;;   basic block 6, loop depth 0
;;    pred:       4
  _1 = l_3(D)->tail;
  freeRecSen (_1);
  free (l_3(D));
;;    succ:       7

;;   basic block 7, loop depth 0
;;    pred:       3
;;                6
<L2>:
  return;
;;    succ:       EXIT

}



Partition map 

Partition 1 (_1 - 1 )
Partition 3 (l_3(D) - 3 )
Partition 7 (_7 - 7 )
Partition 9 (_9 - 9 )
Partition 10 (_10 - 10 )
Partition 11 (_11 - 11 )
Partition 12 (_12 - 12 )
Partition 13 (_13 - 13 )


Coalescible Partition map 

Partition 0, base 0 (l_3(D) - 3 )


Partition map 

Partition 0 (l_3(D) - 3 )


Conflict graph:

After sorting:
Coalesce List:

Partition map 

Partition 0 (l_3(D) - 3 )

After Coalescing:

Partition map 

Partition 0 (_1 - 1 )
Partition 1 (l_3(D) - 3 )
Partition 2 (_7 - 7 )
Partition 3 (_9 - 9 )
Partition 4 (_10 - 10 )
Partition 5 (_11 - 11 )
Partition 6 (_12 - 12 )
Partition 7 (_13 - 13 )

freeRecSen (struct TNodeS * l)
{
  struct Nsensor * _1;
  struct Nsensor * * _7;
  unsigned long _9;
  unsigned long _10;
  unsigned long _11;
  signed char * _12;
  signed char _13;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  if (l_3(D) == 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]
;;    succ:       3
;;                4

;;   basic block 3, loop depth 0
;;    pred:       2
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 7>; [INV]
;;    succ:       7

;;   basic block 4, loop depth 0
;;    pred:       2
  _7 = &l_3(D)->tail;
  _9 = (unsigned long) _7;
  _10 = _9 >> 3;
  _11 = _10 + 2147450880;
  _12 = (signed char *) _11;
  _13 = *_12;
  if (_13 != 0)
    goto <bb 5>; [0.05%]
  else
    goto <bb 6>; [99.95%]
;;    succ:       6
;;                5

;;   basic block 5, loop depth 0
;;    pred:       4
  __builtin___asan_report_load8 (_9);
;;    succ:      

;;   basic block 6, loop depth 0
;;    pred:       4
  _1 = l_3(D)->tail;
  freeRecSen (_1);
  free (l_3(D));
;;    succ:       7

;;   basic block 7, loop depth 0
;;    pred:       3
;;                6
<L2>:
  return;
;;    succ:       EXIT

}



;; Generating RTL for gimple basic block 2

;; if (l_3(D) == 0B)

(insn 6 5 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [8 l+0 S8 A64])
            (const_int 0 [0]))) "queryTAD.c":134:7 -1
     (nil))

(jump_insn 7 6 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "queryTAD.c":134:7 -1
     (nil))

;; Generating RTL for gimple basic block 3

;; // predicted unlikely by early return (on trees) predictor.

(nil)

;; Generating RTL for gimple basic block 4

;; 

(code_label 11 10 12 98 (nil) [0 uses])

(note 12 11 0 NOTE_INSN_BASIC_BLOCK)

;; _7 = &l_3(D)->tail;

(insn 13 12 14 (set (reg/f:DI 89)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [8 l+0 S8 A64])) "queryTAD.c":137:17 -1
     (nil))

(insn 14 13 0 (parallel [
            (set (reg/f:DI 83 [ _7 ])
                (plus:DI (reg/f:DI 89)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":137:17 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [8 l+0 S8 A64])
            (const_int 16 [0x10]))
        (nil)))

;; _9 = (unsigned long) _7;

(insn 15 14 0 (set (reg:DI 84 [ _9 ])
        (reg/f:DI 83 [ _7 ])) "queryTAD.c":137:17 -1
     (nil))

;; _10 = _9 >> 3;

(insn 16 15 0 (parallel [
            (set (reg:DI 85 [ _10 ])
                (lshiftrt:DI (reg:DI 84 [ _9 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":137:17 -1
     (nil))

;; _11 = _10 + 2147450880;

(insn 17 16 0 (parallel [
            (set (reg:DI 86 [ _11 ])
                (plus:DI (reg:DI 85 [ _10 ])
                    (const_int 2147450880 [0x7fff8000])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":137:17 -1
     (nil))

;; _12 = (signed char *) _11;

(insn 18 17 0 (set (reg/f:DI 87 [ _12 ])
        (reg:DI 86 [ _11 ])) "queryTAD.c":137:17 -1
     (nil))

;; _13 = *_12;

(insn 19 18 0 (set (reg:QI 88 [ _13 ])
        (mem:QI (reg/f:DI 87 [ _12 ]) [10 *_12+0 S1 A8])) "queryTAD.c":137:17 -1
     (nil))

;; if (_13 != 0)

(insn 20 19 21 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 88 [ _13 ])
            (const_int 0 [0]))) "queryTAD.c":137:17 -1
     (nil))

(jump_insn 21 20 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "queryTAD.c":137:17 -1
     (nil))

;; Generating RTL for gimple basic block 5

;; __builtin___asan_report_load8 (_9);

(insn 23 22 24 (set (reg:DI 5 di)
        (reg:DI 84 [ _9 ])) "queryTAD.c":137:17 -1
     (nil))

(call_insn 24 23 25 (call (mem:QI (symbol_ref:DI ("__asan_report_load8") [flags 0x41]  <function_decl 0x7fc58eea5900 __builtin___asan_report_load8>) [0 __builtin___asan_report_load8 S1 A8])
        (const_int 0 [0])) "queryTAD.c":137:17 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

(barrier 25 24 0)

;; Generating RTL for gimple basic block 6

;; 

(code_label 26 25 27 100 (nil) [0 uses])

(note 27 26 0 NOTE_INSN_BASIC_BLOCK)

;; _1 = l_3(D)->tail;

(insn 28 27 29 (set (reg/f:DI 90)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [8 l+0 S8 A64])) "queryTAD.c":137:17 -1
     (nil))

(insn 29 28 0 (set (reg/f:DI 82 [ _1 ])
        (mem/f:DI (plus:DI (reg/f:DI 90)
                (const_int 16 [0x10])) [8 l_3(D)->tail+0 S8 A64])) "queryTAD.c":137:17 -1
     (nil))

;; freeRecSen (_1);

(insn 30 29 31 (set (reg:DI 5 di)
        (reg/f:DI 82 [ _1 ])) "queryTAD.c":137:5 -1
     (nil))

(call_insn 31 30 0 (call (mem:QI (symbol_ref:DI ("freeRecSen") [flags 0x3]  <function_decl 0x7fc58ec06600 freeRecSen>) [0 freeRecSen S1 A8])
        (const_int 0 [0])) "queryTAD.c":137:5 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

;; free (l_3(D));

(insn 32 31 33 (set (reg:DI 91)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [8 l+0 S8 A64])) "queryTAD.c":138:5 -1
     (nil))

(insn 33 32 34 (set (reg:DI 5 di)
        (reg:DI 91)) "queryTAD.c":138:5 -1
     (nil))

(call_insn 34 33 0 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7fc58ee7d600 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) "queryTAD.c":138:5 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

;; Generating RTL for gimple basic block 7

;; <L2>:

(code_label 35 34 36 99 (nil) [0 uses])

(note 36 35 0 NOTE_INSN_BASIC_BLOCK)


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Forwarding edge 2->4 to 9 failed.
Forwarding edge 2->4 to 9 failed.
Redirecting jump 9 from 8 to 9.
Merging block 8 into block 7...
Merged blocks 7 and 8.
Merged 7 and 8 without moving.


try_optimize_cfg iteration 2

Forwarding edge 2->4 to 9 failed.
fix_loop_structure: fixing up loops for function


;;
;; Full RTL generated for this function:
;;
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 4, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [8 l+0 S8 A64])
        (reg:DI 5 di [ l ])) "queryTAD.c":133:35 -1
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [8 l+0 S8 A64])
            (const_int 0 [0]))) "queryTAD.c":134:7 -1
     (nil))
(jump_insn 7 6 8 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 11)
            (pc))) "queryTAD.c":134:7 -1
     (nil)
 -> 11)
;;  succ:       4 (FALLTHRU)
;;              5

;; basic block 4, loop depth 0, maybe hot
;;  prev block 2, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
(note 8 7 9 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(jump_insn 9 8 10 4 (set (pc)
        (label_ref:DI 37)) "queryTAD.c":135:9 660 {jump}
     (nil)
 -> 37)
;;  succ:       9 [always] 

(barrier 10 9 11)
;; basic block 5, loop depth 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL)
;;  pred:       2
(code_label 11 10 12 5 98 (nil) [1 uses])
(note 12 11 13 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 5 (set (reg/f:DI 89)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [8 l+0 S8 A64])) "queryTAD.c":137:17 -1
     (nil))
(insn 14 13 15 5 (parallel [
            (set (reg/f:DI 83 [ _7 ])
                (plus:DI (reg/f:DI 89)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":137:17 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [8 l+0 S8 A64])
            (const_int 16 [0x10]))
        (nil)))
(insn 15 14 16 5 (set (reg:DI 84 [ _9 ])
        (reg/f:DI 83 [ _7 ])) "queryTAD.c":137:17 -1
     (nil))
(insn 16 15 17 5 (parallel [
            (set (reg:DI 85 [ _10 ])
                (lshiftrt:DI (reg:DI 84 [ _9 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":137:17 -1
     (nil))
(insn 17 16 18 5 (parallel [
            (set (reg:DI 86 [ _11 ])
                (plus:DI (reg:DI 85 [ _10 ])
                    (const_int 2147450880 [0x7fff8000])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":137:17 -1
     (nil))
(insn 18 17 19 5 (set (reg/f:DI 87 [ _12 ])
        (reg:DI 86 [ _11 ])) "queryTAD.c":137:17 -1
     (nil))
(insn 19 18 20 5 (set (reg:QI 88 [ _13 ])
        (mem:QI (reg/f:DI 87 [ _12 ]) [10 *_12+0 S1 A8])) "queryTAD.c":137:17 -1
     (nil))
(insn 20 19 21 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 88 [ _13 ])
            (const_int 0 [0]))) "queryTAD.c":137:17 -1
     (nil))
(jump_insn 21 20 22 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 26)
            (pc))) "queryTAD.c":137:17 -1
     (nil)
 -> 26)
;;  succ:       7 [100.0% (guessed)] 
;;              6 [0.0% (guessed)]  (FALLTHRU)

;; basic block 6, loop depth 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL)
;;  pred:       5 [0.0% (guessed)]  (FALLTHRU)
(note 22 21 23 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 23 22 24 6 (set (reg:DI 5 di)
        (reg:DI 84 [ _9 ])) "queryTAD.c":137:17 -1
     (nil))
(call_insn 24 23 25 6 (call (mem:QI (symbol_ref:DI ("__asan_report_load8") [flags 0x41]  <function_decl 0x7fc58eea5900 __builtin___asan_report_load8>) [0 __builtin___asan_report_load8 S1 A8])
        (const_int 0 [0])) "queryTAD.c":137:17 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:      

(barrier 25 24 26)
;; basic block 7, loop depth 0, maybe hot
;;  prev block 6, next block 9, flags: (NEW, REACHABLE, RTL)
;;  pred:       5 [100.0% (guessed)] 
(code_label 26 25 27 7 100 (nil) [1 uses])
(note 27 26 28 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 28 27 29 7 (set (reg/f:DI 90)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [8 l+0 S8 A64])) "queryTAD.c":137:17 -1
     (nil))
(insn 29 28 30 7 (set (reg/f:DI 82 [ _1 ])
        (mem/f:DI (plus:DI (reg/f:DI 90)
                (const_int 16 [0x10])) [8 l_3(D)->tail+0 S8 A64])) "queryTAD.c":137:17 -1
     (nil))
(insn 30 29 31 7 (set (reg:DI 5 di)
        (reg/f:DI 82 [ _1 ])) "queryTAD.c":137:5 -1
     (nil))
(call_insn 31 30 32 7 (call (mem:QI (symbol_ref:DI ("freeRecSen") [flags 0x3]  <function_decl 0x7fc58ec06600 freeRecSen>) [0 freeRecSen S1 A8])
        (const_int 0 [0])) "queryTAD.c":137:5 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 32 31 33 7 (set (reg:DI 91)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [8 l+0 S8 A64])) "queryTAD.c":138:5 -1
     (nil))
(insn 33 32 34 7 (set (reg:DI 5 di)
        (reg:DI 91)) "queryTAD.c":138:5 -1
     (nil))
(call_insn 34 33 37 7 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7fc58ee7d600 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) "queryTAD.c":138:5 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       9 (FALLTHRU)

;; basic block 9, loop depth 0, maybe hot
;;  prev block 7, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       7 (FALLTHRU)
;;              4 [always] 
(code_label 37 34 38 9 97 (nil) [1 uses])
(note 38 37 0 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [always]  (FALLTHRU)


;; Function freeQuery (freeQuery, funcdef_no=11, decl_uid=3384, cgraph_uid=12, symbol_order=11)

freeQuery (struct queryCDT * q)
{
  int j;
  struct TSensor * _1;
  long unsigned int _2;
  long unsigned int _3;
  struct TSensor * _4;
  char * _5;
  struct TYear * _6;
  struct TNodeS * _7;
  struct TSensor * _8;
  struct TSensor * * _20;
  char * * _21;
  struct TYear * * _22;
  struct TNodeS * * _23;
  struct TSensor * * _24;
  unsigned long _30;
  unsigned long _31;
  unsigned long _32;
  signed char * _33;
  signed char _34;
  unsigned long _35;
  unsigned long _36;
  unsigned long _37;
  signed char * _38;
  signed char _39;
  unsigned long _40;
  unsigned long _41;
  unsigned long _42;
  signed char * _43;
  signed char _44;
  unsigned long _45;
  unsigned long _46;
  unsigned long _47;
  signed char * _48;
  signed char _49;
  unsigned long _50;
  unsigned long _51;
  unsigned long _52;
  signed char * _53;
  signed char _54;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  j_11 = 0;
  goto <bb 8>; [INV]
;;    succ:       8

;;   basic block 3, loop depth 1
;;    pred:       8
  _20 = &q_13(D)->sensorsID;
  _30 = (unsigned long) _20;
  _31 = _30 >> 3;
  _32 = _31 + 2147450880;
  _33 = (signed char *) _32;
  _34 = *_33;
  if (_34 != 0)
    goto <bb 4>; [0.05%]
  else
    goto <bb 5>; [99.95%]
;;    succ:       5
;;                4

;;   basic block 4, loop depth 0
;;    pred:       3
  __builtin___asan_report_load8 (_30);
;;    succ:      

;;   basic block 5, loop depth 1
;;    pred:       3
  _1 = q_13(D)->sensorsID;
  _2 = (long unsigned int) j_9;
  _3 = _2 * 80;
  _4 = _1 + _3;
  _21 = &_4->name;
  _35 = (unsigned long) _21;
  _36 = _35 >> 3;
  _37 = _36 + 2147450880;
  _38 = (signed char *) _37;
  _39 = *_38;
  if (_39 != 0)
    goto <bb 6>; [0.05%]
  else
    goto <bb 7>; [99.95%]
;;    succ:       7
;;                6

;;   basic block 6, loop depth 0
;;    pred:       5
  __builtin___asan_report_load8 (_35);
;;    succ:      

;;   basic block 7, loop depth 1
;;    pred:       5
  _5 = _4->name;
  free (_5);
  j_19 = j_9 + 1;
;;    succ:       8

;;   basic block 8, loop depth 1
;;    pred:       2
;;                7
  # j_9 = PHI <j_11(2), j_19(7)>
  if (j_9 <= 85)
    goto <bb 3>; [INV]
  else
    goto <bb 9>; [INV]
;;    succ:       3
;;                9

;;   basic block 9, loop depth 0
;;    pred:       8
  _22 = &q_13(D)->years;
  _40 = (unsigned long) _22;
  _41 = _40 >> 3;
  _42 = _41 + 2147450880;
  _43 = (signed char *) _42;
  _44 = *_43;
  if (_44 != 0)
    goto <bb 10>; [0.05%]
  else
    goto <bb 11>; [99.95%]
;;    succ:       11
;;                10

;;   basic block 10, loop depth 0
;;    pred:       9
  __builtin___asan_report_load8 (_40);
;;    succ:      

;;   basic block 11, loop depth 0
;;    pred:       9
  _6 = q_13(D)->years;
  freeRecYears (_6);
  _23 = &q_13(D)->sensorsP;
  _45 = (unsigned long) _23;
  _46 = _45 >> 3;
  _47 = _46 + 2147450880;
  _48 = (signed char *) _47;
  _49 = *_48;
  if (_49 != 0)
    goto <bb 12>; [0.05%]
  else
    goto <bb 13>; [99.95%]
;;    succ:       13
;;                12

;;   basic block 12, loop depth 0
;;    pred:       11
  __builtin___asan_report_load8 (_45);
;;    succ:      

;;   basic block 13, loop depth 0
;;    pred:       11
  _7 = q_13(D)->sensorsP;
  freeRecSen (_7);
  _24 = &q_13(D)->sensorsID;
  _50 = (unsigned long) _24;
  _51 = _50 >> 3;
  _52 = _51 + 2147450880;
  _53 = (signed char *) _52;
  _54 = *_53;
  if (_54 != 0)
    goto <bb 14>; [0.05%]
  else
    goto <bb 15>; [99.95%]
;;    succ:       15
;;                14

;;   basic block 14, loop depth 0
;;    pred:       13
  __builtin___asan_report_load8 (_50);
;;    succ:      

;;   basic block 15, loop depth 0
;;    pred:       13
  _8 = q_13(D)->sensorsID;
  free (_8);
  free (q_13(D));
  return;
;;    succ:       EXIT

}



Partition map 

Partition 1 (_1 - 1 )
Partition 2 (_2 - 2 )
Partition 3 (_3 - 3 )
Partition 4 (_4 - 4 )
Partition 5 (_5 - 5 )
Partition 6 (_6 - 6 )
Partition 7 (_7 - 7 )
Partition 8 (_8 - 8 )
Partition 9 (j_9 - 9 )
Partition 11 (j_11 - 11 )
Partition 13 (q_13(D) - 13 )
Partition 19 (j_19 - 19 )
Partition 20 (_20 - 20 )
Partition 21 (_21 - 21 )
Partition 22 (_22 - 22 )
Partition 23 (_23 - 23 )
Partition 24 (_24 - 24 )
Partition 30 (_30 - 30 )
Partition 31 (_31 - 31 )
Partition 32 (_32 - 32 )
Partition 33 (_33 - 33 )
Partition 34 (_34 - 34 )
Partition 35 (_35 - 35 )
Partition 36 (_36 - 36 )
Partition 37 (_37 - 37 )
Partition 38 (_38 - 38 )
Partition 39 (_39 - 39 )
Partition 40 (_40 - 40 )
Partition 41 (_41 - 41 )
Partition 42 (_42 - 42 )
Partition 43 (_43 - 43 )
Partition 44 (_44 - 44 )
Partition 45 (_45 - 45 )
Partition 46 (_46 - 46 )
Partition 47 (_47 - 47 )
Partition 48 (_48 - 48 )
Partition 49 (_49 - 49 )
Partition 50 (_50 - 50 )
Partition 51 (_51 - 51 )
Partition 52 (_52 - 52 )
Partition 53 (_53 - 53 )
Partition 54 (_54 - 54 )


Coalescible Partition map 

Partition 0, base 0 (j_9 - 9 11 19 )
Partition 2, base 1 (q_13(D) - 13 )


Partition map 

Partition 0 (j_9 - 9 )
Partition 1 (j_11 - 11 )
Partition 2 (q_13(D) - 13 )
Partition 3 (j_19 - 19 )


Conflict graph:

After sorting:
Sorted Coalesce list:
(2147483646, 0) j_9 <-> j_11
(2147483646, 0) j_9 <-> j_19

Partition map 

Partition 0 (j_9 - 9 )
Partition 1 (j_11 - 11 )
Partition 2 (q_13(D) - 13 )
Partition 3 (j_19 - 19 )

Coalesce list: (9)j_9 & (11)j_11 [map: 0, 1] : Success -> 0
Coalesce list: (9)j_9 & (19)j_19 [map: 0, 3] : Success -> 0
After Coalescing:

Partition map 

Partition 0 (_1 - 1 )
Partition 1 (_2 - 2 )
Partition 2 (_3 - 3 )
Partition 3 (_4 - 4 )
Partition 4 (_5 - 5 )
Partition 5 (_6 - 6 )
Partition 6 (_7 - 7 )
Partition 7 (_8 - 8 )
Partition 8 (j_9 - 9 11 19 )
Partition 9 (q_13(D) - 13 )
Partition 10 (_20 - 20 )
Partition 11 (_21 - 21 )
Partition 12 (_22 - 22 )
Partition 13 (_23 - 23 )
Partition 14 (_24 - 24 )
Partition 15 (_30 - 30 )
Partition 16 (_31 - 31 )
Partition 17 (_32 - 32 )
Partition 18 (_33 - 33 )
Partition 19 (_34 - 34 )
Partition 20 (_35 - 35 )
Partition 21 (_36 - 36 )
Partition 22 (_37 - 37 )
Partition 23 (_38 - 38 )
Partition 24 (_39 - 39 )
Partition 25 (_40 - 40 )
Partition 26 (_41 - 41 )
Partition 27 (_42 - 42 )
Partition 28 (_43 - 43 )
Partition 29 (_44 - 44 )
Partition 30 (_45 - 45 )
Partition 31 (_46 - 46 )
Partition 32 (_47 - 47 )
Partition 33 (_48 - 48 )
Partition 34 (_49 - 49 )
Partition 35 (_50 - 50 )
Partition 36 (_51 - 51 )
Partition 37 (_52 - 52 )
Partition 38 (_53 - 53 )
Partition 39 (_54 - 54 )

freeQuery (struct queryCDT * q)
{
  int j;
  struct TSensor * _1;
  long unsigned int _2;
  long unsigned int _3;
  struct TSensor * _4;
  char * _5;
  struct TYear * _6;
  struct TNodeS * _7;
  struct TSensor * _8;
  struct TSensor * * _20;
  char * * _21;
  struct TYear * * _22;
  struct TNodeS * * _23;
  struct TSensor * * _24;
  unsigned long _30;
  unsigned long _31;
  unsigned long _32;
  signed char * _33;
  signed char _34;
  unsigned long _35;
  unsigned long _36;
  unsigned long _37;
  signed char * _38;
  signed char _39;
  unsigned long _40;
  unsigned long _41;
  unsigned long _42;
  signed char * _43;
  signed char _44;
  unsigned long _45;
  unsigned long _46;
  unsigned long _47;
  signed char * _48;
  signed char _49;
  unsigned long _50;
  unsigned long _51;
  unsigned long _52;
  signed char * _53;
  signed char _54;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  j_11 = 0;
  goto <bb 8>; [INV]
;;    succ:       8

;;   basic block 3, loop depth 1
;;    pred:       8
  _20 = &q_13(D)->sensorsID;
  _30 = (unsigned long) _20;
  _31 = _30 >> 3;
  _32 = _31 + 2147450880;
  _33 = (signed char *) _32;
  _34 = *_33;
  if (_34 != 0)
    goto <bb 4>; [0.05%]
  else
    goto <bb 5>; [99.95%]
;;    succ:       5
;;                4

;;   basic block 4, loop depth 0
;;    pred:       3
  __builtin___asan_report_load8 (_30);
;;    succ:      

;;   basic block 5, loop depth 1
;;    pred:       3
  _1 = q_13(D)->sensorsID;
  _2 = (long unsigned int) j_9;
  _3 = _2 * 80;
  _4 = _1 + _3;
  _21 = &_4->name;
  _35 = (unsigned long) _21;
  _36 = _35 >> 3;
  _37 = _36 + 2147450880;
  _38 = (signed char *) _37;
  _39 = *_38;
  if (_39 != 0)
    goto <bb 6>; [0.05%]
  else
    goto <bb 7>; [99.95%]
;;    succ:       7
;;                6

;;   basic block 6, loop depth 0
;;    pred:       5
  __builtin___asan_report_load8 (_35);
;;    succ:      

;;   basic block 7, loop depth 1
;;    pred:       5
  _5 = _4->name;
  free (_5);
  j_19 = j_9 + 1;
;;    succ:       8

;;   basic block 8, loop depth 1
;;    pred:       2
;;                7
  # j_9 = PHI <j_11(2), j_19(7)>
  if (j_9 <= 85)
    goto <bb 3>; [INV]
  else
    goto <bb 9>; [INV]
;;    succ:       3
;;                9

;;   basic block 9, loop depth 0
;;    pred:       8
  _22 = &q_13(D)->years;
  _40 = (unsigned long) _22;
  _41 = _40 >> 3;
  _42 = _41 + 2147450880;
  _43 = (signed char *) _42;
  _44 = *_43;
  if (_44 != 0)
    goto <bb 10>; [0.05%]
  else
    goto <bb 11>; [99.95%]
;;    succ:       11
;;                10

;;   basic block 10, loop depth 0
;;    pred:       9
  __builtin___asan_report_load8 (_40);
;;    succ:      

;;   basic block 11, loop depth 0
;;    pred:       9
  _6 = q_13(D)->years;
  freeRecYears (_6);
  _23 = &q_13(D)->sensorsP;
  _45 = (unsigned long) _23;
  _46 = _45 >> 3;
  _47 = _46 + 2147450880;
  _48 = (signed char *) _47;
  _49 = *_48;
  if (_49 != 0)
    goto <bb 12>; [0.05%]
  else
    goto <bb 13>; [99.95%]
;;    succ:       13
;;                12

;;   basic block 12, loop depth 0
;;    pred:       11
  __builtin___asan_report_load8 (_45);
;;    succ:      

;;   basic block 13, loop depth 0
;;    pred:       11
  _7 = q_13(D)->sensorsP;
  freeRecSen (_7);
  _24 = &q_13(D)->sensorsID;
  _50 = (unsigned long) _24;
  _51 = _50 >> 3;
  _52 = _51 + 2147450880;
  _53 = (signed char *) _52;
  _54 = *_53;
  if (_54 != 0)
    goto <bb 14>; [0.05%]
  else
    goto <bb 15>; [99.95%]
;;    succ:       15
;;                14

;;   basic block 14, loop depth 0
;;    pred:       13
  __builtin___asan_report_load8 (_50);
;;    succ:      

;;   basic block 15, loop depth 0
;;    pred:       13
  _8 = q_13(D)->sensorsID;
  free (_8);
  free (q_13(D));
  return;
;;    succ:       EXIT

}


Partition 0: size 4 align 4
	j_9

;; Generating RTL for gimple basic block 2

;; j_11 = 0;

(insn 6 5 0 (set (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [13 j+0 S4 A32])
        (const_int 0 [0])) "queryTAD.c":142:14 -1
     (nil))

;; Generating RTL for gimple basic block 3

;; _20 = &q_13(D)->sensorsID;

(insn 10 9 11 (set (reg/f:DI 120)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [11 q+0 S8 A64])) "queryTAD.c":143:15 -1
     (nil))

(insn 11 10 0 (parallel [
            (set (reg/f:DI 90 [ _20 ])
                (plus:DI (reg/f:DI 120)
                    (const_int 24 [0x18])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":143:15 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [11 q+0 S8 A64])
            (const_int 24 [0x18]))
        (nil)))

;; _30 = (unsigned long) _20;

(insn 12 11 0 (set (reg:DI 95 [ _30 ])
        (reg/f:DI 90 [ _20 ])) "queryTAD.c":143:15 -1
     (nil))

;; _31 = _30 >> 3;

(insn 13 12 0 (parallel [
            (set (reg:DI 96 [ _31 ])
                (lshiftrt:DI (reg:DI 95 [ _30 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":143:15 -1
     (nil))

;; _32 = _31 + 2147450880;

(insn 14 13 0 (parallel [
            (set (reg:DI 97 [ _32 ])
                (plus:DI (reg:DI 96 [ _31 ])
                    (const_int 2147450880 [0x7fff8000])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":143:15 -1
     (nil))

;; _33 = (signed char *) _32;

(insn 15 14 0 (set (reg/f:DI 98 [ _33 ])
        (reg:DI 97 [ _32 ])) "queryTAD.c":143:15 -1
     (nil))

;; _34 = *_33;

(insn 16 15 0 (set (reg:QI 99 [ _34 ])
        (mem:QI (reg/f:DI 98 [ _33 ]) [10 *_33+0 S1 A8])) "queryTAD.c":143:15 -1
     (nil))

;; if (_34 != 0)

(insn 17 16 18 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 99 [ _34 ])
            (const_int 0 [0]))) "queryTAD.c":143:15 -1
     (nil))

(jump_insn 18 17 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "queryTAD.c":143:15 -1
     (nil))

;; Generating RTL for gimple basic block 4

;; __builtin___asan_report_load8 (_30);

(insn 20 19 21 (set (reg:DI 5 di)
        (reg:DI 95 [ _30 ])) "queryTAD.c":143:15 -1
     (nil))

(call_insn 21 20 22 (call (mem:QI (symbol_ref:DI ("__asan_report_load8") [flags 0x41]  <function_decl 0x7fc58eea5900 __builtin___asan_report_load8>) [0 __builtin___asan_report_load8 S1 A8])
        (const_int 0 [0])) "queryTAD.c":143:15 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

(barrier 22 21 0)

;; Generating RTL for gimple basic block 5

;; 

(code_label 23 22 24 104 (nil) [0 uses])

(note 24 23 0 NOTE_INSN_BASIC_BLOCK)

;; _1 = q_13(D)->sensorsID;

(insn 25 24 26 (set (reg/f:DI 121)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [11 q+0 S8 A64])) "queryTAD.c":143:15 -1
     (nil))

(insn 26 25 0 (set (reg/f:DI 82 [ _1 ])
        (mem/f:DI (plus:DI (reg/f:DI 121)
                (const_int 24 [0x18])) [7 q_13(D)->sensorsID+0 S8 A64])) "queryTAD.c":143:15 -1
     (nil))

;; _2 = (long unsigned int) j_9;

(insn 27 26 28 (set (reg:SI 122)
        (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [13 j+0 S4 A32])) "queryTAD.c":143:26 -1
     (nil))

(insn 28 27 0 (set (reg:DI 83 [ _2 ])
        (sign_extend:DI (reg:SI 122))) "queryTAD.c":143:26 -1
     (nil))

;; _3 = _2 * 80;

(insn 29 28 30 (set (reg:DI 123)
        (reg:DI 83 [ _2 ])) "queryTAD.c":143:26 -1
     (nil))

(insn 30 29 31 (parallel [
            (set (reg:DI 123)
                (ashift:DI (reg:DI 123)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":143:26 -1
     (nil))

(insn 31 30 32 (parallel [
            (set (reg:DI 123)
                (plus:DI (reg:DI 123)
                    (reg:DI 83 [ _2 ])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":143:26 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 83 [ _2 ])
            (const_int 5 [0x5]))
        (nil)))

(insn 32 31 33 (parallel [
            (set (reg:DI 124)
                (ashift:DI (reg:DI 123)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":143:26 -1
     (nil))

(insn 33 32 34 (set (reg:DI 123)
        (reg:DI 124)) "queryTAD.c":143:26 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 83 [ _2 ])
            (const_int 80 [0x50]))
        (nil)))

(insn 34 33 0 (set (reg:DI 84 [ _3 ])
        (reg:DI 123)) "queryTAD.c":143:26 -1
     (nil))

;; _4 = _1 + _3;

(insn 35 34 0 (parallel [
            (set (reg/f:DI 85 [ _4 ])
                (plus:DI (reg/f:DI 82 [ _1 ])
                    (reg:DI 84 [ _3 ])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":143:26 -1
     (nil))

;; _21 = &_4->name;

(insn 36 35 0 (parallel [
            (set (reg/f:DI 91 [ _21 ])
                (plus:DI (reg/f:DI 85 [ _4 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":143:29 -1
     (nil))

;; _35 = (unsigned long) _21;

(insn 37 36 0 (set (reg:DI 100 [ _35 ])
        (reg/f:DI 91 [ _21 ])) "queryTAD.c":143:29 -1
     (nil))

;; _36 = _35 >> 3;

(insn 38 37 0 (parallel [
            (set (reg:DI 101 [ _36 ])
                (lshiftrt:DI (reg:DI 100 [ _35 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":143:29 -1
     (nil))

;; _37 = _36 + 2147450880;

(insn 39 38 0 (parallel [
            (set (reg:DI 102 [ _37 ])
                (plus:DI (reg:DI 101 [ _36 ])
                    (const_int 2147450880 [0x7fff8000])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":143:29 -1
     (nil))

;; _38 = (signed char *) _37;

(insn 40 39 0 (set (reg/f:DI 103 [ _38 ])
        (reg:DI 102 [ _37 ])) "queryTAD.c":143:29 -1
     (nil))

;; _39 = *_38;

(insn 41 40 0 (set (reg:QI 104 [ _39 ])
        (mem:QI (reg/f:DI 103 [ _38 ]) [10 *_38+0 S1 A8])) "queryTAD.c":143:29 -1
     (nil))

;; if (_39 != 0)

(insn 42 41 43 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 104 [ _39 ])
            (const_int 0 [0]))) "queryTAD.c":143:29 -1
     (nil))

(jump_insn 43 42 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "queryTAD.c":143:29 -1
     (nil))

;; Generating RTL for gimple basic block 6

;; __builtin___asan_report_load8 (_35);

(insn 45 44 46 (set (reg:DI 5 di)
        (reg:DI 100 [ _35 ])) "queryTAD.c":143:29 -1
     (nil))

(call_insn 46 45 47 (call (mem:QI (symbol_ref:DI ("__asan_report_load8") [flags 0x41]  <function_decl 0x7fc58eea5900 __builtin___asan_report_load8>) [0 __builtin___asan_report_load8 S1 A8])
        (const_int 0 [0])) "queryTAD.c":143:29 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

(barrier 47 46 0)

;; Generating RTL for gimple basic block 7

;; 

(code_label 48 47 49 105 (nil) [0 uses])

(note 49 48 0 NOTE_INSN_BASIC_BLOCK)

;; _5 = _4->name;

(insn 50 49 0 (set (reg/f:DI 86 [ _5 ])
        (mem/f:DI (plus:DI (reg/f:DI 85 [ _4 ])
                (const_int 8 [0x8])) [3 _4->name+0 S8 A64])) "queryTAD.c":143:29 -1
     (nil))

;; free (_5);

(insn 51 50 52 (set (reg:DI 5 di)
        (reg/f:DI 86 [ _5 ])) "queryTAD.c":143:9 -1
     (nil))

(call_insn 52 51 0 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7fc58ee7d600 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) "queryTAD.c":143:9 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

;; j_19 = j_9 + 1;

(insn 53 52 0 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [13 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [13 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":142:26 -1
     (nil))

;; Generating RTL for gimple basic block 8

;; 

(code_label 54 53 55 103 (nil) [0 uses])

(note 55 54 0 NOTE_INSN_BASIC_BLOCK)

;; if (j_9 <= 85)

(insn 59 55 60 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [13 j+0 S4 A32])
            (const_int 85 [0x55]))) "queryTAD.c":142:5 -1
     (nil))

(jump_insn 60 59 0 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 56)
            (pc))) "queryTAD.c":142:5 -1
     (nil))

;; Generating RTL for gimple basic block 9

;; _22 = &q_13(D)->years;

(insn 62 61 63 (set (reg/f:DI 125)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [11 q+0 S8 A64])) "queryTAD.c":145:5 -1
     (nil))

(insn 63 62 0 (parallel [
            (set (reg/f:DI 92 [ _22 ])
                (plus:DI (reg/f:DI 125)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":145:5 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [11 q+0 S8 A64])
            (const_int 16 [0x10]))
        (nil)))

;; _40 = (unsigned long) _22;

(insn 64 63 0 (set (reg:DI 105 [ _40 ])
        (reg/f:DI 92 [ _22 ])) "queryTAD.c":145:5 -1
     (nil))

;; _41 = _40 >> 3;

(insn 65 64 0 (parallel [
            (set (reg:DI 106 [ _41 ])
                (lshiftrt:DI (reg:DI 105 [ _40 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":145:5 -1
     (nil))

;; _42 = _41 + 2147450880;

(insn 66 65 0 (parallel [
            (set (reg:DI 107 [ _42 ])
                (plus:DI (reg:DI 106 [ _41 ])
                    (const_int 2147450880 [0x7fff8000])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":145:5 -1
     (nil))

;; _43 = (signed char *) _42;

(insn 67 66 0 (set (reg/f:DI 108 [ _43 ])
        (reg:DI 107 [ _42 ])) "queryTAD.c":145:5 -1
     (nil))

;; _44 = *_43;

(insn 68 67 0 (set (reg:QI 109 [ _44 ])
        (mem:QI (reg/f:DI 108 [ _43 ]) [10 *_43+0 S1 A8])) "queryTAD.c":145:5 -1
     (nil))

;; if (_44 != 0)

(insn 69 68 70 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 109 [ _44 ])
            (const_int 0 [0]))) "queryTAD.c":145:5 -1
     (nil))

(jump_insn 70 69 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "queryTAD.c":145:5 -1
     (nil))

;; Generating RTL for gimple basic block 10

;; __builtin___asan_report_load8 (_40);

(insn 72 71 73 (set (reg:DI 5 di)
        (reg:DI 105 [ _40 ])) "queryTAD.c":145:5 -1
     (nil))

(call_insn 73 72 74 (call (mem:QI (symbol_ref:DI ("__asan_report_load8") [flags 0x41]  <function_decl 0x7fc58eea5900 __builtin___asan_report_load8>) [0 __builtin___asan_report_load8 S1 A8])
        (const_int 0 [0])) "queryTAD.c":145:5 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

(barrier 74 73 0)

;; Generating RTL for gimple basic block 11

;; 

(code_label 75 74 76 107 (nil) [0 uses])

(note 76 75 0 NOTE_INSN_BASIC_BLOCK)

;; _6 = q_13(D)->years;

(insn 77 76 78 (set (reg/f:DI 126)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [11 q+0 S8 A64])) "queryTAD.c":145:5 -1
     (nil))

(insn 78 77 0 (set (reg/f:DI 87 [ _6 ])
        (mem/f:DI (plus:DI (reg/f:DI 126)
                (const_int 16 [0x10])) [6 q_13(D)->years+0 S8 A64])) "queryTAD.c":145:5 -1
     (nil))

;; freeRecYears (_6);

(insn 79 78 80 (set (reg:DI 5 di)
        (reg/f:DI 87 [ _6 ])) "queryTAD.c":145:5 -1
     (nil))

(call_insn 80 79 0 (call (mem:QI (symbol_ref:DI ("freeRecYears") [flags 0x3]  <function_decl 0x7fc58ec06200 freeRecYears>) [0 freeRecYears S1 A8])
        (const_int 0 [0])) "queryTAD.c":145:5 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

;; _23 = &q_13(D)->sensorsP;

(insn 81 80 82 (set (reg/f:DI 127)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [11 q+0 S8 A64])) "queryTAD.c":146:5 -1
     (nil))

(insn 82 81 0 (parallel [
            (set (reg/f:DI 93 [ _23 ])
                (plus:DI (reg/f:DI 127)
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":146:5 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [11 q+0 S8 A64])
            (const_int 32 [0x20]))
        (nil)))

;; _45 = (unsigned long) _23;

(insn 83 82 0 (set (reg:DI 110 [ _45 ])
        (reg/f:DI 93 [ _23 ])) "queryTAD.c":146:5 -1
     (nil))

;; _46 = _45 >> 3;

(insn 84 83 0 (parallel [
            (set (reg:DI 111 [ _46 ])
                (lshiftrt:DI (reg:DI 110 [ _45 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":146:5 -1
     (nil))

;; _47 = _46 + 2147450880;

(insn 85 84 0 (parallel [
            (set (reg:DI 112 [ _47 ])
                (plus:DI (reg:DI 111 [ _46 ])
                    (const_int 2147450880 [0x7fff8000])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":146:5 -1
     (nil))

;; _48 = (signed char *) _47;

(insn 86 85 0 (set (reg/f:DI 113 [ _48 ])
        (reg:DI 112 [ _47 ])) "queryTAD.c":146:5 -1
     (nil))

;; _49 = *_48;

(insn 87 86 0 (set (reg:QI 114 [ _49 ])
        (mem:QI (reg/f:DI 113 [ _48 ]) [10 *_48+0 S1 A8])) "queryTAD.c":146:5 -1
     (nil))

;; if (_49 != 0)

(insn 88 87 89 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 114 [ _49 ])
            (const_int 0 [0]))) "queryTAD.c":146:5 -1
     (nil))

(jump_insn 89 88 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "queryTAD.c":146:5 -1
     (nil))

;; Generating RTL for gimple basic block 12

;; __builtin___asan_report_load8 (_45);

(insn 91 90 92 (set (reg:DI 5 di)
        (reg:DI 110 [ _45 ])) "queryTAD.c":146:5 -1
     (nil))

(call_insn 92 91 93 (call (mem:QI (symbol_ref:DI ("__asan_report_load8") [flags 0x41]  <function_decl 0x7fc58eea5900 __builtin___asan_report_load8>) [0 __builtin___asan_report_load8 S1 A8])
        (const_int 0 [0])) "queryTAD.c":146:5 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

(barrier 93 92 0)

;; Generating RTL for gimple basic block 13

;; 

(code_label 94 93 95 108 (nil) [0 uses])

(note 95 94 0 NOTE_INSN_BASIC_BLOCK)

;; _7 = q_13(D)->sensorsP;

(insn 96 95 97 (set (reg/f:DI 128)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [11 q+0 S8 A64])) "queryTAD.c":146:5 -1
     (nil))

(insn 97 96 0 (set (reg/f:DI 88 [ _7 ])
        (mem/f:DI (plus:DI (reg/f:DI 128)
                (const_int 32 [0x20])) [8 q_13(D)->sensorsP+0 S8 A64])) "queryTAD.c":146:5 -1
     (nil))

;; freeRecSen (_7);

(insn 98 97 99 (set (reg:DI 5 di)
        (reg/f:DI 88 [ _7 ])) "queryTAD.c":146:5 -1
     (nil))

(call_insn 99 98 0 (call (mem:QI (symbol_ref:DI ("freeRecSen") [flags 0x3]  <function_decl 0x7fc58ec06600 freeRecSen>) [0 freeRecSen S1 A8])
        (const_int 0 [0])) "queryTAD.c":146:5 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

;; _24 = &q_13(D)->sensorsID;

(insn 100 99 101 (set (reg/f:DI 129)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [11 q+0 S8 A64])) "queryTAD.c":147:11 -1
     (nil))

(insn 101 100 0 (parallel [
            (set (reg/f:DI 94 [ _24 ])
                (plus:DI (reg/f:DI 129)
                    (const_int 24 [0x18])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":147:11 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [11 q+0 S8 A64])
            (const_int 24 [0x18]))
        (nil)))

;; _50 = (unsigned long) _24;

(insn 102 101 0 (set (reg:DI 115 [ _50 ])
        (reg/f:DI 94 [ _24 ])) "queryTAD.c":147:11 -1
     (nil))

;; _51 = _50 >> 3;

(insn 103 102 0 (parallel [
            (set (reg:DI 116 [ _51 ])
                (lshiftrt:DI (reg:DI 115 [ _50 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":147:11 -1
     (nil))

;; _52 = _51 + 2147450880;

(insn 104 103 0 (parallel [
            (set (reg:DI 117 [ _52 ])
                (plus:DI (reg:DI 116 [ _51 ])
                    (const_int 2147450880 [0x7fff8000])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":147:11 -1
     (nil))

;; _53 = (signed char *) _52;

(insn 105 104 0 (set (reg/f:DI 118 [ _53 ])
        (reg:DI 117 [ _52 ])) "queryTAD.c":147:11 -1
     (nil))

;; _54 = *_53;

(insn 106 105 0 (set (reg:QI 119 [ _54 ])
        (mem:QI (reg/f:DI 118 [ _53 ]) [10 *_53+0 S1 A8])) "queryTAD.c":147:11 -1
     (nil))

;; if (_54 != 0)

(insn 107 106 108 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 119 [ _54 ])
            (const_int 0 [0]))) "queryTAD.c":147:11 -1
     (nil))

(jump_insn 108 107 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "queryTAD.c":147:11 -1
     (nil))

;; Generating RTL for gimple basic block 14

;; __builtin___asan_report_load8 (_50);

(insn 110 109 111 (set (reg:DI 5 di)
        (reg:DI 115 [ _50 ])) "queryTAD.c":147:11 -1
     (nil))

(call_insn 111 110 112 (call (mem:QI (symbol_ref:DI ("__asan_report_load8") [flags 0x41]  <function_decl 0x7fc58eea5900 __builtin___asan_report_load8>) [0 __builtin___asan_report_load8 S1 A8])
        (const_int 0 [0])) "queryTAD.c":147:11 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

(barrier 112 111 0)

;; Generating RTL for gimple basic block 15

;; 

(code_label 113 112 114 109 (nil) [0 uses])

(note 114 113 0 NOTE_INSN_BASIC_BLOCK)

;; _8 = q_13(D)->sensorsID;

(insn 115 114 116 (set (reg/f:DI 130)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [11 q+0 S8 A64])) "queryTAD.c":147:11 -1
     (nil))

(insn 116 115 0 (set (reg/f:DI 89 [ _8 ])
        (mem/f:DI (plus:DI (reg/f:DI 130)
                (const_int 24 [0x18])) [7 q_13(D)->sensorsID+0 S8 A64])) "queryTAD.c":147:11 -1
     (nil))

;; free (_8);

(insn 117 116 118 (set (reg:DI 5 di)
        (reg/f:DI 89 [ _8 ])) "queryTAD.c":147:5 -1
     (nil))

(call_insn 118 117 0 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7fc58ee7d600 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) "queryTAD.c":147:5 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

;; free (q_13(D));

(insn 119 118 120 (set (reg:DI 131)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [11 q+0 S8 A64])) "queryTAD.c":148:5 -1
     (nil))

(insn 120 119 121 (set (reg:DI 5 di)
        (reg:DI 131)) "queryTAD.c":148:5 -1
     (nil))

(call_insn 121 120 0 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7fc58ee7d600 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) "queryTAD.c":148:5 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 17 into block 16...
Merged blocks 16 and 17.
Merged 16 and 17 without moving.


try_optimize_cfg iteration 2

fix_loop_structure: fixing up loops for function


;;
;; Full RTL generated for this function:
;;
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 4, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [11 q+0 S8 A64])
        (reg:DI 5 di [ q ])) "queryTAD.c":141:28 -1
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [13 j+0 S4 A32])
        (const_int 0 [0])) "queryTAD.c":142:14 -1
     (nil))
(jump_insn 7 6 8 2 (set (pc)
        (label_ref 54)) "queryTAD.c":142:5 -1
     (nil)
 -> 54)
;;  succ:       9

(barrier 8 7 56)
;; basic block 4, loop depth 1, maybe hot
;;  prev block 2, next block 5, flags: (NEW, REACHABLE, RTL)
;;  pred:       9
(code_label 56 8 9 4 106 (nil) [1 uses])
(note 9 56 10 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 10 9 11 4 (set (reg/f:DI 120)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [11 q+0 S8 A64])) "queryTAD.c":143:15 -1
     (nil))
(insn 11 10 12 4 (parallel [
            (set (reg/f:DI 90 [ _20 ])
                (plus:DI (reg/f:DI 120)
                    (const_int 24 [0x18])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":143:15 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [11 q+0 S8 A64])
            (const_int 24 [0x18]))
        (nil)))
(insn 12 11 13 4 (set (reg:DI 95 [ _30 ])
        (reg/f:DI 90 [ _20 ])) "queryTAD.c":143:15 -1
     (nil))
(insn 13 12 14 4 (parallel [
            (set (reg:DI 96 [ _31 ])
                (lshiftrt:DI (reg:DI 95 [ _30 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":143:15 -1
     (nil))
(insn 14 13 15 4 (parallel [
            (set (reg:DI 97 [ _32 ])
                (plus:DI (reg:DI 96 [ _31 ])
                    (const_int 2147450880 [0x7fff8000])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":143:15 -1
     (nil))
(insn 15 14 16 4 (set (reg/f:DI 98 [ _33 ])
        (reg:DI 97 [ _32 ])) "queryTAD.c":143:15 -1
     (nil))
(insn 16 15 17 4 (set (reg:QI 99 [ _34 ])
        (mem:QI (reg/f:DI 98 [ _33 ]) [10 *_33+0 S1 A8])) "queryTAD.c":143:15 -1
     (nil))
(insn 17 16 18 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 99 [ _34 ])
            (const_int 0 [0]))) "queryTAD.c":143:15 -1
     (nil))
(jump_insn 18 17 19 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 23)
            (pc))) "queryTAD.c":143:15 -1
     (nil)
 -> 23)
;;  succ:       6 [100.0% (guessed)] 
;;              5 [0.0% (guessed)]  (FALLTHRU)

;; basic block 5, loop depth 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL)
;;  pred:       4 [0.0% (guessed)]  (FALLTHRU)
(note 19 18 20 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 20 19 21 5 (set (reg:DI 5 di)
        (reg:DI 95 [ _30 ])) "queryTAD.c":143:15 -1
     (nil))
(call_insn 21 20 22 5 (call (mem:QI (symbol_ref:DI ("__asan_report_load8") [flags 0x41]  <function_decl 0x7fc58eea5900 __builtin___asan_report_load8>) [0 __builtin___asan_report_load8 S1 A8])
        (const_int 0 [0])) "queryTAD.c":143:15 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:      

(barrier 22 21 23)
;; basic block 6, loop depth 1, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL)
;;  pred:       4 [100.0% (guessed)] 
(code_label 23 22 24 6 104 (nil) [1 uses])
(note 24 23 25 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 25 24 26 6 (set (reg/f:DI 121)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [11 q+0 S8 A64])) "queryTAD.c":143:15 -1
     (nil))
(insn 26 25 27 6 (set (reg/f:DI 82 [ _1 ])
        (mem/f:DI (plus:DI (reg/f:DI 121)
                (const_int 24 [0x18])) [7 q_13(D)->sensorsID+0 S8 A64])) "queryTAD.c":143:15 -1
     (nil))
(insn 27 26 28 6 (set (reg:SI 122)
        (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [13 j+0 S4 A32])) "queryTAD.c":143:26 -1
     (nil))
(insn 28 27 29 6 (set (reg:DI 83 [ _2 ])
        (sign_extend:DI (reg:SI 122))) "queryTAD.c":143:26 -1
     (nil))
(insn 29 28 30 6 (set (reg:DI 123)
        (reg:DI 83 [ _2 ])) "queryTAD.c":143:26 -1
     (nil))
(insn 30 29 31 6 (parallel [
            (set (reg:DI 123)
                (ashift:DI (reg:DI 123)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":143:26 -1
     (nil))
(insn 31 30 32 6 (parallel [
            (set (reg:DI 123)
                (plus:DI (reg:DI 123)
                    (reg:DI 83 [ _2 ])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":143:26 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 83 [ _2 ])
            (const_int 5 [0x5]))
        (nil)))
(insn 32 31 33 6 (parallel [
            (set (reg:DI 124)
                (ashift:DI (reg:DI 123)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":143:26 -1
     (nil))
(insn 33 32 34 6 (set (reg:DI 123)
        (reg:DI 124)) "queryTAD.c":143:26 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 83 [ _2 ])
            (const_int 80 [0x50]))
        (nil)))
(insn 34 33 35 6 (set (reg:DI 84 [ _3 ])
        (reg:DI 123)) "queryTAD.c":143:26 -1
     (nil))
(insn 35 34 36 6 (parallel [
            (set (reg/f:DI 85 [ _4 ])
                (plus:DI (reg/f:DI 82 [ _1 ])
                    (reg:DI 84 [ _3 ])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":143:26 -1
     (nil))
(insn 36 35 37 6 (parallel [
            (set (reg/f:DI 91 [ _21 ])
                (plus:DI (reg/f:DI 85 [ _4 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":143:29 -1
     (nil))
(insn 37 36 38 6 (set (reg:DI 100 [ _35 ])
        (reg/f:DI 91 [ _21 ])) "queryTAD.c":143:29 -1
     (nil))
(insn 38 37 39 6 (parallel [
            (set (reg:DI 101 [ _36 ])
                (lshiftrt:DI (reg:DI 100 [ _35 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":143:29 -1
     (nil))
(insn 39 38 40 6 (parallel [
            (set (reg:DI 102 [ _37 ])
                (plus:DI (reg:DI 101 [ _36 ])
                    (const_int 2147450880 [0x7fff8000])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":143:29 -1
     (nil))
(insn 40 39 41 6 (set (reg/f:DI 103 [ _38 ])
        (reg:DI 102 [ _37 ])) "queryTAD.c":143:29 -1
     (nil))
(insn 41 40 42 6 (set (reg:QI 104 [ _39 ])
        (mem:QI (reg/f:DI 103 [ _38 ]) [10 *_38+0 S1 A8])) "queryTAD.c":143:29 -1
     (nil))
(insn 42 41 43 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 104 [ _39 ])
            (const_int 0 [0]))) "queryTAD.c":143:29 -1
     (nil))
(jump_insn 43 42 44 6 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 48)
            (pc))) "queryTAD.c":143:29 -1
     (nil)
 -> 48)
;;  succ:       8 [100.0% (guessed)] 
;;              7 [0.0% (guessed)]  (FALLTHRU)

;; basic block 7, loop depth 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL)
;;  pred:       6 [0.0% (guessed)]  (FALLTHRU)
(note 44 43 45 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 45 44 46 7 (set (reg:DI 5 di)
        (reg:DI 100 [ _35 ])) "queryTAD.c":143:29 -1
     (nil))
(call_insn 46 45 47 7 (call (mem:QI (symbol_ref:DI ("__asan_report_load8") [flags 0x41]  <function_decl 0x7fc58eea5900 __builtin___asan_report_load8>) [0 __builtin___asan_report_load8 S1 A8])
        (const_int 0 [0])) "queryTAD.c":143:29 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:      

(barrier 47 46 48)
;; basic block 8, loop depth 1, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL)
;;  pred:       6 [100.0% (guessed)] 
(code_label 48 47 49 8 105 (nil) [1 uses])
(note 49 48 50 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 50 49 51 8 (set (reg/f:DI 86 [ _5 ])
        (mem/f:DI (plus:DI (reg/f:DI 85 [ _4 ])
                (const_int 8 [0x8])) [3 _4->name+0 S8 A64])) "queryTAD.c":143:29 -1
     (nil))
(insn 51 50 52 8 (set (reg:DI 5 di)
        (reg/f:DI 86 [ _5 ])) "queryTAD.c":143:9 -1
     (nil))
(call_insn 52 51 53 8 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7fc58ee7d600 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) "queryTAD.c":143:9 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 53 52 54 8 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [13 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [13 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":142:26 -1
     (nil))
;;  succ:       9 (FALLTHRU,DFS_BACK)

;; basic block 9, loop depth 1, maybe hot
;;  prev block 8, next block 10, flags: (NEW, REACHABLE, RTL)
;;  pred:       2
;;              8 (FALLTHRU,DFS_BACK)
(code_label 54 53 55 9 103 (nil) [1 uses])
(note 55 54 59 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 59 55 60 9 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [13 j+0 S4 A32])
            (const_int 85 [0x55]))) "queryTAD.c":142:5 -1
     (nil))
(jump_insn 60 59 61 9 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 56)
            (pc))) "queryTAD.c":142:5 -1
     (nil)
 -> 56)
;;  succ:       4
;;              10 (FALLTHRU)

;; basic block 10, loop depth 0, maybe hot
;;  prev block 9, next block 11, flags: (NEW, REACHABLE, RTL)
;;  pred:       9 (FALLTHRU)
(note 61 60 62 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 62 61 63 10 (set (reg/f:DI 125)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [11 q+0 S8 A64])) "queryTAD.c":145:5 -1
     (nil))
(insn 63 62 64 10 (parallel [
            (set (reg/f:DI 92 [ _22 ])
                (plus:DI (reg/f:DI 125)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":145:5 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [11 q+0 S8 A64])
            (const_int 16 [0x10]))
        (nil)))
(insn 64 63 65 10 (set (reg:DI 105 [ _40 ])
        (reg/f:DI 92 [ _22 ])) "queryTAD.c":145:5 -1
     (nil))
(insn 65 64 66 10 (parallel [
            (set (reg:DI 106 [ _41 ])
                (lshiftrt:DI (reg:DI 105 [ _40 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":145:5 -1
     (nil))
(insn 66 65 67 10 (parallel [
            (set (reg:DI 107 [ _42 ])
                (plus:DI (reg:DI 106 [ _41 ])
                    (const_int 2147450880 [0x7fff8000])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":145:5 -1
     (nil))
(insn 67 66 68 10 (set (reg/f:DI 108 [ _43 ])
        (reg:DI 107 [ _42 ])) "queryTAD.c":145:5 -1
     (nil))
(insn 68 67 69 10 (set (reg:QI 109 [ _44 ])
        (mem:QI (reg/f:DI 108 [ _43 ]) [10 *_43+0 S1 A8])) "queryTAD.c":145:5 -1
     (nil))
(insn 69 68 70 10 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 109 [ _44 ])
            (const_int 0 [0]))) "queryTAD.c":145:5 -1
     (nil))
(jump_insn 70 69 71 10 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 75)
            (pc))) "queryTAD.c":145:5 -1
     (nil)
 -> 75)
;;  succ:       12 [100.0% (guessed)] 
;;              11 [0.0% (guessed)]  (FALLTHRU)

;; basic block 11, loop depth 0, maybe hot
;;  prev block 10, next block 12, flags: (NEW, REACHABLE, RTL)
;;  pred:       10 [0.0% (guessed)]  (FALLTHRU)
(note 71 70 72 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 72 71 73 11 (set (reg:DI 5 di)
        (reg:DI 105 [ _40 ])) "queryTAD.c":145:5 -1
     (nil))
(call_insn 73 72 74 11 (call (mem:QI (symbol_ref:DI ("__asan_report_load8") [flags 0x41]  <function_decl 0x7fc58eea5900 __builtin___asan_report_load8>) [0 __builtin___asan_report_load8 S1 A8])
        (const_int 0 [0])) "queryTAD.c":145:5 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:      

(barrier 74 73 75)
;; basic block 12, loop depth 0, maybe hot
;;  prev block 11, next block 13, flags: (NEW, REACHABLE, RTL)
;;  pred:       10 [100.0% (guessed)] 
(code_label 75 74 76 12 107 (nil) [1 uses])
(note 76 75 77 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 77 76 78 12 (set (reg/f:DI 126)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [11 q+0 S8 A64])) "queryTAD.c":145:5 -1
     (nil))
(insn 78 77 79 12 (set (reg/f:DI 87 [ _6 ])
        (mem/f:DI (plus:DI (reg/f:DI 126)
                (const_int 16 [0x10])) [6 q_13(D)->years+0 S8 A64])) "queryTAD.c":145:5 -1
     (nil))
(insn 79 78 80 12 (set (reg:DI 5 di)
        (reg/f:DI 87 [ _6 ])) "queryTAD.c":145:5 -1
     (nil))
(call_insn 80 79 81 12 (call (mem:QI (symbol_ref:DI ("freeRecYears") [flags 0x3]  <function_decl 0x7fc58ec06200 freeRecYears>) [0 freeRecYears S1 A8])
        (const_int 0 [0])) "queryTAD.c":145:5 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 81 80 82 12 (set (reg/f:DI 127)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [11 q+0 S8 A64])) "queryTAD.c":146:5 -1
     (nil))
(insn 82 81 83 12 (parallel [
            (set (reg/f:DI 93 [ _23 ])
                (plus:DI (reg/f:DI 127)
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":146:5 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [11 q+0 S8 A64])
            (const_int 32 [0x20]))
        (nil)))
(insn 83 82 84 12 (set (reg:DI 110 [ _45 ])
        (reg/f:DI 93 [ _23 ])) "queryTAD.c":146:5 -1
     (nil))
(insn 84 83 85 12 (parallel [
            (set (reg:DI 111 [ _46 ])
                (lshiftrt:DI (reg:DI 110 [ _45 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":146:5 -1
     (nil))
(insn 85 84 86 12 (parallel [
            (set (reg:DI 112 [ _47 ])
                (plus:DI (reg:DI 111 [ _46 ])
                    (const_int 2147450880 [0x7fff8000])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":146:5 -1
     (nil))
(insn 86 85 87 12 (set (reg/f:DI 113 [ _48 ])
        (reg:DI 112 [ _47 ])) "queryTAD.c":146:5 -1
     (nil))
(insn 87 86 88 12 (set (reg:QI 114 [ _49 ])
        (mem:QI (reg/f:DI 113 [ _48 ]) [10 *_48+0 S1 A8])) "queryTAD.c":146:5 -1
     (nil))
(insn 88 87 89 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 114 [ _49 ])
            (const_int 0 [0]))) "queryTAD.c":146:5 -1
     (nil))
(jump_insn 89 88 90 12 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 94)
            (pc))) "queryTAD.c":146:5 -1
     (nil)
 -> 94)
;;  succ:       14 [100.0% (guessed)] 
;;              13 [0.0% (guessed)]  (FALLTHRU)

;; basic block 13, loop depth 0, maybe hot
;;  prev block 12, next block 14, flags: (NEW, REACHABLE, RTL)
;;  pred:       12 [0.0% (guessed)]  (FALLTHRU)
(note 90 89 91 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 91 90 92 13 (set (reg:DI 5 di)
        (reg:DI 110 [ _45 ])) "queryTAD.c":146:5 -1
     (nil))
(call_insn 92 91 93 13 (call (mem:QI (symbol_ref:DI ("__asan_report_load8") [flags 0x41]  <function_decl 0x7fc58eea5900 __builtin___asan_report_load8>) [0 __builtin___asan_report_load8 S1 A8])
        (const_int 0 [0])) "queryTAD.c":146:5 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:      

(barrier 93 92 94)
;; basic block 14, loop depth 0, maybe hot
;;  prev block 13, next block 15, flags: (NEW, REACHABLE, RTL)
;;  pred:       12 [100.0% (guessed)] 
(code_label 94 93 95 14 108 (nil) [1 uses])
(note 95 94 96 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 96 95 97 14 (set (reg/f:DI 128)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [11 q+0 S8 A64])) "queryTAD.c":146:5 -1
     (nil))
(insn 97 96 98 14 (set (reg/f:DI 88 [ _7 ])
        (mem/f:DI (plus:DI (reg/f:DI 128)
                (const_int 32 [0x20])) [8 q_13(D)->sensorsP+0 S8 A64])) "queryTAD.c":146:5 -1
     (nil))
(insn 98 97 99 14 (set (reg:DI 5 di)
        (reg/f:DI 88 [ _7 ])) "queryTAD.c":146:5 -1
     (nil))
(call_insn 99 98 100 14 (call (mem:QI (symbol_ref:DI ("freeRecSen") [flags 0x3]  <function_decl 0x7fc58ec06600 freeRecSen>) [0 freeRecSen S1 A8])
        (const_int 0 [0])) "queryTAD.c":146:5 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 100 99 101 14 (set (reg/f:DI 129)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [11 q+0 S8 A64])) "queryTAD.c":147:11 -1
     (nil))
(insn 101 100 102 14 (parallel [
            (set (reg/f:DI 94 [ _24 ])
                (plus:DI (reg/f:DI 129)
                    (const_int 24 [0x18])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":147:11 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [11 q+0 S8 A64])
            (const_int 24 [0x18]))
        (nil)))
(insn 102 101 103 14 (set (reg:DI 115 [ _50 ])
        (reg/f:DI 94 [ _24 ])) "queryTAD.c":147:11 -1
     (nil))
(insn 103 102 104 14 (parallel [
            (set (reg:DI 116 [ _51 ])
                (lshiftrt:DI (reg:DI 115 [ _50 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":147:11 -1
     (nil))
(insn 104 103 105 14 (parallel [
            (set (reg:DI 117 [ _52 ])
                (plus:DI (reg:DI 116 [ _51 ])
                    (const_int 2147450880 [0x7fff8000])))
            (clobber (reg:CC 17 flags))
        ]) "queryTAD.c":147:11 -1
     (nil))
(insn 105 104 106 14 (set (reg/f:DI 118 [ _53 ])
        (reg:DI 117 [ _52 ])) "queryTAD.c":147:11 -1
     (nil))
(insn 106 105 107 14 (set (reg:QI 119 [ _54 ])
        (mem:QI (reg/f:DI 118 [ _53 ]) [10 *_53+0 S1 A8])) "queryTAD.c":147:11 -1
     (nil))
(insn 107 106 108 14 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 119 [ _54 ])
            (const_int 0 [0]))) "queryTAD.c":147:11 -1
     (nil))
(jump_insn 108 107 109 14 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 113)
            (pc))) "queryTAD.c":147:11 -1
     (nil)
 -> 113)
;;  succ:       16 [100.0% (guessed)] 
;;              15 [0.0% (guessed)]  (FALLTHRU)

;; basic block 15, loop depth 0, maybe hot
;;  prev block 14, next block 16, flags: (NEW, REACHABLE, RTL)
;;  pred:       14 [0.0% (guessed)]  (FALLTHRU)
(note 109 108 110 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 110 109 111 15 (set (reg:DI 5 di)
        (reg:DI 115 [ _50 ])) "queryTAD.c":147:11 -1
     (nil))
(call_insn 111 110 112 15 (call (mem:QI (symbol_ref:DI ("__asan_report_load8") [flags 0x41]  <function_decl 0x7fc58eea5900 __builtin___asan_report_load8>) [0 __builtin___asan_report_load8 S1 A8])
        (const_int 0 [0])) "queryTAD.c":147:11 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:      

(barrier 112 111 113)
;; basic block 16, loop depth 0, maybe hot
;;  prev block 15, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       14 [100.0% (guessed)] 
(code_label 113 112 114 16 109 (nil) [1 uses])
(note 114 113 115 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 115 114 116 16 (set (reg/f:DI 130)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [11 q+0 S8 A64])) "queryTAD.c":147:11 -1
     (nil))
(insn 116 115 117 16 (set (reg/f:DI 89 [ _8 ])
        (mem/f:DI (plus:DI (reg/f:DI 130)
                (const_int 24 [0x18])) [7 q_13(D)->sensorsID+0 S8 A64])) "queryTAD.c":147:11 -1
     (nil))
(insn 117 116 118 16 (set (reg:DI 5 di)
        (reg/f:DI 89 [ _8 ])) "queryTAD.c":147:5 -1
     (nil))
(call_insn 118 117 119 16 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7fc58ee7d600 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) "queryTAD.c":147:5 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 119 118 120 16 (set (reg:DI 131)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [11 q+0 S8 A64])) "queryTAD.c":148:5 -1
     (nil))
(insn 120 119 121 16 (set (reg:DI 5 di)
        (reg:DI 131)) "queryTAD.c":148:5 -1
     (nil))
(call_insn 121 120 0 16 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7fc58ee7d600 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) "queryTAD.c":148:5 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       EXIT [always]  (FALLTHRU)


;; Function _sub_D_00099_0 (_sub_D_00099_0, funcdef_no=12, decl_uid=3589, cgraph_uid=20, symbol_order=35)

_sub_D_00099_0 ()
{
;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  __builtin___asan_unregister_globals (&*.LASAN0, 15);
  return;
;;    succ:       EXIT

}



Partition map 



Coalescible Partition map 


After Coalescing:

Partition map 


_sub_D_00099_0 ()
{
;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  __builtin___asan_unregister_globals (&*.LASAN0, 15);
  return;
;;    succ:       EXIT

}



;; Generating RTL for gimple basic block 2

;; __builtin___asan_unregister_globals (&*.LASAN0, 15);

(insn 5 4 6 (set (reg:DI 4 si)
        (const_int 15 [0xf])) "queryTAD.c":149:1 -1
     (nil))

(insn 6 5 7 (set (reg:DI 5 di)
        (symbol_ref:DI ("*.LASAN0") [flags 0x2]  <var_decl 0x7fc58ece2360 *.LASAN0>)) "queryTAD.c":149:1 -1
     (nil))

(call_insn 7 6 0 (call (mem:QI (symbol_ref:DI ("__asan_unregister_globals") [flags 0x41]  <function_decl 0x7fc58eead700 __builtin___asan_unregister_globals>) [0 __builtin___asan_unregister_globals S1 A8])
        (const_int 0 [0])) "queryTAD.c":149:1 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 4 into block 2...
Merged blocks 2 and 4.
Merged 2 and 4 without moving.


try_optimize_cfg iteration 2

fix_loop_structure: fixing up loops for function


;;
;; Full RTL generated for this function:
;;
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:DI 4 si)
        (const_int 15 [0xf])) "queryTAD.c":149:1 -1
     (nil))
(insn 6 5 7 2 (set (reg:DI 5 di)
        (symbol_ref:DI ("*.LASAN0") [flags 0x2]  <var_decl 0x7fc58ece2360 *.LASAN0>)) "queryTAD.c":149:1 -1
     (nil))
(call_insn 7 6 0 2 (call (mem:QI (symbol_ref:DI ("__asan_unregister_globals") [flags 0x41]  <function_decl 0x7fc58eead700 __builtin___asan_unregister_globals>) [0 __builtin___asan_unregister_globals S1 A8])
        (const_int 0 [0])) "queryTAD.c":149:1 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       EXIT [always]  (FALLTHRU)


;; Function _sub_I_00099_1 (_sub_I_00099_1, funcdef_no=13, decl_uid=3592, cgraph_uid=23, symbol_order=38)

_sub_I_00099_1 ()
{
;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  __builtin___asan_init ();
  __builtin___asan_version_mismatch_check_v8 ();
  __builtin___asan_register_globals (&*.LASAN0, 15);
  return;
;;    succ:       EXIT

}



Partition map 



Coalescible Partition map 


After Coalescing:

Partition map 


_sub_I_00099_1 ()
{
;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  __builtin___asan_init ();
  __builtin___asan_version_mismatch_check_v8 ();
  __builtin___asan_register_globals (&*.LASAN0, 15);
  return;
;;    succ:       EXIT

}



;; Generating RTL for gimple basic block 2

;; __builtin___asan_init ();

(call_insn 5 4 0 (call (mem:QI (symbol_ref:DI ("__asan_init") [flags 0x41]  <function_decl 0x7fc58eea5400 __builtin___asan_init>) [0 __builtin___asan_init S1 A8])
        (const_int 0 [0])) "queryTAD.c":149:1 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))

;; __builtin___asan_version_mismatch_check_v8 ();

(call_insn 6 5 0 (call (mem:QI (symbol_ref:DI ("__asan_version_mismatch_check_v8") [flags 0x41]  <function_decl 0x7fc58eea5500 __builtin___asan_version_mismatch_check_v8>) [0 __builtin___asan_version_mismatch_check_v8 S1 A8])
        (const_int 0 [0])) "queryTAD.c":149:1 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))

;; __builtin___asan_register_globals (&*.LASAN0, 15);

(insn 7 6 8 (set (reg:DI 4 si)
        (const_int 15 [0xf])) "queryTAD.c":149:1 -1
     (nil))

(insn 8 7 9 (set (reg:DI 5 di)
        (symbol_ref:DI ("*.LASAN0") [flags 0x2]  <var_decl 0x7fc58ece2360 *.LASAN0>)) "queryTAD.c":149:1 -1
     (nil))

(call_insn 9 8 0 (call (mem:QI (symbol_ref:DI ("__asan_register_globals") [flags 0x41]  <function_decl 0x7fc58eead600 __builtin___asan_register_globals>) [0 __builtin___asan_register_globals S1 A8])
        (const_int 0 [0])) "queryTAD.c":149:1 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 4 into block 2...
Merged blocks 2 and 4.
Merged 2 and 4 without moving.


try_optimize_cfg iteration 2

fix_loop_structure: fixing up loops for function


;;
;; Full RTL generated for this function:
;;
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(call_insn 5 2 6 2 (call (mem:QI (symbol_ref:DI ("__asan_init") [flags 0x41]  <function_decl 0x7fc58eea5400 __builtin___asan_init>) [0 __builtin___asan_init S1 A8])
        (const_int 0 [0])) "queryTAD.c":149:1 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))
(call_insn 6 5 7 2 (call (mem:QI (symbol_ref:DI ("__asan_version_mismatch_check_v8") [flags 0x41]  <function_decl 0x7fc58eea5500 __builtin___asan_version_mismatch_check_v8>) [0 __builtin___asan_version_mismatch_check_v8 S1 A8])
        (const_int 0 [0])) "queryTAD.c":149:1 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))
(insn 7 6 8 2 (set (reg:DI 4 si)
        (const_int 15 [0xf])) "queryTAD.c":149:1 -1
     (nil))
(insn 8 7 9 2 (set (reg:DI 5 di)
        (symbol_ref:DI ("*.LASAN0") [flags 0x2]  <var_decl 0x7fc58ece2360 *.LASAN0>)) "queryTAD.c":149:1 -1
     (nil))
(call_insn 9 8 0 2 (call (mem:QI (symbol_ref:DI ("__asan_register_globals") [flags 0x41]  <function_decl 0x7fc58eead600 __builtin___asan_register_globals>) [0 __builtin___asan_register_globals S1 A8])
        (const_int 0 [0])) "queryTAD.c":149:1 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       EXIT [always]  (FALLTHRU)

