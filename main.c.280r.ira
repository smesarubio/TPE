
;; Function main (main, funcdef_no=0, decl_uid=3402, cgraph_uid=1, symbol_order=0)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 14 n_edges 14 count 14 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13
;; 2 succs { 4 3 }
;; 3 succs { }
;; 4 succs { 6 5 }
;; 5 succs { }
;; 6 succs { 8 7 }
;; 7 succs { 8 9 }
;; 8 succs { }
;; 9 succs { 11 10 }
;; 10 succs { }
;; 11 succs { 13 12 }
;; 12 succs { }
;; 13 succs { 1 }
Building IRA IR
verify found no changes in insn with uid = 18.
verify found no changes in insn with uid = 25.
verify found no changes in insn with uid = 39.
verify found no changes in insn with uid = 46.
verify found no changes in insn with uid = 57.
verify found no changes in insn with uid = 58.
verify found no changes in insn with uid = 60.
verify found no changes in insn with uid = 75.
verify found no changes in insn with uid = 81.
verify found no changes in insn with uid = 96.
verify found no changes in insn with uid = 102.
verify found no changes in insn with uid = 110.
verify found no changes in insn with uid = 115.
verify found no changes in insn with uid = 122.
verify found no changes in insn with uid = 127.
verify found no changes in insn with uid = 134.
verify found no changes in insn with uid = 137.
verify found no changes in insn with uid = 140.
verify found no changes in insn with uid = 143.
verify found no changes in insn with uid = 146.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r137: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r137,l0) best DIREG, allocno GENERAL_REGS
    r136: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r136,l0) best DIREG, allocno GENERAL_REGS
    r135: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a4 (r135,l0) best DIREG, allocno GENERAL_REGS
    r134: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a5 (r134,l0) best DIREG, allocno GENERAL_REGS
    r133: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a6 (r133,l0) best DIREG, allocno GENERAL_REGS
    r132: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a7 (r132,l0) best SIREG, allocno GENERAL_REGS
    r131: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a8 (r131,l0) best AREG, allocno GENERAL_REGS
    r130: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a9 (r130,l0) best DIREG, allocno GENERAL_REGS
    r129: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a10 (r129,l0) best SIREG, allocno GENERAL_REGS
    r128: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a11 (r128,l0) best DIREG, allocno GENERAL_REGS
    r127: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a12 (r127,l0) best SIREG, allocno GENERAL_REGS
    r126: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a13 (r126,l0) best AREG, allocno GENERAL_REGS
    r125: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a14 (r125,l0) best DIREG, allocno GENERAL_REGS
    r124: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a15 (r124,l0) best AREG, allocno GENERAL_REGS
    r123: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a16 (r123,l0) best DIREG, allocno GENERAL_REGS
    r122: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a17 (r122,l0) best SIREG, allocno GENERAL_REGS
    r121: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a18 (r121,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r120: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a27 (r120,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r119: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a28 (r119,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r118: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a37 (r118,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r117: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a38 (r117,l0) best AREG, allocno GENERAL_REGS
    r116: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a46 (r116,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r115: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a47 (r115,l0) best AREG, allocno GENERAL_REGS
    r114: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a55 (r114,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r113: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r113,l0) best AREG, allocno GENERAL_REGS
    r112: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a23 (r112,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r111: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a24 (r111,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r110: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a25 (r110,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r109: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a26 (r109,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r108: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a22 (r108,l0) best DIREG, allocno GENERAL_REGS
    r107: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a33 (r107,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r106: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a34 (r106,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r105: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a35 (r105,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r104: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a36 (r104,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r103: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a32 (r103,l0) best DIREG, allocno GENERAL_REGS
    r102: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a42 (r102,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r101: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a43 (r101,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r100: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a44 (r100,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r99: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a45 (r99,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r98: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a41 (r98,l0) best DIREG, allocno GENERAL_REGS
    r97: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a51 (r97,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r96: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a52 (r96,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r95: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a53 (r95,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r94: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a54 (r94,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r93: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a50 (r93,l0) best DIREG, allocno GENERAL_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a19 (r91,l0) best AREG, allocno GENERAL_REGS
    r90: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a20 (r90,l0) best DIREG, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a21 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a29 (r88,l0) best AREG, allocno GENERAL_REGS
    r87: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a30 (r87,l0) best DIREG, allocno GENERAL_REGS
    r86: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a31 (r86,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r85: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a39 (r85,l0) best DIREG, allocno GENERAL_REGS
    r84: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a40 (r84,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r83: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a48 (r83,l0) best DIREG, allocno GENERAL_REGS
    r82: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a49 (r82,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r113,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:14000 NO_REX_SSE_REGS:14000 SSE_REGS:14000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:7000
  a1(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:14000 NO_REX_SSE_REGS:14000 SSE_REGS:14000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:6000
  a2(r137,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:16000 NO_REX_SSE_REGS:16000 SSE_REGS:16000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a3(r136,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:16000 NO_REX_SSE_REGS:16000 SSE_REGS:16000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a4(r135,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:16000 NO_REX_SSE_REGS:16000 SSE_REGS:16000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a5(r134,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:16000 NO_REX_SSE_REGS:16000 SSE_REGS:16000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a6(r133,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:16000 NO_REX_SSE_REGS:16000 SSE_REGS:16000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a7(r132,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:16000 NO_REX_SSE_REGS:16000 SSE_REGS:16000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a8(r131,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:8000 NO_REX_SSE_REGS:8000 SSE_REGS:8000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:12000
  a9(r130,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:16000 NO_REX_SSE_REGS:16000 SSE_REGS:16000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a10(r129,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:16000 NO_REX_SSE_REGS:16000 SSE_REGS:16000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a11(r128,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:16000 NO_REX_SSE_REGS:16000 SSE_REGS:16000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a12(r127,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:16000 NO_REX_SSE_REGS:16000 SSE_REGS:16000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a13(r126,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:8000 NO_REX_SSE_REGS:8000 SSE_REGS:8000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:12000
  a14(r125,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:16000 NO_REX_SSE_REGS:16000 SSE_REGS:16000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a15(r124,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:8000 NO_REX_SSE_REGS:8000 SSE_REGS:8000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:12000
  a16(r123,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:16000 NO_REX_SSE_REGS:16000 SSE_REGS:16000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a17(r122,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:16000 NO_REX_SSE_REGS:16000 SSE_REGS:16000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a18(r121,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8000 NO_REX_SSE_REGS:8000 SSE_REGS:8000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:12000
  a19(r91,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:16000 NO_REX_SSE_REGS:16000 SSE_REGS:16000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a20(r90,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:16000 NO_REX_SSE_REGS:16000 SSE_REGS:16000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a21(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16000 NO_REX_SSE_REGS:16000 SSE_REGS:16000 MMX_REGS:39000 INT_SSE_REGS:39000 ALL_REGS:636000 MEM:16000
  a22(r108,l0) costs: AREG:4000 DREG:4000 CREG:4000 BREG:4000 SIREG:4000 DIREG:4000 AD_REGS:4000 CLOBBERED_REGS:4000 Q_REGS:4000 TLS_GOTBASE_REGS:4000 GENERAL_REGS:4000 SSE_FIRST_REG:24000 NO_REX_SSE_REGS:24000 SSE_REGS:24000 MMX_REGS:34000 INT_SSE_REGS:34000 ALL_REGS:526000 MEM:14000
  a23(r112,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a24(r111,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:14000 NO_REX_SSE_REGS:14000 SSE_REGS:14000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:7000
  a25(r110,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8000 NO_REX_SSE_REGS:8000 SSE_REGS:8000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a26(r109,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:18000 NO_REX_SSE_REGS:18000 SSE_REGS:18000 MMX_REGS:28000 INT_SSE_REGS:28000 ALL_REGS:426000 MEM:12000
  a27(r120,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16000 NO_REX_SSE_REGS:16000 SSE_REGS:16000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:11000
  a28(r119,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8000 NO_REX_SSE_REGS:8000 SSE_REGS:8000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:12000
  a29(r88,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:16000 NO_REX_SSE_REGS:16000 SSE_REGS:16000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a30(r87,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:16000 NO_REX_SSE_REGS:16000 SSE_REGS:16000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a31(r86,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16000 NO_REX_SSE_REGS:16000 SSE_REGS:16000 MMX_REGS:39000 INT_SSE_REGS:39000 ALL_REGS:636000 MEM:16000
  a32(r103,l0) costs: AREG:4000 DREG:4000 CREG:4000 BREG:4000 SIREG:4000 DIREG:4000 AD_REGS:4000 CLOBBERED_REGS:4000 Q_REGS:4000 TLS_GOTBASE_REGS:4000 GENERAL_REGS:4000 SSE_FIRST_REG:24000 NO_REX_SSE_REGS:24000 SSE_REGS:24000 MMX_REGS:34000 INT_SSE_REGS:34000 ALL_REGS:526000 MEM:14000
  a33(r107,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a34(r106,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:14000 NO_REX_SSE_REGS:14000 SSE_REGS:14000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:7000
  a35(r105,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8000 NO_REX_SSE_REGS:8000 SSE_REGS:8000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a36(r104,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:18000 NO_REX_SSE_REGS:18000 SSE_REGS:18000 MMX_REGS:28000 INT_SSE_REGS:28000 ALL_REGS:426000 MEM:12000
  a37(r118,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16000 NO_REX_SSE_REGS:16000 SSE_REGS:16000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:11000
  a38(r117,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:8000 NO_REX_SSE_REGS:8000 SSE_REGS:8000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:12000
  a39(r85,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:16000 NO_REX_SSE_REGS:16000 SSE_REGS:16000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a40(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16000 NO_REX_SSE_REGS:16000 SSE_REGS:16000 MMX_REGS:39000 INT_SSE_REGS:39000 ALL_REGS:636000 MEM:16000
  a41(r98,l0) costs: AREG:4000 DREG:4000 CREG:4000 BREG:4000 SIREG:4000 DIREG:4000 AD_REGS:4000 CLOBBERED_REGS:4000 Q_REGS:4000 TLS_GOTBASE_REGS:4000 GENERAL_REGS:4000 SSE_FIRST_REG:24000 NO_REX_SSE_REGS:24000 SSE_REGS:24000 MMX_REGS:34000 INT_SSE_REGS:34000 ALL_REGS:526000 MEM:14000
  a42(r102,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a43(r101,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:14000 NO_REX_SSE_REGS:14000 SSE_REGS:14000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:7000
  a44(r100,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8000 NO_REX_SSE_REGS:8000 SSE_REGS:8000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a45(r99,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:18000 NO_REX_SSE_REGS:18000 SSE_REGS:18000 MMX_REGS:28000 INT_SSE_REGS:28000 ALL_REGS:426000 MEM:12000
  a46(r116,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16000 NO_REX_SSE_REGS:16000 SSE_REGS:16000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:11000
  a47(r115,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:8000 NO_REX_SSE_REGS:8000 SSE_REGS:8000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:12000
  a48(r83,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:16000 NO_REX_SSE_REGS:16000 SSE_REGS:16000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a49(r82,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16000 NO_REX_SSE_REGS:16000 SSE_REGS:16000 MMX_REGS:39000 INT_SSE_REGS:39000 ALL_REGS:636000 MEM:16000
  a50(r93,l0) costs: AREG:4000 DREG:4000 CREG:4000 BREG:4000 SIREG:4000 DIREG:4000 AD_REGS:4000 CLOBBERED_REGS:4000 Q_REGS:4000 TLS_GOTBASE_REGS:4000 GENERAL_REGS:4000 SSE_FIRST_REG:24000 NO_REX_SSE_REGS:24000 SSE_REGS:24000 MMX_REGS:34000 INT_SSE_REGS:34000 ALL_REGS:526000 MEM:14000
  a51(r97,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a52(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:14000 NO_REX_SSE_REGS:14000 SSE_REGS:14000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:7000
  a53(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8000 NO_REX_SSE_REGS:8000 SSE_REGS:8000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a54(r94,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:18000 NO_REX_SSE_REGS:18000 SSE_REGS:18000 MMX_REGS:28000 INT_SSE_REGS:28000 ALL_REGS:426000 MEM:12000
  a55(r114,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16000 NO_REX_SSE_REGS:16000 SSE_REGS:16000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:11000

   Insn 155(l0): point = 0
   Insn 154(l0): point = 2
   Insn 150(l0): point = 4
   Insn 147(l0): point = 6
   Insn 146(l0): point = 8
   Insn 145(l0): point = 10
   Insn 144(l0): point = 12
   Insn 143(l0): point = 14
   Insn 142(l0): point = 16
   Insn 141(l0): point = 18
   Insn 140(l0): point = 20
   Insn 139(l0): point = 22
   Insn 138(l0): point = 24
   Insn 137(l0): point = 26
   Insn 136(l0): point = 28
   Insn 135(l0): point = 30
   Insn 134(l0): point = 32
   Insn 133(l0): point = 34
   Insn 132(l0): point = 36
   Insn 131(l0): point = 38
   Insn 130(l0): point = 40
   Insn 129(l0): point = 42
   Insn 128(l0): point = 44
   Insn 127(l0): point = 46
   Insn 126(l0): point = 48
   Insn 125(l0): point = 50
   Insn 124(l0): point = 52
   Insn 123(l0): point = 54
   Insn 122(l0): point = 56
   Insn 121(l0): point = 58
   Insn 120(l0): point = 60
   Insn 119(l0): point = 62
   Insn 118(l0): point = 64
   Insn 117(l0): point = 66
   Insn 116(l0): point = 68
   Insn 115(l0): point = 70
   Insn 114(l0): point = 72
   Insn 113(l0): point = 74
   Insn 112(l0): point = 76
   Insn 111(l0): point = 78
   Insn 110(l0): point = 80
   Insn 109(l0): point = 82
   Insn 108(l0): point = 84
   Insn 107(l0): point = 86
   Insn 106(l0): point = 88
   Insn 105(l0): point = 90
   Insn 104(l0): point = 92
   Insn 103(l0): point = 94
   Insn 102(l0): point = 96
   Insn 101(l0): point = 98
   Insn 100(l0): point = 100
   Insn 96(l0): point = 103
   Insn 95(l0): point = 105
   Insn 93(l0): point = 108
   Insn 92(l0): point = 110
   Insn 91(l0): point = 112
   Insn 90(l0): point = 114
   Insn 89(l0): point = 116
   Insn 88(l0): point = 118
   Insn 87(l0): point = 120
   Insn 86(l0): point = 122
   Insn 85(l0): point = 124
   Insn 84(l0): point = 126
   Insn 83(l0): point = 128
   Insn 82(l0): point = 130
   Insn 81(l0): point = 132
   Insn 80(l0): point = 134
   Insn 79(l0): point = 136
   Insn 75(l0): point = 139
   Insn 74(l0): point = 141
   Insn 72(l0): point = 144
   Insn 71(l0): point = 146
   Insn 70(l0): point = 148
   Insn 69(l0): point = 150
   Insn 68(l0): point = 152
   Insn 67(l0): point = 154
   Insn 66(l0): point = 156
   Insn 65(l0): point = 158
   Insn 64(l0): point = 160
   Insn 60(l0): point = 163
   Insn 59(l0): point = 165
   Insn 58(l0): point = 167
   Insn 57(l0): point = 169
   Insn 56(l0): point = 171
   Insn 53(l0): point = 174
   Insn 52(l0): point = 176
   Insn 50(l0): point = 179
   Insn 49(l0): point = 181
   Insn 48(l0): point = 183
   Insn 47(l0): point = 185
   Insn 46(l0): point = 187
   Insn 45(l0): point = 189
   Insn 44(l0): point = 191
   Insn 43(l0): point = 193
   Insn 39(l0): point = 196
   Insn 38(l0): point = 198
   Insn 36(l0): point = 201
   Insn 35(l0): point = 203
   Insn 34(l0): point = 205
   Insn 33(l0): point = 207
   Insn 32(l0): point = 209
   Insn 31(l0): point = 211
   Insn 30(l0): point = 213
   Insn 29(l0): point = 215
   Insn 28(l0): point = 217
   Insn 27(l0): point = 219
   Insn 26(l0): point = 221
   Insn 25(l0): point = 223
   Insn 24(l0): point = 225
   Insn 23(l0): point = 227
   Insn 22(l0): point = 229
   Insn 18(l0): point = 232
   Insn 17(l0): point = 234
   Insn 15(l0): point = 237
   Insn 14(l0): point = 239
   Insn 13(l0): point = 241
   Insn 12(l0): point = 243
   Insn 11(l0): point = 245
   Insn 10(l0): point = 247
   Insn 9(l0): point = 249
   Insn 8(l0): point = 251
   Insn 7(l0): point = 253
   Insn 3(l0): point = 255
   Insn 2(l0): point = 257
 a0(r113): [3..4]
 a1(r92): [5..6]
 a2(r137): [11..12]
 a3(r136): [17..18]
 a4(r135): [23..24]
 a5(r134): [29..30]
 a6(r133): [35..38]
 a7(r132): [37..40]
 a8(r131): [43..44]
 a9(r130): [49..52]
 a10(r129): [51..54]
 a11(r128): [59..62]
 a12(r127): [61..64]
 a13(r126): [67..68]
 a14(r125): [73..74]
 a15(r124): [77..78]
 a16(r123): [83..86]
 a17(r122): [85..88]
 a18(r121): [91..92]
 a19(r91): [93..94]
 a20(r90): [99..100]
 a21(r89): [108..122] [101..102]
 a22(r108): [106..120]
 a23(r112): [111..112]
 a24(r111): [113..114]
 a25(r110): [115..116]
 a26(r109): [117..118]
 a27(r120): [123..124]
 a28(r119): [127..128]
 a29(r88): [129..130]
 a30(r87): [135..136]
 a31(r86): [144..158] [137..138]
 a32(r103): [142..156]
 a33(r107): [147..148]
 a34(r106): [149..150]
 a35(r105): [151..152]
 a36(r104): [153..154]
 a37(r118): [159..160]
 a38(r117): [184..185]
 a39(r85): [190..193]
 a40(r84): [201..215] [194..195]
 a41(r98): [199..213]
 a42(r102): [204..205]
 a43(r101): [206..207]
 a44(r100): [208..209]
 a45(r99): [210..211]
 a46(r116): [216..217]
 a47(r115): [220..221]
 a48(r83): [226..229]
 a49(r82): [237..251] [230..231]
 a50(r93): [235..249]
 a51(r97): [240..241]
 a52(r96): [242..243]
 a53(r95): [244..245]
 a54(r94): [246..247]
 a55(r114): [252..253]
Compressing live ranges: from 260 to 96 - 36%
Ranges after the compression:
 a0(r113): [0..1]
 a1(r92): [2..3]
 a2(r137): [4..5]
 a3(r136): [6..7]
 a4(r135): [8..9]
 a5(r134): [10..11]
 a6(r133): [12..13]
 a7(r132): [12..13]
 a8(r131): [14..15]
 a9(r130): [16..17]
 a10(r129): [16..17]
 a11(r128): [18..19]
 a12(r127): [18..19]
 a13(r126): [20..21]
 a14(r125): [22..23]
 a15(r124): [24..25]
 a16(r123): [26..27]
 a17(r122): [26..27]
 a18(r121): [28..29]
 a19(r91): [30..31]
 a20(r90): [32..33]
 a21(r89): [34..43]
 a22(r108): [36..43]
 a23(r112): [36..37]
 a24(r111): [38..39]
 a25(r110): [40..41]
 a26(r109): [42..43]
 a27(r120): [44..45]
 a28(r119): [46..47]
 a29(r88): [48..49]
 a30(r87): [50..51]
 a31(r86): [52..61]
 a32(r103): [54..61]
 a33(r107): [54..55]
 a34(r106): [56..57]
 a35(r105): [58..59]
 a36(r104): [60..61]
 a37(r118): [62..63]
 a38(r117): [64..65]
 a39(r85): [66..67]
 a40(r84): [68..77]
 a41(r98): [70..77]
 a42(r102): [70..71]
 a43(r101): [72..73]
 a44(r100): [74..75]
 a45(r99): [76..77]
 a46(r116): [78..79]
 a47(r115): [80..81]
 a48(r83): [82..83]
 a49(r82): [84..93]
 a50(r93): [86..93]
 a51(r97): [86..87]
 a52(r96): [88..89]
 a53(r95): [90..91]
 a54(r94): [92..93]
 a55(r114): [94..95]
  pref0:a2(r137)<-hr5@1500
  pref1:a3(r136)<-hr5@1500
  pref2:a4(r135)<-hr5@1500
  pref3:a5(r134)<-hr5@1500
  pref4:a6(r133)<-hr5@1500
  pref5:a7(r132)<-hr4@1500
  pref6:a8(r131)<-hr0@1500
  pref7:a9(r130)<-hr5@1500
  pref8:a10(r129)<-hr4@1500
  pref9:a11(r128)<-hr5@1500
  pref10:a12(r127)<-hr4@1500
  pref11:a13(r126)<-hr0@1500
  pref12:a14(r125)<-hr5@1500
  pref13:a15(r124)<-hr0@1500
  pref14:a16(r123)<-hr5@1500
  pref15:a17(r122)<-hr4@1500
  pref16:a38(r117)<-hr0@1500
  pref17:a47(r115)<-hr0@1500
  pref18:a0(r113)<-hr0@1500
  pref19:a22(r108)<-hr5@1500
  pref20:a32(r103)<-hr5@1500
  pref21:a41(r98)<-hr5@1500
  pref22:a50(r93)<-hr5@1500
  pref23:a19(r91)<-hr0@1500
  pref24:a20(r90)<-hr5@1500
  pref25:a29(r88)<-hr0@1500
  pref26:a30(r87)<-hr5@1500
  pref27:a39(r85)<-hr5@1500
  pref28:a48(r83)<-hr5@1500
  regions=1, blocks=14, points=96
    allocnos=56 (big 0), copies=0, conflicts=0, ranges=56
Disposition:
   49:r82  l0     0   48:r83  l0     0   40:r84  l0     0   39:r85  l0     0
   31:r86  l0     0   30:r87  l0     0   29:r88  l0     0   21:r89  l0     0
   20:r90  l0     0   19:r91  l0     0    1:r92  l0     0   50:r93  l0     1
   54:r94  l0     2   53:r95  l0     2   52:r96  l0     2   51:r97  l0     2
   41:r98  l0     1   45:r99  l0     2   44:r100 l0     2   43:r101 l0     2
   42:r102 l0     2   32:r103 l0     1   36:r104 l0     2   35:r105 l0     2
   34:r106 l0     2   33:r107 l0     2   22:r108 l0     1   26:r109 l0     2
   25:r110 l0     2   24:r111 l0     2   23:r112 l0     2    0:r113 l0     0
   55:r114 l0     0   47:r115 l0     0   46:r116 l0     0   38:r117 l0     0
   37:r118 l0     0   28:r119 l0     0   27:r120 l0     0   18:r121 l0     0
   17:r122 l0     1   16:r123 l0     0   15:r124 l0     0   14:r125 l0     0
   13:r126 l0     0   12:r127 l0     1   11:r128 l0     0   10:r129 l0     1
    9:r130 l0     0    8:r131 l0     0    7:r132 l0     1    6:r133 l0     0
    5:r134 l0     0    4:r135 l0     0    3:r136 l0     0    2:r137 l0     0
+++Costs: overall -13000, reg -13000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


main

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags]
;;  ref usage 	r0={22d,9u} r1={21d} r2={21d} r4={27d,7u} r5={40d,20u} r6={1d,13u} r7={1d,33u} r8={20d} r9={20d} r10={20d} r11={20d} r12={20d} r13={20d} r14={20d} r15={20d} r16={1d,12u} r17={38d,6u} r18={20d} r19={1d,41u,4e} r20={21d} r21={21d} r22={21d} r23={21d} r24={21d} r25={21d} r26={21d} r27={21d} r28={20d} r29={20d} r30={20d} r31={20d} r32={20d} r33={20d} r34={20d} r35={20d} r36={21d} r37={21d} r38={20d} r39={20d} r44={20d} r45={20d} r46={20d} r47={20d} r48={20d} r49={20d} r50={20d} r51={20d} r52={20d} r53={20d} r54={20d} r55={20d} r56={20d} r57={20d} r58={20d} r59={20d} r60={20d} r61={20d} r62={20d} r63={20d} r64={20d} r65={20d} r66={20d} r67={20d} r68={20d} r69={20d} r70={20d} r71={20d} r72={20d} r73={20d} r74={20d} r75={20d} r82={1d,2u} r83={1d,1u} r84={1d,2u} r85={1d,1u} r86={1d,2u} r87={1d,1u} r88={1d,1u} r89={1d,2u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,2u} r94={1d,1u} r95={1d,1u} r96={1d,1u} r97={1d,1u} r98={1d,2u} r99={1d,1u} r100={1d,1u} r101={1d,1u} r102={1d,1u} r103={1d,2u} r104={1d,1u} r105={1d,1u} r106={1d,1u} r107={1d,1u} r108={1d,2u} r109={1d,1u} r110={1d,1u} r111={1d,1u} r112={1d,1u} r113={1d,1u} r114={1d,1u} r115={1d,1u} r116={1d,1u} r117={1d,1u} r118={1d,1u} r119={1d,1u} r120={1d,1u} r121={1d,1u} r122={1d,1u} r123={1d,1u} r124={1d,1u} r125={1d,1u} r126={1d,1u} r127={1d,1u} r128={1d,1u} r129={1d,1u} r130={1d,1u} r131={1d,1u} r132={1d,1u} r133={1d,1u} r134={1d,1u} r135={1d,1u} r136={1d,1u} r137={1d,1u} 
;;    total ref usage 1668{1459d,205u,4e} in 124{104 regular + 20 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 17 [flags] 82 93 94 95 96 97 114
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -68 [0xffffffffffffffbc])) [11 argc+0 S4 A32])
        (reg:SI 5 di [ argc ])) "main.c":11:33 67 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 5 di [ argc ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -80 [0xffffffffffffffb0])) [12 argv+0 S8 A64])
        (reg:DI 4 si [ argv ])) "main.c":11:33 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ argv ])
        (nil)))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg/f:DI 114)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -80 [0xffffffffffffffb0])) [12 argv+0 S8 A64])) "main.c":12:32 66 {*movdi_internal}
     (nil))
(insn 8 7 9 2 (parallel [
            (set (reg/f:DI 82 [ _1 ])
                (plus:DI (reg/f:DI 114)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":12:32 191 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 114)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                            (const_int -80 [0xffffffffffffffb0])) [12 argv+0 S8 A64])
                    (const_int 8 [0x8]))
                (nil)))))
(insn 9 8 10 2 (set (reg:DI 93 [ _39 ])
        (reg/f:DI 82 [ _1 ])) "main.c":12:22 66 {*movdi_internal}
     (nil))
(insn 10 9 11 2 (parallel [
            (set (reg:DI 94 [ _40 ])
                (lshiftrt:DI (reg:DI 93 [ _39 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":12:22 566 {*lshrdi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 11 10 12 2 (parallel [
            (set (reg:DI 95 [ _41 ])
                (plus:DI (reg:DI 94 [ _40 ])
                    (const_int 2147450880 [0x7fff8000])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":12:22 191 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 94 [ _40 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 12 11 13 2 (set (reg/f:DI 96 [ _42 ])
        (reg:DI 95 [ _41 ])) "main.c":12:22 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 95 [ _41 ])
        (nil)))
(insn 13 12 14 2 (set (reg:QI 97 [ _43 ])
        (mem:QI (reg/f:DI 96 [ _42 ]) [7 *_42+0 S1 A8])) "main.c":12:22 69 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:DI 96 [ _42 ])
        (nil)))
(insn 14 13 15 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 97 [ _43 ])
            (const_int 0 [0]))) "main.c":12:22 5 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 97 [ _43 ])
        (nil)))
(jump_insn 15 14 16 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 20)
            (pc))) "main.c":12:22 659 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 20)
;;  succ:       4 [100.0% (guessed)] 
;;              3 [0.0% (guessed)]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 82 93

;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 4, flags: (RTL)
;;  pred:       2 [0.0% (guessed)]  (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 93
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 93
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
(note 16 15 17 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 17 16 18 3 (set (reg:DI 5 di)
        (reg:DI 93 [ _39 ])) "main.c":12:22 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 93 [ _39 ])
        (nil)))
(call_insn 18 17 19 3 (call (mem:QI (symbol_ref:DI ("__asan_report_load8") [flags 0x41]  <function_decl 0x7ffa22daa900 __builtin___asan_report_load8>) [0 __builtin___asan_report_load8 S1 A8])
        (const_int 0 [0])) "main.c":12:22 666 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 19 [frame]

(barrier 19 18 20)
;; basic block 4, loop depth 0, maybe hot
;;  prev block 3, next block 5, flags: (RTL)
;;  pred:       2 [100.0% (guessed)] 
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 82
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 82
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 83 84 98 99 100 101 102 115 116
(code_label 20 19 21 4 2 (nil) [1 uses])
(note 21 20 22 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 22 21 23 4 (set (reg/f:DI 83 [ _2 ])
        (mem/f:DI (reg/f:DI 82 [ _1 ]) [3 *_1+0 S8 A64])) "main.c":12:22 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 82 [ _1 ])
        (nil)))
(insn 23 22 24 4 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x7ffa22b3a360 *.LC0>)) "main.c":12:22 66 {*movdi_internal}
     (nil))
(insn 24 23 25 4 (set (reg:DI 5 di)
        (reg/f:DI 83 [ _2 ])) "main.c":12:22 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 83 [ _2 ])
        (nil)))
(call_insn 25 24 26 4 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fopen") [flags 0x41]  <function_decl 0x7ffa22e2be00 fopen>) [0 fopen S1 A8])
            (const_int 0 [0]))) "main.c":12:22 677 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 26 25 27 4 (set (reg:DI 115)
        (reg:DI 0 ax)) "main.c":12:22 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 27 26 28 4 (set (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -56 [0xffffffffffffffc8])) [10 fSensor+0 S8 A64])
        (reg:DI 115)) "main.c":12:22 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 115)
        (nil)))
(insn 28 27 29 4 (set (reg/f:DI 116)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -80 [0xffffffffffffffb0])) [12 argv+0 S8 A64])) "main.c":13:34 66 {*movdi_internal}
     (nil))
(insn 29 28 30 4 (parallel [
            (set (reg/f:DI 84 [ _3 ])
                (plus:DI (reg/f:DI 116)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":13:34 191 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 116)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                            (const_int -80 [0xffffffffffffffb0])) [12 argv+0 S8 A64])
                    (const_int 16 [0x10]))
                (nil)))))
(insn 30 29 31 4 (set (reg:DI 98 [ _44 ])
        (reg/f:DI 84 [ _3 ])) "main.c":13:24 66 {*movdi_internal}
     (nil))
(insn 31 30 32 4 (parallel [
            (set (reg:DI 99 [ _45 ])
                (lshiftrt:DI (reg:DI 98 [ _44 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":13:24 566 {*lshrdi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 32 31 33 4 (parallel [
            (set (reg:DI 100 [ _46 ])
                (plus:DI (reg:DI 99 [ _45 ])
                    (const_int 2147450880 [0x7fff8000])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":13:24 191 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 99 [ _45 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 33 32 34 4 (set (reg/f:DI 101 [ _47 ])
        (reg:DI 100 [ _46 ])) "main.c":13:24 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 100 [ _46 ])
        (nil)))
(insn 34 33 35 4 (set (reg:QI 102 [ _48 ])
        (mem:QI (reg/f:DI 101 [ _47 ]) [7 *_47+0 S1 A8])) "main.c":13:24 69 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:DI 101 [ _47 ])
        (nil)))
(insn 35 34 36 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 102 [ _48 ])
            (const_int 0 [0]))) "main.c":13:24 5 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 102 [ _48 ])
        (nil)))
(jump_insn 36 35 37 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 41)
            (pc))) "main.c":13:24 659 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 41)
;;  succ:       6 [100.0% (guessed)] 
;;              5 [0.0% (guessed)]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 84 98

;; basic block 5, loop depth 0, maybe hot
;;  prev block 4, next block 6, flags: (RTL)
;;  pred:       4 [0.0% (guessed)]  (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 98
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 98
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
(note 37 36 38 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 38 37 39 5 (set (reg:DI 5 di)
        (reg:DI 98 [ _44 ])) "main.c":13:24 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 98 [ _44 ])
        (nil)))
(call_insn 39 38 40 5 (call (mem:QI (symbol_ref:DI ("__asan_report_load8") [flags 0x41]  <function_decl 0x7ffa22daa900 __builtin___asan_report_load8>) [0 __builtin___asan_report_load8 S1 A8])
        (const_int 0 [0])) "main.c":13:24 666 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 19 [frame]

(barrier 40 39 41)
;; basic block 6, loop depth 0, maybe hot
;;  prev block 5, next block 7, flags: (RTL)
;;  pred:       4 [100.0% (guessed)] 
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 84
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 84
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 85 117
(code_label 41 40 42 6 3 (nil) [1 uses])
(note 42 41 43 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 43 42 44 6 (set (reg/f:DI 85 [ _4 ])
        (mem/f:DI (reg/f:DI 84 [ _3 ]) [3 *_3+0 S8 A64])) "main.c":13:24 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 84 [ _3 ])
        (nil)))
(insn 44 43 45 6 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x7ffa22b3a360 *.LC0>)) "main.c":13:24 66 {*movdi_internal}
     (nil))
(insn 45 44 46 6 (set (reg:DI 5 di)
        (reg/f:DI 85 [ _4 ])) "main.c":13:24 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 85 [ _4 ])
        (nil)))
(call_insn 46 45 47 6 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fopen") [flags 0x41]  <function_decl 0x7ffa22e2be00 fopen>) [0 fopen S1 A8])
            (const_int 0 [0]))) "main.c":13:24 677 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 47 46 48 6 (set (reg:DI 117)
        (reg:DI 0 ax)) "main.c":13:24 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 48 47 49 6 (set (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -48 [0xffffffffffffffd0])) [10 fReadings+0 S8 A64])
        (reg:DI 117)) "main.c":13:24 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 117)
        (nil)))
(insn 49 48 50 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                    (const_int -56 [0xffffffffffffffc8])) [10 fSensor+0 S8 A64])
            (const_int 0 [0]))) "main.c":14:8 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 50 49 51 6 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 54)
            (pc))) "main.c":14:8 659 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 54)
;;  succ:       8
;;              7 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 7, loop depth 0, maybe hot
;;  prev block 6, next block 8, flags: (RTL)
;;  pred:       6 (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 17 [flags]
(note 51 50 52 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 52 51 53 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                    (const_int -48 [0xffffffffffffffd0])) [10 fReadings+0 S8 A64])
            (const_int 0 [0]))) "main.c":14:25 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 53 52 54 7 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 62)
            (pc))) "main.c":14:25 659 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 62)
;;  succ:       8 (FALLTHRU)
;;              9
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 8, loop depth 0, maybe hot
;;  prev block 7, next block 9, flags: (RTL)
;;  pred:       6
;;              7 (FALLTHRU)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
(code_label 54 53 55 8 4 (nil) [1 uses])
(note 55 54 56 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 56 55 57 8 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7ffa22b3a3f0 *.LC1>)) "main.c":15:9 66 {*movdi_internal}
     (nil))
(call_insn 57 56 58 8 (call (mem:QI (symbol_ref:DI ("perror") [flags 0x41]  <function_decl 0x7ffa22e64500 perror>) [0 perror S1 A8])
        (const_int 0 [0])) "main.c":15:9 666 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(call_insn 58 57 59 8 (call (mem:QI (symbol_ref:DI ("__asan_handle_no_return") [flags 0x41]  <function_decl 0x7ffa22db2800 __builtin___asan_handle_no_return>) [0 __builtin___asan_handle_no_return S1 A8])
        (const_int 0 [0])) "main.c":16:9 666 {*call}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))
(insn 59 58 60 8 (set (reg:SI 5 di)
        (const_int 1 [0x1])) "main.c":16:9 67 {*movsi_internal}
     (nil))
(call_insn 60 59 61 8 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x7ffa22d81900 exit>) [0 __builtin_exit S1 A8])
        (const_int 0 [0])) "main.c":16:9 666 {*call}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 19 [frame]

(barrier 61 60 62)
;; basic block 9, loop depth 0, maybe hot
;;  prev block 8, next block 10, flags: (RTL)
;;  pred:       7
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 17 [flags] 86 103 104 105 106 107 118
(code_label 62 61 63 9 5 (nil) [1 uses])
(note 63 62 64 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 64 63 65 9 (set (reg/f:DI 118)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -80 [0xffffffffffffffb0])) [12 argv+0 S8 A64])) "main.c":18:32 66 {*movdi_internal}
     (nil))
(insn 65 64 66 9 (parallel [
            (set (reg/f:DI 86 [ _5 ])
                (plus:DI (reg/f:DI 118)
                    (const_int 24 [0x18])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":18:32 191 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 118)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                            (const_int -80 [0xffffffffffffffb0])) [12 argv+0 S8 A64])
                    (const_int 24 [0x18]))
                (nil)))))
(insn 66 65 67 9 (set (reg:DI 103 [ _49 ])
        (reg/f:DI 86 [ _5 ])) "main.c":18:23 66 {*movdi_internal}
     (nil))
(insn 67 66 68 9 (parallel [
            (set (reg:DI 104 [ _50 ])
                (lshiftrt:DI (reg:DI 103 [ _49 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":18:23 566 {*lshrdi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 68 67 69 9 (parallel [
            (set (reg:DI 105 [ _51 ])
                (plus:DI (reg:DI 104 [ _50 ])
                    (const_int 2147450880 [0x7fff8000])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":18:23 191 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 104 [ _50 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 69 68 70 9 (set (reg/f:DI 106 [ _52 ])
        (reg:DI 105 [ _51 ])) "main.c":18:23 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 105 [ _51 ])
        (nil)))
(insn 70 69 71 9 (set (reg:QI 107 [ _53 ])
        (mem:QI (reg/f:DI 106 [ _52 ]) [7 *_52+0 S1 A8])) "main.c":18:23 69 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:DI 106 [ _52 ])
        (nil)))
(insn 71 70 72 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 107 [ _53 ])
            (const_int 0 [0]))) "main.c":18:23 5 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 107 [ _53 ])
        (nil)))
(jump_insn 72 71 73 9 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 77)
            (pc))) "main.c":18:23 659 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 77)
;;  succ:       11 [100.0% (guessed)] 
;;              10 [0.0% (guessed)]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 86 103

;; basic block 10, loop depth 0, maybe hot
;;  prev block 9, next block 11, flags: (RTL)
;;  pred:       9 [0.0% (guessed)]  (FALLTHRU)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 103
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 103
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
(note 73 72 74 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 74 73 75 10 (set (reg:DI 5 di)
        (reg:DI 103 [ _49 ])) "main.c":18:23 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 103 [ _49 ])
        (nil)))
(call_insn 75 74 76 10 (call (mem:QI (symbol_ref:DI ("__asan_report_load8") [flags 0x41]  <function_decl 0x7ffa22daa900 __builtin___asan_report_load8>) [0 __builtin___asan_report_load8 S1 A8])
        (const_int 0 [0])) "main.c":18:23 666 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 19 [frame]

(barrier 76 75 77)
;; basic block 11, loop depth 0, maybe hot
;;  prev block 10, next block 12, flags: (RTL)
;;  pred:       9 [100.0% (guessed)] 
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 86
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 86
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 87 88 89 108 109 110 111 112 119 120
(code_label 77 76 78 11 6 (nil) [1 uses])
(note 78 77 79 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 79 78 80 11 (set (reg/f:DI 87 [ _6 ])
        (mem/f:DI (reg/f:DI 86 [ _5 ]) [3 *_5+0 S8 A64])) "main.c":18:23 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 86 [ _5 ])
        (nil)))
(insn 80 79 81 11 (set (reg:DI 5 di)
        (reg/f:DI 87 [ _6 ])) "main.c":18:23 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87 [ _6 ])
        (nil)))
(call_insn/i 81 80 82 11 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("atoi") [flags 0x41]  <function_decl 0x7ffa22e69600 atoi>) [0 atoi S1 A8])
            (const_int 0 [0]))) "main.c":18:23 677 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 82 81 83 11 (set (reg:SI 88 [ _7 ])
        (reg:SI 0 ax)) "main.c":18:23 67 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 83 82 84 11 (set (reg:DI 119)
        (sign_extend:DI (reg:SI 88 [ _7 ]))) "main.c":18:12 128 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 88 [ _7 ])
        (nil)))
(insn 84 83 85 11 (set (mem/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -40 [0xffffffffffffffd8])) [2 yearFrom+0 S8 A64])
        (reg:DI 119)) "main.c":18:12 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 119)
        (nil)))
(insn 85 84 86 11 (set (reg/f:DI 120)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -80 [0xffffffffffffffb0])) [12 argv+0 S8 A64])) "main.c":19:30 66 {*movdi_internal}
     (nil))
(insn 86 85 87 11 (parallel [
            (set (reg/f:DI 89 [ _8 ])
                (plus:DI (reg/f:DI 120)
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":19:30 191 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 120)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                            (const_int -80 [0xffffffffffffffb0])) [12 argv+0 S8 A64])
                    (const_int 32 [0x20]))
                (nil)))))
(insn 87 86 88 11 (set (reg:DI 108 [ _54 ])
        (reg/f:DI 89 [ _8 ])) "main.c":19:21 66 {*movdi_internal}
     (nil))
(insn 88 87 89 11 (parallel [
            (set (reg:DI 109 [ _55 ])
                (lshiftrt:DI (reg:DI 108 [ _54 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":19:21 566 {*lshrdi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 89 88 90 11 (parallel [
            (set (reg:DI 110 [ _56 ])
                (plus:DI (reg:DI 109 [ _55 ])
                    (const_int 2147450880 [0x7fff8000])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":19:21 191 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 109 [ _55 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 90 89 91 11 (set (reg/f:DI 111 [ _57 ])
        (reg:DI 110 [ _56 ])) "main.c":19:21 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 110 [ _56 ])
        (nil)))
(insn 91 90 92 11 (set (reg:QI 112 [ _58 ])
        (mem:QI (reg/f:DI 111 [ _57 ]) [7 *_57+0 S1 A8])) "main.c":19:21 69 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:DI 111 [ _57 ])
        (nil)))
(insn 92 91 93 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 112 [ _58 ])
            (const_int 0 [0]))) "main.c":19:21 5 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 112 [ _58 ])
        (nil)))
(jump_insn 93 92 94 11 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 98)
            (pc))) "main.c":19:21 659 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 98)
;;  succ:       13 [100.0% (guessed)] 
;;              12 [0.0% (guessed)]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 89 108

;; basic block 12, loop depth 0, maybe hot
;;  prev block 11, next block 13, flags: (RTL)
;;  pred:       11 [0.0% (guessed)]  (FALLTHRU)
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 108
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 108
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
(note 94 93 95 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 95 94 96 12 (set (reg:DI 5 di)
        (reg:DI 108 [ _54 ])) "main.c":19:21 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 108 [ _54 ])
        (nil)))
(call_insn 96 95 97 12 (call (mem:QI (symbol_ref:DI ("__asan_report_load8") [flags 0x41]  <function_decl 0x7ffa22daa900 __builtin___asan_report_load8>) [0 __builtin___asan_report_load8 S1 A8])
        (const_int 0 [0])) "main.c":19:21 666 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 19 [frame]

(barrier 97 96 98)
;; basic block 13, loop depth 0, maybe hot
;;  prev block 12, next block 1, flags: (RTL)
;;  pred:       11 [100.0% (guessed)] 
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 89
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 89
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 90 91 92 113 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137
(code_label 98 97 99 13 7 (nil) [1 uses])
(note 99 98 100 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 100 99 101 13 (set (reg/f:DI 90 [ _9 ])
        (mem/f:DI (reg/f:DI 89 [ _8 ]) [3 *_8+0 S8 A64])) "main.c":19:21 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 89 [ _8 ])
        (nil)))
(insn 101 100 102 13 (set (reg:DI 5 di)
        (reg/f:DI 90 [ _9 ])) "main.c":19:21 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 90 [ _9 ])
        (nil)))
(call_insn/i 102 101 103 13 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("atoi") [flags 0x41]  <function_decl 0x7ffa22e69600 atoi>) [0 atoi S1 A8])
            (const_int 0 [0]))) "main.c":19:21 677 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 103 102 104 13 (set (reg:SI 91 [ _10 ])
        (reg:SI 0 ax)) "main.c":19:21 67 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 104 103 105 13 (set (reg:DI 121)
        (sign_extend:DI (reg:SI 91 [ _10 ]))) "main.c":19:12 128 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 91 [ _10 ])
        (nil)))
(insn 105 104 106 13 (set (mem/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -32 [0xffffffffffffffe0])) [2 yearTo+0 S8 A64])
        (reg:DI 121)) "main.c":19:12 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 121)
        (nil)))
(insn 106 105 107 13 (set (reg:DI 122)
        (mem/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -32 [0xffffffffffffffe0])) [2 yearTo+0 S8 A64])) "main.c":20:22 66 {*movdi_internal}
     (nil))
(insn 107 106 108 13 (set (reg:DI 123)
        (mem/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -40 [0xffffffffffffffd8])) [2 yearFrom+0 S8 A64])) "main.c":20:22 66 {*movdi_internal}
     (nil))
(insn 108 107 109 13 (set (reg:DI 4 si)
        (reg:DI 122)) "main.c":20:22 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 122)
        (nil)))
(insn 109 108 110 13 (set (reg:DI 5 di)
        (reg:DI 123)) "main.c":20:22 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 123)
        (nil)))
(call_insn 110 109 111 13 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("newQuery") [flags 0x41]  <function_decl 0x7ffa22afeb00 newQuery>) [0 newQuery S1 A8])
            (const_int 0 [0]))) "main.c":20:22 677 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 111 110 112 13 (set (reg:DI 124)
        (reg:DI 0 ax)) "main.c":20:22 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 112 111 113 13 (set (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -24 [0xffffffffffffffe8])) [9 query+0 S8 A64])
        (reg:DI 124)) "main.c":20:22 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 124)
        (nil)))
(insn 113 112 114 13 (set (reg:DI 125)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -56 [0xffffffffffffffc8])) [10 fSensor+0 S8 A64])) "main.c":21:25 66 {*movdi_internal}
     (nil))
(insn 114 113 115 13 (set (reg:DI 5 di)
        (reg:DI 125)) "main.c":21:25 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 125)
        (nil)))
(call_insn 115 114 116 13 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("createSensorV") [flags 0x3]  <function_decl 0x7ffa22b09200 createSensorV>) [0 createSensorV S1 A8])
            (const_int 0 [0]))) "main.c":21:25 677 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 116 115 117 13 (set (reg:DI 126)
        (reg:DI 0 ax)) "main.c":21:25 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 117 116 118 13 (set (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -16 [0xfffffffffffffff0])) [8 vectorS+0 S8 A64])
        (reg:DI 126)) "main.c":21:25 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 126)
        (nil)))
(insn 118 117 119 13 (set (reg:DI 127)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -16 [0xfffffffffffffff0])) [8 vectorS+0 S8 A64])) "main.c":22:5 66 {*movdi_internal}
     (nil))
(insn 119 118 120 13 (set (reg:DI 128)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -24 [0xffffffffffffffe8])) [9 query+0 S8 A64])) "main.c":22:5 66 {*movdi_internal}
     (nil))
(insn 120 119 121 13 (set (reg:DI 4 si)
        (reg:DI 127)) "main.c":22:5 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 127)
        (nil)))
(insn 121 120 122 13 (set (reg:DI 5 di)
        (reg:DI 128)) "main.c":22:5 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 128)
        (nil)))
(call_insn 122 121 123 13 (call (mem:QI (symbol_ref:DI ("insertVector") [flags 0x41]  <function_decl 0x7ffa22afe700 insertVector>) [0 insertVector S1 A8])
        (const_int 0 [0])) "main.c":22:5 666 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 123 122 124 13 (set (reg:DI 129)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -24 [0xffffffffffffffe8])) [9 query+0 S8 A64])) "main.c":23:21 66 {*movdi_internal}
     (nil))
(insn 124 123 125 13 (set (reg:DI 130)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -48 [0xffffffffffffffd0])) [10 fReadings+0 S8 A64])) "main.c":23:21 66 {*movdi_internal}
     (nil))
(insn 125 124 126 13 (set (reg:DI 4 si)
        (reg:DI 129)) "main.c":23:21 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 129)
        (nil)))
(insn 126 125 127 13 (set (reg:DI 5 di)
        (reg:DI 130)) "main.c":23:21 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 130)
        (nil)))
(call_insn 127 126 128 13 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("createYearL") [flags 0x3]  <function_decl 0x7ffa22b09100 createYearL>) [0 createYearL S1 A8])
            (const_int 0 [0]))) "main.c":23:21 677 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 128 127 129 13 (set (reg:DI 131)
        (reg:DI 0 ax)) "main.c":23:21 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 129 128 130 13 (set (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [6 years+0 S8 A64])
        (reg:DI 131)) "main.c":23:21 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 131)
        (nil)))
(insn 130 129 131 13 (set (reg:DI 132)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [6 years+0 S8 A64])) "main.c":24:5 66 {*movdi_internal}
     (nil))
(insn 131 130 132 13 (set (reg:DI 133)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -24 [0xffffffffffffffe8])) [9 query+0 S8 A64])) "main.c":24:5 66 {*movdi_internal}
     (nil))
(insn 132 131 133 13 (set (reg:DI 4 si)
        (reg:DI 132)) "main.c":24:5 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 132)
        (nil)))
(insn 133 132 134 13 (set (reg:DI 5 di)
        (reg:DI 133)) "main.c":24:5 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 133)
        (nil)))
(call_insn 134 133 135 13 (call (mem:QI (symbol_ref:DI ("insertYearL") [flags 0x41]  <function_decl 0x7ffa22afea00 insertYearL>) [0 insertYearL S1 A8])
        (const_int 0 [0])) "main.c":24:5 666 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 135 134 136 13 (set (reg:DI 134)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -24 [0xffffffffffffffe8])) [9 query+0 S8 A64])) "main.c":25:5 66 {*movdi_internal}
     (nil))
(insn 136 135 137 13 (set (reg:DI 5 di)
        (reg:DI 134)) "main.c":25:5 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 134)
        (nil)))
(call_insn 137 136 138 13 (call (mem:QI (symbol_ref:DI ("makeSenL") [flags 0x41]  <function_decl 0x7ffa22afef00 makeSenL>) [0 makeSenL S1 A8])
        (const_int 0 [0])) "main.c":25:5 666 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 138 137 139 13 (set (reg:DI 135)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -24 [0xffffffffffffffe8])) [9 query+0 S8 A64])) "main.c":26:5 66 {*movdi_internal}
     (nil))
(insn 139 138 140 13 (set (reg:DI 5 di)
        (reg:DI 135)) "main.c":26:5 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 135)
        (nil)))
(call_insn 140 139 141 13 (call (mem:QI (symbol_ref:DI ("freeQuery") [flags 0x41]  <function_decl 0x7ffa22afed00 freeQuery>) [0 freeQuery S1 A8])
        (const_int 0 [0])) "main.c":26:5 666 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 141 140 142 13 (set (reg:DI 136)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -48 [0xffffffffffffffd0])) [10 fReadings+0 S8 A64])) "main.c":27:5 66 {*movdi_internal}
     (nil))
(insn 142 141 143 13 (set (reg:DI 5 di)
        (reg:DI 136)) "main.c":27:5 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 136)
        (nil)))
(call_insn 143 142 144 13 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fclose") [flags 0x41]  <function_decl 0x7ffa22e2bc00 fclose>) [0 fclose S1 A8])
            (const_int 0 [0]))) "main.c":27:5 677 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 144 143 145 13 (set (reg:DI 137)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -56 [0xffffffffffffffc8])) [10 fSensor+0 S8 A64])) "main.c":28:5 66 {*movdi_internal}
     (nil))
(insn 145 144 146 13 (set (reg:DI 5 di)
        (reg:DI 137)) "main.c":28:5 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 137)
        (nil)))
(call_insn 146 145 147 13 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fclose") [flags 0x41]  <function_decl 0x7ffa22e2bc00 fclose>) [0 fclose S1 A8])
            (const_int 0 [0]))) "main.c":28:5 677 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 147 146 150 13 (set (reg:SI 92 [ _31 ])
        (const_int 0 [0])) "main.c":29:12 67 {*movsi_internal}
     (nil))
(insn 150 147 154 13 (set (reg:SI 113 [ <retval> ])
        (reg:SI 92 [ _31 ])) 67 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 92 [ _31 ])
        (nil)))
(insn 154 150 155 13 (set (reg/i:SI 0 ax)
        (reg:SI 113 [ <retval> ])) "main.c":30:1 67 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 113 [ <retval> ])
        (nil)))
(insn 155 154 0 13 (use (reg/i:SI 0 ax)) "main.c":30:1 -1
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 19 [frame]


;; Function createSensorV (createSensorV, funcdef_no=1, decl_uid=3399, cgraph_uid=2, symbol_order=1)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 39 n_edges 44 count 68 (  1.7)
;; 4 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38
;;
;; Loop 1
;;  header 32, latch 31
;;  depth 1, outer 0
;;  nodes: 32 31 30 8 29 28 9 26 24 22 20 18 16 14 12 10
;;
;; Loop 2
;;  header 31, latch 30
;;  depth 2, outer 1
;;  nodes: 31 30 29 28 9 26 24 22 20 18 16 14 12 10
;;
;; Loop 3
;;  header 29, latch 28
;;  depth 3, outer 2
;;  nodes: 29 28 26 24 22 20 18 16 14 12 10
;; 2 succs { 5 3 }
;; 3 succs { 5 4 }
;; 4 succs { 5 }
;; 5 succs { 6 7 }
;; 6 succs { }
;; 7 succs { 32 }
;; 8 succs { 31 }
;; 9 succs { 29 }
;; 10 succs { 12 11 }
;; 11 succs { }
;; 12 succs { 14 13 }
;; 13 succs { }
;; 14 succs { 16 15 }
;; 15 succs { }
;; 16 succs { 18 17 }
;; 17 succs { }
;; 18 succs { 19 20 }
;; 19 succs { }
;; 20 succs { 22 21 }
;; 21 succs { }
;; 22 succs { 24 23 }
;; 23 succs { }
;; 24 succs { 26 25 }
;; 25 succs { }
;; 26 succs { 28 27 }
;; 27 succs { }
;; 28 succs { 29 }
;; 29 succs { 10 30 }
;; 30 succs { 31 }
;; 31 succs { 9 32 }
;; 32 succs { 8 33 }
;; 33 succs { 35 34 }
;; 34 succs { 36 }
;; 35 succs { 36 }
;; 36 succs { 38 37 }
;; 37 succs { }
;; 38 succs { 1 }
Building IRA IR
verify found no changes in insn with uid = 7.
verify found no changes in insn with uid = 45.
verify found no changes in insn with uid = 52.
verify found no changes in insn with uid = 53.
verify found no changes in insn with uid = 55.
verify found no changes in insn with uid = 64.
verify found no changes in insn with uid = 75.
verify found no changes in insn with uid = 83.
verify found no changes in insn with uid = 89.
verify found no changes in insn with uid = 104.
verify found no changes in insn with uid = 116.
verify found no changes in insn with uid = 141.
verify found no changes in insn with uid = 158.
verify found no changes in insn with uid = 171.
verify found no changes in insn with uid = 196.
verify found no changes in insn with uid = 205.
verify found no changes in insn with uid = 206.
verify found no changes in insn with uid = 208.
verify found no changes in insn with uid = 232.
verify found no changes in insn with uid = 240.
verify found no changes in insn with uid = 268.
verify found no changes in insn with uid = 275.
verify found no changes in insn with uid = 304.
verify found no changes in insn with uid = 327.
verify found no changes in insn with uid = 334.
verify found no changes in insn with uid = 351.
verify found no changes in insn with uid = 360.
verify found no changes in insn with uid = 375.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r225: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a7 (r225,l0) best DIREG, allocno GENERAL_REGS
    r224: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a10 (r224,l0) best DIREG, allocno GENERAL_REGS
    r223: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a11 (r223,l0) best DREG, allocno GENERAL_REGS
    r222: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a12 (r222,l0) best AREG, allocno GENERAL_REGS
    r221: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a24 (r221,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r220: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a35 (r220,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r219: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a39 (r219,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r218: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a38 (r218,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r217: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a40 (r217,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r216: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a41 (r216,l0) best AREG, allocno GENERAL_REGS
    r215: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a52 (r215,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r214: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a56 (r214,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r213: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a55 (r213,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r212: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a57 (r212,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r211: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a59 (r211,l0) best SIREG, allocno GENERAL_REGS
    r210: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a67 (r210,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r209: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a71 (r209,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r208: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a70 (r208,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r207: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a72 (r207,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r206: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a81 (r206,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r205: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a85 (r205,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r204: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a84 (r204,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r203: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a86 (r203,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r202: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a95 (r202,l0) best AREG, allocno GENERAL_REGS
    r201: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a97 (r201,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r200: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a101 (r200,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r199: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a100 (r199,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r198: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a102 (r198,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r197: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a111 (r197,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r196: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a115 (r196,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r195: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a114 (r195,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r194: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a116 (r194,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r193: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a125 (r193,l0) best DIREG, allocno GENERAL_REGS
    r192: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a126 (r192,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r191: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a130 (r191,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r190: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a129 (r190,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r189: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a131 (r189,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r188: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a132 (r188,l0) best AREG, allocno GENERAL_REGS
    r187: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a133 (r187,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r186: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a135 (r186,l0) best DIREG, allocno GENERAL_REGS
    r185: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a136 (r185,l0) best AREG, allocno GENERAL_REGS
    r184: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a137 (r184,l0) best DIREG, allocno GENERAL_REGS
    r183: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a138 (r183,l0) best DIREG, allocno GENERAL_REGS
    r182: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a139 (r182,l0) best DREG, allocno GENERAL_REGS
    r181: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a140 (r181,l0) best AREG, allocno GENERAL_REGS
    r180: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r180,l0) best AREG, allocno GENERAL_REGS
    r179: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r179,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r178: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r178,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r177: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a141 (r177,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r176: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a142 (r176,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r175: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a143 (r175,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r174: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r174,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r173: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r173,l0) best AREG, allocno GENERAL_REGS
    r172: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r172,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r171: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a16 (r171,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r170: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a17 (r170,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r169: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a18 (r169,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r168: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a19 (r168,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r167: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a20 (r167,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r166: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a21 (r166,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r165: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a22 (r165,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r164: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a15 (r164,l0) best DIREG, allocno GENERAL_REGS
    r163: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a26 (r163,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r162: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a27 (r162,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r161: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a30 (r161,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r160: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a31 (r160,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r159: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a28 (r159,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r158: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a29 (r158,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r157: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a32 (r157,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r156: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a33 (r156,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r155: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a34 (r155,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r154: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a25 (r154,l0) best DIREG, allocno GENERAL_REGS
    r153: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a44 (r153,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r152: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a45 (r152,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r151: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a46 (r151,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r150: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a47 (r150,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r149: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a48 (r149,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r148: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a49 (r148,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r147: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a50 (r147,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r146: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a43 (r146,l0) best DIREG, allocno GENERAL_REGS
    r145: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a62 (r145,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r144: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a63 (r144,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r143: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a64 (r143,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r142: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a65 (r142,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r141: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a61 (r141,l0) best DIREG, allocno GENERAL_REGS
    r140: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a76 (r140,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r139: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a77 (r139,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r138: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a78 (r138,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r137: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a79 (r137,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r136: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a75 (r136,l0) best DIREG, allocno GENERAL_REGS
    r135: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a90 (r135,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r134: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a91 (r134,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r133: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a92 (r133,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r132: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a93 (r132,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r131: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a89 (r131,l0) best DIREG, allocno GENERAL_REGS
    r130: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a106 (r130,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r129: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a107 (r129,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r128: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a108 (r128,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r127: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a109 (r127,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r126: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a105 (r126,l0) best DIREG, allocno GENERAL_REGS
    r125: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a120 (r125,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r124: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a121 (r124,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r123: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a122 (r123,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r122: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a123 (r122,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r121: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a119 (r121,l0) best DIREG, allocno GENERAL_REGS
    r120: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a23 (r120,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r119: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a51 (r119,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r118: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a66 (r118,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r117: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a80 (r117,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r116: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a94 (r116,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r115: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a110 (r115,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r114: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a124 (r114,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r113: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r113,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r112: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a6 (r112,l0) best AREG, allocno GENERAL_REGS
    r111: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a9 (r111,l0) best AREG, allocno GENERAL_REGS
    r110: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a14 (r110,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r109: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a13 (r109,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r108: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a36 (r108,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r107: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a37 (r107,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r106: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a42 (r106,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r105: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a53 (r105,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r104: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a54 (r104,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r103: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a58 (r103,l0) best DIREG, allocno GENERAL_REGS
    r102: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a60 (r102,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r101: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a68 (r101,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r100: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a69 (r100,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r99: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a73 (r99,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r98: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a74 (r98,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r97: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a82 (r97,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r96: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a83 (r96,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r95: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a88 (r95,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r94: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a87 (r94,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a98 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a99 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a96 (r91,l0) best DIREG, allocno GENERAL_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a103 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a104 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a112 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a113 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r86: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a118 (r86,l0) best AREG, allocno GENERAL_REGS
    r85: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a117 (r85,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r84: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a127 (r84,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r83: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a128 (r83,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r82: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a134 (r82,l0) best AREG, allocno GENERAL_REGS

  a0(r180,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:14000 NO_REX_SSE_REGS:14000 SSE_REGS:14000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:7000
  a1(r178,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:82000 NO_REX_SSE_REGS:82000 SSE_REGS:82000 MMX_REGS:132000 INT_SSE_REGS:132000 ALL_REGS:2122000 MEM:61000
  a2(r179,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16000 NO_REX_SSE_REGS:16000 SSE_REGS:16000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a3(r173,l0) costs: AREG:4000 DREG:4000 CREG:4000 BREG:4000 SIREG:4000 DIREG:4000 AD_REGS:4000 CLOBBERED_REGS:4000 Q_REGS:4000 TLS_GOTBASE_REGS:4000 GENERAL_REGS:4000 SSE_FIRST_REG:82000 NO_REX_SSE_REGS:82000 SSE_REGS:82000 MMX_REGS:145000 INT_SSE_REGS:145000 ALL_REGS:2334000 MEM:65000
  a4(r174,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:14000 NO_REX_SSE_REGS:14000 SSE_REGS:14000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:6000
  a5(r113,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8000 NO_REX_SSE_REGS:8000 SSE_REGS:8000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:11000
  a6(r112,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:16000 NO_REX_SSE_REGS:16000 SSE_REGS:16000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:12000
  a7(r225,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:16000 NO_REX_SSE_REGS:16000 SSE_REGS:16000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a8(r172,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:30000 NO_REX_SSE_REGS:30000 SSE_REGS:30000 MMX_REGS:45000 INT_SSE_REGS:45000 ALL_REGS:736000 MEM:19000
  a9(r111,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:16000 NO_REX_SSE_REGS:16000 SSE_REGS:16000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:12000
  a10(r224,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:16000 NO_REX_SSE_REGS:16000 SSE_REGS:16000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:12000
  a11(r223,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:16000 NO_REX_SSE_REGS:16000 SSE_REGS:16000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a12(r222,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:8000 NO_REX_SSE_REGS:8000 SSE_REGS:8000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:12000
  a13(r109,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:24000 NO_REX_SSE_REGS:24000 SSE_REGS:24000 MMX_REGS:39000 INT_SSE_REGS:39000 ALL_REGS:636000 MEM:17000
  a14(r110,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a15(r164,l0) costs: AREG:4000 DREG:4000 CREG:4000 BREG:4000 SIREG:4000 DIREG:4000 AD_REGS:4000 CLOBBERED_REGS:4000 Q_REGS:4000 TLS_GOTBASE_REGS:4000 GENERAL_REGS:4000 SSE_FIRST_REG:24000 NO_REX_SSE_REGS:24000 SSE_REGS:24000 MMX_REGS:34000 INT_SSE_REGS:34000 ALL_REGS:526000 MEM:14000
  a16(r171,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a17(r170,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:10000
  a18(r169,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:10000
  a19(r168,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:18000
  a20(r167,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:14000 NO_REX_SSE_REGS:14000 SSE_REGS:14000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:7000
  a21(r166,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8000 NO_REX_SSE_REGS:8000 SSE_REGS:8000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a22(r165,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:18000 NO_REX_SSE_REGS:18000 SSE_REGS:18000 MMX_REGS:28000 INT_SSE_REGS:28000 ALL_REGS:426000 MEM:12000
  a23(r120,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8000 NO_REX_SSE_REGS:8000 SSE_REGS:8000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a24(r221,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16000 NO_REX_SSE_REGS:16000 SSE_REGS:16000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a25(r154,l0) costs: AREG:6000 DREG:6000 CREG:6000 BREG:6000 SIREG:6000 DIREG:6000 AD_REGS:6000 CLOBBERED_REGS:6000 Q_REGS:6000 TLS_GOTBASE_REGS:6000 GENERAL_REGS:6000 SSE_FIRST_REG:36000 NO_REX_SSE_REGS:36000 SSE_REGS:36000 MMX_REGS:55000 INT_SSE_REGS:55000 ALL_REGS:746000 MEM:26000
  a26(r163,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a27(r162,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:10000
  a28(r159,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:10000
  a29(r158,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:17000
  a30(r161,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:6000
  a31(r160,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:8000
  a32(r157,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:14000 NO_REX_SSE_REGS:14000 SSE_REGS:14000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:7000
  a33(r156,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8000 NO_REX_SSE_REGS:8000 SSE_REGS:8000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a34(r155,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:18000 NO_REX_SSE_REGS:18000 SSE_REGS:18000 MMX_REGS:28000 INT_SSE_REGS:28000 ALL_REGS:426000 MEM:12000
  a35(r220,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16000 NO_REX_SSE_REGS:16000 SSE_REGS:16000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:11000
  a36(r108,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16000 NO_REX_SSE_REGS:16000 SSE_REGS:16000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a37(r107,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:14000 NO_REX_SSE_REGS:14000 SSE_REGS:14000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:6000
  a38(r218,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:52000 NO_REX_SSE_REGS:52000 SSE_REGS:52000 MMX_REGS:90000 INT_SSE_REGS:90000 ALL_REGS:1472000 MEM:32000
  a39(r219,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8000 NO_REX_SSE_REGS:8000 SSE_REGS:8000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a40(r217,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16000 NO_REX_SSE_REGS:16000 SSE_REGS:16000 MMX_REGS:38000 INT_SSE_REGS:38000 ALL_REGS:530000 MEM:16000
  a41(r216,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:8000 NO_REX_SSE_REGS:8000 SSE_REGS:8000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:12000
  a42(r106,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:24000 NO_REX_SSE_REGS:24000 SSE_REGS:24000 MMX_REGS:39000 INT_SSE_REGS:39000 ALL_REGS:636000 MEM:17000
  a43(r146,l0) costs: AREG:4000 DREG:4000 CREG:4000 BREG:4000 SIREG:4000 DIREG:4000 AD_REGS:4000 CLOBBERED_REGS:4000 Q_REGS:4000 TLS_GOTBASE_REGS:4000 GENERAL_REGS:4000 SSE_FIRST_REG:24000 NO_REX_SSE_REGS:24000 SSE_REGS:24000 MMX_REGS:34000 INT_SSE_REGS:34000 ALL_REGS:526000 MEM:14000
  a44(r153,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a45(r152,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:10000
  a46(r151,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:10000
  a47(r150,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:18000
  a48(r149,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:14000 NO_REX_SSE_REGS:14000 SSE_REGS:14000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:7000
  a49(r148,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8000 NO_REX_SSE_REGS:8000 SSE_REGS:8000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a50(r147,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:18000 NO_REX_SSE_REGS:18000 SSE_REGS:18000 MMX_REGS:28000 INT_SSE_REGS:28000 ALL_REGS:426000 MEM:12000
  a51(r119,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8000 NO_REX_SSE_REGS:8000 SSE_REGS:8000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a52(r215,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16000 NO_REX_SSE_REGS:16000 SSE_REGS:16000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:11000
  a53(r105,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16000 NO_REX_SSE_REGS:16000 SSE_REGS:16000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a54(r104,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:14000 NO_REX_SSE_REGS:14000 SSE_REGS:14000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:6000
  a55(r213,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:52000 NO_REX_SSE_REGS:52000 SSE_REGS:52000 MMX_REGS:90000 INT_SSE_REGS:90000 ALL_REGS:1472000 MEM:32000
  a56(r214,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8000 NO_REX_SSE_REGS:8000 SSE_REGS:8000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a57(r212,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16000 NO_REX_SSE_REGS:16000 SSE_REGS:16000 MMX_REGS:38000 INT_SSE_REGS:38000 ALL_REGS:530000 MEM:16000
  a58(r103,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:16000 NO_REX_SSE_REGS:16000 SSE_REGS:16000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a59(r211,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:16000 NO_REX_SSE_REGS:16000 SSE_REGS:16000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a60(r102,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:24000 NO_REX_SSE_REGS:24000 SSE_REGS:24000 MMX_REGS:39000 INT_SSE_REGS:39000 ALL_REGS:636000 MEM:17000
  a61(r141,l0) costs: AREG:4000 DREG:4000 CREG:4000 BREG:4000 SIREG:4000 DIREG:4000 AD_REGS:4000 CLOBBERED_REGS:4000 Q_REGS:4000 TLS_GOTBASE_REGS:4000 GENERAL_REGS:4000 SSE_FIRST_REG:24000 NO_REX_SSE_REGS:24000 SSE_REGS:24000 MMX_REGS:34000 INT_SSE_REGS:34000 ALL_REGS:526000 MEM:14000
  a62(r145,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a63(r144,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:14000 NO_REX_SSE_REGS:14000 SSE_REGS:14000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:7000
  a64(r143,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8000 NO_REX_SSE_REGS:8000 SSE_REGS:8000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a65(r142,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:18000 NO_REX_SSE_REGS:18000 SSE_REGS:18000 MMX_REGS:28000 INT_SSE_REGS:28000 ALL_REGS:426000 MEM:12000
  a66(r118,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8000 NO_REX_SSE_REGS:8000 SSE_REGS:8000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a67(r210,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16000 NO_REX_SSE_REGS:16000 SSE_REGS:16000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:11000
  a68(r101,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16000 NO_REX_SSE_REGS:16000 SSE_REGS:16000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a69(r100,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:14000 NO_REX_SSE_REGS:14000 SSE_REGS:14000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:6000
  a70(r208,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:52000 NO_REX_SSE_REGS:52000 SSE_REGS:52000 MMX_REGS:90000 INT_SSE_REGS:90000 ALL_REGS:1472000 MEM:32000
  a71(r209,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8000 NO_REX_SSE_REGS:8000 SSE_REGS:8000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a72(r207,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16000 NO_REX_SSE_REGS:16000 SSE_REGS:16000 MMX_REGS:38000 INT_SSE_REGS:38000 ALL_REGS:530000 MEM:16000
  a73(r99,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16000 NO_REX_SSE_REGS:16000 SSE_REGS:16000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a74(r98,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:24000 NO_REX_SSE_REGS:24000 SSE_REGS:24000 MMX_REGS:39000 INT_SSE_REGS:39000 ALL_REGS:636000 MEM:17000
  a75(r136,l0) costs: AREG:4000 DREG:4000 CREG:4000 BREG:4000 SIREG:4000 DIREG:4000 AD_REGS:4000 CLOBBERED_REGS:4000 Q_REGS:4000 TLS_GOTBASE_REGS:4000 GENERAL_REGS:4000 SSE_FIRST_REG:24000 NO_REX_SSE_REGS:24000 SSE_REGS:24000 MMX_REGS:34000 INT_SSE_REGS:34000 ALL_REGS:526000 MEM:14000
  a76(r140,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a77(r139,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:14000 NO_REX_SSE_REGS:14000 SSE_REGS:14000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:7000
  a78(r138,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8000 NO_REX_SSE_REGS:8000 SSE_REGS:8000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a79(r137,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:18000 NO_REX_SSE_REGS:18000 SSE_REGS:18000 MMX_REGS:28000 INT_SSE_REGS:28000 ALL_REGS:426000 MEM:12000
  a80(r117,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8000 NO_REX_SSE_REGS:8000 SSE_REGS:8000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a81(r206,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16000 NO_REX_SSE_REGS:16000 SSE_REGS:16000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:11000
  a82(r97,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16000 NO_REX_SSE_REGS:16000 SSE_REGS:16000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a83(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:14000 NO_REX_SSE_REGS:14000 SSE_REGS:14000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:6000
  a84(r204,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:52000 NO_REX_SSE_REGS:52000 SSE_REGS:52000 MMX_REGS:90000 INT_SSE_REGS:90000 ALL_REGS:1472000 MEM:32000
  a85(r205,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8000 NO_REX_SSE_REGS:8000 SSE_REGS:8000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a86(r203,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16000 NO_REX_SSE_REGS:16000 SSE_REGS:16000 MMX_REGS:38000 INT_SSE_REGS:38000 ALL_REGS:530000 MEM:16000
  a87(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:24000 NO_REX_SSE_REGS:24000 SSE_REGS:24000 MMX_REGS:39000 INT_SSE_REGS:39000 ALL_REGS:636000 MEM:17000
  a88(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:6000 NO_REX_SSE_REGS:6000 SSE_REGS:6000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:7000
  a89(r131,l0) costs: AREG:4000 DREG:4000 CREG:4000 BREG:4000 SIREG:4000 DIREG:4000 AD_REGS:4000 CLOBBERED_REGS:4000 Q_REGS:4000 TLS_GOTBASE_REGS:4000 GENERAL_REGS:4000 SSE_FIRST_REG:24000 NO_REX_SSE_REGS:24000 SSE_REGS:24000 MMX_REGS:34000 INT_SSE_REGS:34000 ALL_REGS:526000 MEM:14000
  a90(r135,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a91(r134,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:14000 NO_REX_SSE_REGS:14000 SSE_REGS:14000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:7000
  a92(r133,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8000 NO_REX_SSE_REGS:8000 SSE_REGS:8000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a93(r132,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:18000 NO_REX_SSE_REGS:18000 SSE_REGS:18000 MMX_REGS:28000 INT_SSE_REGS:28000 ALL_REGS:426000 MEM:12000
  a94(r116,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8000 NO_REX_SSE_REGS:8000 SSE_REGS:8000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a95(r202,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:8000 NO_REX_SSE_REGS:8000 SSE_REGS:8000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a96(r91,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:16000 NO_REX_SSE_REGS:16000 SSE_REGS:16000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a97(r201,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16000 NO_REX_SSE_REGS:16000 SSE_REGS:16000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:11000
  a98(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16000 NO_REX_SSE_REGS:16000 SSE_REGS:16000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a99(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:14000 NO_REX_SSE_REGS:14000 SSE_REGS:14000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:6000
  a100(r199,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:52000 NO_REX_SSE_REGS:52000 SSE_REGS:52000 MMX_REGS:90000 INT_SSE_REGS:90000 ALL_REGS:1472000 MEM:32000
  a101(r200,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8000 NO_REX_SSE_REGS:8000 SSE_REGS:8000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a102(r198,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16000 NO_REX_SSE_REGS:16000 SSE_REGS:16000 MMX_REGS:38000 INT_SSE_REGS:38000 ALL_REGS:530000 MEM:16000
  a103(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16000 NO_REX_SSE_REGS:16000 SSE_REGS:16000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:11000
  a104(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:24000 NO_REX_SSE_REGS:24000 SSE_REGS:24000 MMX_REGS:39000 INT_SSE_REGS:39000 ALL_REGS:636000 MEM:17000
  a105(r126,l0) costs: AREG:4000 DREG:4000 CREG:4000 BREG:4000 SIREG:4000 DIREG:4000 AD_REGS:4000 CLOBBERED_REGS:4000 Q_REGS:4000 TLS_GOTBASE_REGS:4000 GENERAL_REGS:4000 SSE_FIRST_REG:24000 NO_REX_SSE_REGS:24000 SSE_REGS:24000 MMX_REGS:34000 INT_SSE_REGS:34000 ALL_REGS:526000 MEM:14000
  a106(r130,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a107(r129,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:14000 NO_REX_SSE_REGS:14000 SSE_REGS:14000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:7000
  a108(r128,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8000 NO_REX_SSE_REGS:8000 SSE_REGS:8000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a109(r127,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:18000 NO_REX_SSE_REGS:18000 SSE_REGS:18000 MMX_REGS:28000 INT_SSE_REGS:28000 ALL_REGS:426000 MEM:12000
  a110(r115,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8000 NO_REX_SSE_REGS:8000 SSE_REGS:8000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a111(r197,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16000 NO_REX_SSE_REGS:16000 SSE_REGS:16000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:11000
  a112(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16000 NO_REX_SSE_REGS:16000 SSE_REGS:16000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a113(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:14000 NO_REX_SSE_REGS:14000 SSE_REGS:14000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:6000
  a114(r195,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:52000 NO_REX_SSE_REGS:52000 SSE_REGS:52000 MMX_REGS:90000 INT_SSE_REGS:90000 ALL_REGS:1472000 MEM:32000
  a115(r196,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8000 NO_REX_SSE_REGS:8000 SSE_REGS:8000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a116(r194,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16000 NO_REX_SSE_REGS:16000 SSE_REGS:16000 MMX_REGS:38000 INT_SSE_REGS:38000 ALL_REGS:530000 MEM:16000
  a117(r85,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:24000 NO_REX_SSE_REGS:24000 SSE_REGS:24000 MMX_REGS:39000 INT_SSE_REGS:39000 ALL_REGS:636000 MEM:17000
  a118(r86,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:8000 NO_REX_SSE_REGS:8000 SSE_REGS:8000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:12000
  a119(r121,l0) costs: AREG:4000 DREG:4000 CREG:4000 BREG:4000 SIREG:4000 DIREG:4000 AD_REGS:4000 CLOBBERED_REGS:4000 Q_REGS:4000 TLS_GOTBASE_REGS:4000 GENERAL_REGS:4000 SSE_FIRST_REG:24000 NO_REX_SSE_REGS:24000 SSE_REGS:24000 MMX_REGS:34000 INT_SSE_REGS:34000 ALL_REGS:526000 MEM:14000
  a120(r125,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a121(r124,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:14000 NO_REX_SSE_REGS:14000 SSE_REGS:14000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:7000
  a122(r123,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8000 NO_REX_SSE_REGS:8000 SSE_REGS:8000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a123(r122,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:18000 NO_REX_SSE_REGS:18000 SSE_REGS:18000 MMX_REGS:28000 INT_SSE_REGS:28000 ALL_REGS:426000 MEM:12000
  a124(r114,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8000 NO_REX_SSE_REGS:8000 SSE_REGS:8000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a125(r193,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:16000 NO_REX_SSE_REGS:16000 SSE_REGS:16000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a126(r192,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16000 NO_REX_SSE_REGS:16000 SSE_REGS:16000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:11000
  a127(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16000 NO_REX_SSE_REGS:16000 SSE_REGS:16000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a128(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:14000 NO_REX_SSE_REGS:14000 SSE_REGS:14000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:6000
  a129(r190,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:52000 NO_REX_SSE_REGS:52000 SSE_REGS:52000 MMX_REGS:90000 INT_SSE_REGS:90000 ALL_REGS:1472000 MEM:32000
  a130(r191,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8000 NO_REX_SSE_REGS:8000 SSE_REGS:8000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a131(r189,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16000 NO_REX_SSE_REGS:16000 SSE_REGS:16000 MMX_REGS:38000 INT_SSE_REGS:38000 ALL_REGS:530000 MEM:16000
  a132(r188,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:8000 NO_REX_SSE_REGS:8000 SSE_REGS:8000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:12000
  a133(r187,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8000 NO_REX_SSE_REGS:8000 SSE_REGS:8000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:12000
  a134(r82,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:16000 NO_REX_SSE_REGS:16000 SSE_REGS:16000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a135(r186,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:16000 NO_REX_SSE_REGS:16000 SSE_REGS:16000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a136(r185,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:8000 NO_REX_SSE_REGS:8000 SSE_REGS:8000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:12000
  a137(r184,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:16000 NO_REX_SSE_REGS:16000 SSE_REGS:16000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:12000
  a138(r183,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:16000 NO_REX_SSE_REGS:16000 SSE_REGS:16000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:12000
  a139(r182,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:16000 NO_REX_SSE_REGS:16000 SSE_REGS:16000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a140(r181,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:8000 NO_REX_SSE_REGS:8000 SSE_REGS:8000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:12000
  a141(r177,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8000 NO_REX_SSE_REGS:8000 SSE_REGS:8000 MMX_REGS:23000 INT_SSE_REGS:23000 ALL_REGS:316000 MEM:11000
  a142(r176,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8000 NO_REX_SSE_REGS:8000 SSE_REGS:8000 MMX_REGS:23000 INT_SSE_REGS:23000 ALL_REGS:316000 MEM:11000
  a143(r175,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8000 NO_REX_SSE_REGS:8000 SSE_REGS:8000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000

   Insn 379(l0): point = 0
   Insn 378(l0): point = 2
   Insn 375(l0): point = 5
   Insn 374(l0): point = 8
   Insn 373(l0): point = 10
   Insn 36(l0): point = 13
   Insn 35(l0): point = 15
   Insn 34(l0): point = 17
   Insn 395(l0): point = 20
   Insn 30(l0): point = 22
   Insn 29(l0): point = 24
   Insn 28(l0): point = 26
   Insn 27(l0): point = 28
   Insn 26(l0): point = 30
   Insn 25(l0): point = 33
   Insn 24(l0): point = 35
   Insn 369(l0): point = 37
   Insn 366(l0): point = 39
   Insn 327(l0): point = 42
   Insn 326(l0): point = 44
   Insn 304(l0): point = 47
   Insn 303(l0): point = 49
   Insn 268(l0): point = 52
   Insn 267(l0): point = 54
   Insn 232(l0): point = 57
   Insn 231(l0): point = 59
   Insn 208(l0): point = 62
   Insn 207(l0): point = 64
   Insn 206(l0): point = 66
   Insn 205(l0): point = 68
   Insn 204(l0): point = 70
   Insn 196(l0): point = 73
   Insn 195(l0): point = 75
   Insn 171(l0): point = 78
   Insn 170(l0): point = 80
   Insn 141(l0): point = 83
   Insn 140(l0): point = 85
   Insn 116(l0): point = 88
   Insn 115(l0): point = 90
   Insn 391(l0): point = 93
   Insn 68(l0): point = 95
   Insn 364(l0): point = 98
   Insn 363(l0): point = 100
   Insn 361(l0): point = 102
   Insn 360(l0): point = 104
   Insn 359(l0): point = 106
   Insn 358(l0): point = 108
   Insn 355(l0): point = 111
   Insn 354(l0): point = 113
   Insn 352(l0): point = 115
   Insn 351(l0): point = 117
   Insn 350(l0): point = 119
   Insn 349(l0): point = 121
   Insn 348(l0): point = 123
   Insn 347(l0): point = 125
   Insn 346(l0): point = 127
   Insn 343(l0): point = 130
   Insn 341(l0): point = 133
   Insn 340(l0): point = 135
   Insn 336(l0): point = 138
   Insn 335(l0): point = 140
   Insn 334(l0): point = 142
   Insn 333(l0): point = 144
   Insn 332(l0): point = 146
   Insn 331(l0): point = 148
   Insn 324(l0): point = 151
   Insn 323(l0): point = 153
   Insn 322(l0): point = 155
   Insn 321(l0): point = 157
   Insn 320(l0): point = 159
   Insn 317(l0): point = 161
   Insn 316(l0): point = 163
   Insn 315(l0): point = 165
   Insn 314(l0): point = 167
   Insn 313(l0): point = 169
   Insn 312(l0): point = 171
   Insn 311(l0): point = 173
   Insn 310(l0): point = 175
   Insn 309(l0): point = 177
   Insn 308(l0): point = 179
   Insn 301(l0): point = 182
   Insn 300(l0): point = 184
   Insn 299(l0): point = 186
   Insn 298(l0): point = 188
   Insn 297(l0): point = 190
   Insn 296(l0): point = 192
   Insn 295(l0): point = 194
   Insn 294(l0): point = 196
   Insn 293(l0): point = 198
   Insn 292(l0): point = 200
   Insn 291(l0): point = 202
   Insn 290(l0): point = 204
   Insn 289(l0): point = 206
   Insn 288(l0): point = 208
   Insn 287(l0): point = 210
   Insn 286(l0): point = 212
   Insn 285(l0): point = 214
   Insn 284(l0): point = 216
   Insn 283(l0): point = 218
   Insn 282(l0): point = 220
   Insn 281(l0): point = 222
   Insn 280(l0): point = 224
   Insn 279(l0): point = 226
   Insn 278(l0): point = 228
   Insn 277(l0): point = 230
   Insn 276(l0): point = 232
   Insn 275(l0): point = 234
   Insn 274(l0): point = 236
   Insn 273(l0): point = 238
   Insn 272(l0): point = 240
   Insn 265(l0): point = 243
   Insn 264(l0): point = 245
   Insn 263(l0): point = 247
   Insn 262(l0): point = 249
   Insn 261(l0): point = 251
   Insn 258(l0): point = 253
   Insn 257(l0): point = 255
   Insn 256(l0): point = 257
   Insn 255(l0): point = 259
   Insn 254(l0): point = 261
   Insn 253(l0): point = 263
   Insn 252(l0): point = 265
   Insn 251(l0): point = 267
   Insn 250(l0): point = 269
   Insn 249(l0): point = 271
   Insn 248(l0): point = 273
   Insn 247(l0): point = 275
   Insn 246(l0): point = 277
   Insn 245(l0): point = 279
   Insn 244(l0): point = 281
   Insn 243(l0): point = 283
   Insn 242(l0): point = 285
   Insn 241(l0): point = 287
   Insn 240(l0): point = 289
   Insn 239(l0): point = 291
   Insn 238(l0): point = 293
   Insn 237(l0): point = 295
   Insn 236(l0): point = 297
   Insn 229(l0): point = 300
   Insn 228(l0): point = 302
   Insn 227(l0): point = 304
   Insn 226(l0): point = 306
   Insn 225(l0): point = 308
   Insn 224(l0): point = 310
   Insn 223(l0): point = 312
   Insn 222(l0): point = 314
   Insn 221(l0): point = 316
   Insn 220(l0): point = 318
   Insn 219(l0): point = 320
   Insn 218(l0): point = 322
   Insn 217(l0): point = 324
   Insn 216(l0): point = 326
   Insn 215(l0): point = 328
   Insn 214(l0): point = 330
   Insn 213(l0): point = 332
   Insn 212(l0): point = 334
   Insn 202(l0): point = 337
   Insn 201(l0): point = 339
   Insn 200(l0): point = 341
   Insn 193(l0): point = 344
   Insn 192(l0): point = 346
   Insn 191(l0): point = 348
   Insn 190(l0): point = 350
   Insn 189(l0): point = 352
   Insn 188(l0): point = 354
   Insn 187(l0): point = 356
   Insn 186(l0): point = 358
   Insn 185(l0): point = 360
   Insn 184(l0): point = 362
   Insn 183(l0): point = 364
   Insn 182(l0): point = 366
   Insn 181(l0): point = 368
   Insn 180(l0): point = 370
   Insn 179(l0): point = 372
   Insn 178(l0): point = 374
   Insn 177(l0): point = 376
   Insn 176(l0): point = 378
   Insn 175(l0): point = 380
   Insn 168(l0): point = 383
   Insn 167(l0): point = 385
   Insn 166(l0): point = 387
   Insn 165(l0): point = 389
   Insn 164(l0): point = 391
   Insn 163(l0): point = 393
   Insn 162(l0): point = 395
   Insn 161(l0): point = 397
   Insn 160(l0): point = 399
   Insn 159(l0): point = 401
   Insn 158(l0): point = 403
   Insn 157(l0): point = 405
   Insn 156(l0): point = 407
   Insn 155(l0): point = 409
   Insn 154(l0): point = 411
   Insn 153(l0): point = 413
   Insn 152(l0): point = 415
   Insn 151(l0): point = 417
   Insn 150(l0): point = 419
   Insn 149(l0): point = 421
   Insn 148(l0): point = 423
   Insn 147(l0): point = 425
   Insn 146(l0): point = 427
   Insn 145(l0): point = 429
   Insn 138(l0): point = 432
   Insn 137(l0): point = 434
   Insn 136(l0): point = 436
   Insn 135(l0): point = 438
   Insn 134(l0): point = 440
   Insn 133(l0): point = 442
   Insn 132(l0): point = 444
   Insn 131(l0): point = 446
   Insn 130(l0): point = 448
   Insn 129(l0): point = 450
   Insn 128(l0): point = 452
   Insn 127(l0): point = 454
   Insn 126(l0): point = 456
   Insn 125(l0): point = 458
   Insn 124(l0): point = 460
   Insn 123(l0): point = 462
   Insn 122(l0): point = 464
   Insn 121(l0): point = 466
   Insn 120(l0): point = 468
   Insn 113(l0): point = 471
   Insn 112(l0): point = 473
   Insn 111(l0): point = 475
   Insn 110(l0): point = 477
   Insn 109(l0): point = 479
   Insn 108(l0): point = 481
   Insn 107(l0): point = 483
   Insn 106(l0): point = 485
   Insn 105(l0): point = 487
   Insn 104(l0): point = 489
   Insn 103(l0): point = 491
   Insn 102(l0): point = 493
   Insn 101(l0): point = 495
   Insn 100(l0): point = 497
   Insn 99(l0): point = 499
   Insn 98(l0): point = 501
   Insn 97(l0): point = 503
   Insn 96(l0): point = 505
   Insn 95(l0): point = 507
   Insn 94(l0): point = 509
   Insn 93(l0): point = 511
   Insn 92(l0): point = 513
   Insn 91(l0): point = 515
   Insn 90(l0): point = 517
   Insn 89(l0): point = 519
   Insn 88(l0): point = 521
   Insn 87(l0): point = 523
   Insn 86(l0): point = 525
   Insn 85(l0): point = 527
   Insn 84(l0): point = 529
   Insn 83(l0): point = 531
   Insn 82(l0): point = 533
   Insn 81(l0): point = 535
   Insn 393(l0): point = 538
   Insn 77(l0): point = 540
   Insn 76(l0): point = 542
   Insn 75(l0): point = 544
   Insn 74(l0): point = 546
   Insn 73(l0): point = 548
   Insn 72(l0): point = 550
   Insn 389(l0): point = 553
   Insn 64(l0): point = 555
   Insn 63(l0): point = 557
   Insn 62(l0): point = 559
   Insn 61(l0): point = 561
   Insn 60(l0): point = 563
   Insn 59(l0): point = 565
   Insn 55(l0): point = 568
   Insn 54(l0): point = 570
   Insn 53(l0): point = 572
   Insn 52(l0): point = 574
   Insn 51(l0): point = 576
   Insn 49(l0): point = 579
   Insn 48(l0): point = 581
   Insn 47(l0): point = 583
   Insn 46(l0): point = 585
   Insn 45(l0): point = 587
   Insn 44(l0): point = 589
   Insn 43(l0): point = 591
   Insn 40(l0): point = 593
   Insn 23(l0): point = 595
   Insn 22(l0): point = 597
   Insn 21(l0): point = 599
   Insn 20(l0): point = 601
   Insn 19(l0): point = 603
   Insn 18(l0): point = 605
   Insn 17(l0): point = 607
   Insn 16(l0): point = 609
   Insn 15(l0): point = 611
   Insn 14(l0): point = 613
   Insn 13(l0): point = 615
   Insn 12(l0): point = 617
   Insn 10(l0): point = 620
   Insn 9(l0): point = 623
   Insn 8(l0): point = 625
   Insn 7(l0): point = 627
   Insn 6(l0): point = 629
   Insn 5(l0): point = 632
   Insn 4(l0): point = 634
   Insn 3(l0): point = 636
   Insn 2(l0): point = 638
   Insn 38(l0): point = 640
 a0(r180): [8..37] [3..4]
 a1(r178): [579..603] [93..567] [27..41] [14..19]
 a2(r179): [23..24]
 a3(r173): [623..638] [579..620] [93..567] [25..41]
 a4(r174): [579..636] [93..567] [36..41]
 a5(r113): [38..39]
 a6(r112): [101..102]
 a7(r225): [107..108]
 a8(r172): [579..615] [93..567]
 a9(r111): [114..115]
 a10(r224): [120..125]
 a11(r223): [124..127]
 a12(r222): [139..140]
 a13(r109): [149..210]
 a14(r110): [149..177]
 a15(r164): [151..173] [45..46]
 a16(r171): [154..155]
 a17(r170): [156..157]
 a18(r169): [156..161]
 a19(r168): [160..165]
 a20(r167): [166..167]
 a21(r166): [168..169]
 a22(r165): [170..171]
 a23(r120): [174..175]
 a24(r221): [178..179]
 a25(r154): [182..208] [50..51]
 a26(r163): [185..186]
 a27(r162): [187..188]
 a28(r159): [187..196]
 a29(r158): [191..200]
 a30(r161): [191..192]
 a31(r160): [193..194]
 a32(r157): [201..202]
 a33(r156): [203..204]
 a34(r155): [205..206]
 a35(r220): [211..212]
 a36(r108): [211..214]
 a37(r107): [215..216]
 a38(r218): [221..226] [217..218]
 a39(r219): [219..220]
 a40(r217): [223..228]
 a41(r216): [231..232]
 a42(r106): [241..269]
 a43(r146): [243..265] [55..56]
 a44(r153): [246..247]
 a45(r152): [248..249]
 a46(r151): [248..253]
 a47(r150): [252..257]
 a48(r149): [258..259]
 a49(r148): [260..261]
 a50(r147): [262..263]
 a51(r119): [266..267]
 a52(r215): [270..271]
 a53(r105): [270..273]
 a54(r104): [274..275]
 a55(r213): [280..285] [276..277]
 a56(r214): [278..279]
 a57(r212): [282..287]
 a58(r103): [292..297]
 a59(r211): [294..295]
 a60(r102): [298..316]
 a61(r141): [300..312] [60..61]
 a62(r145): [303..304]
 a63(r144): [305..306]
 a64(r143): [307..308]
 a65(r142): [309..310]
 a66(r118): [313..314]
 a67(r210): [317..318]
 a68(r101): [317..320]
 a69(r100): [321..322]
 a70(r208): [327..332] [323..324]
 a71(r209): [325..326]
 a72(r207): [329..334]
 a73(r99): [340..341]
 a74(r98): [342..360]
 a75(r136): [344..356] [76..77]
 a76(r140): [347..348]
 a77(r139): [349..350]
 a78(r138): [351..352]
 a79(r137): [353..354]
 a80(r117): [357..358]
 a81(r206): [361..362]
 a82(r97): [361..364]
 a83(r96): [365..366]
 a84(r204): [371..376] [367..368]
 a85(r205): [369..370]
 a86(r203): [373..378]
 a87(r94): [381..407]
 a88(r95): [381..399]
 a89(r131): [383..395] [81..82]
 a90(r135): [386..387]
 a91(r134): [388..389]
 a92(r133): [390..391]
 a93(r132): [392..393]
 a94(r116): [396..397]
 a95(r202): [400..401]
 a96(r91): [406..427]
 a97(r201): [408..409]
 a98(r93): [408..411]
 a99(r92): [412..413]
 a100(r199): [418..423] [414..415]
 a101(r200): [416..417]
 a102(r198): [420..425]
 a103(r90): [428..429]
 a104(r89): [430..448]
 a105(r126): [432..444] [86..87]
 a106(r130): [435..436]
 a107(r129): [437..438]
 a108(r128): [439..440]
 a109(r127): [441..442]
 a110(r115): [445..446]
 a111(r197): [449..450]
 a112(r88): [449..452]
 a113(r87): [453..454]
 a114(r195): [459..464] [455..456]
 a115(r196): [457..458]
 a116(r194): [461..466]
 a117(r85): [469..495]
 a118(r86): [469..487]
 a119(r121): [471..483] [91..92]
 a120(r125): [474..475]
 a121(r124): [476..477]
 a122(r123): [478..479]
 a123(r122): [480..481]
 a124(r114): [484..485]
 a125(r193): [492..493]
 a126(r192): [496..497]
 a127(r84): [496..499]
 a128(r83): [500..501]
 a129(r190): [506..511] [502..503]
 a130(r191): [504..505]
 a131(r189): [508..513]
 a132(r188): [516..517]
 a133(r187): [526..527]
 a134(r82): [528..529]
 a135(r186): [534..535]
 a136(r185): [541..542]
 a137(r184): [547..550]
 a138(r183): [558..563]
 a139(r182): [562..565]
 a140(r181): [584..585]
 a141(r177): [606..607]
 a142(r176): [610..611]
 a143(r175): [616..617]
Compressing live ranges: from 643 to 238 - 37%
Ranges after the compression:
 a0(r180): [0..7]
 a1(r178): [26..229] [6..9] [2..3]
 a2(r179): [4..5]
 a3(r173): [26..237] [6..9]
 a4(r174): [26..237] [6..9]
 a5(r113): [8..9]
 a6(r112): [26..27]
 a7(r225): [28..29]
 a8(r172): [26..233]
 a9(r111): [30..31]
 a10(r224): [32..33]
 a11(r223): [32..33]
 a12(r222): [34..35]
 a13(r109): [36..65]
 a14(r110): [36..49]
 a15(r164): [36..47] [10..11]
 a16(r171): [36..37]
 a17(r170): [38..39]
 a18(r169): [38..41]
 a19(r168): [40..41]
 a20(r167): [42..43]
 a21(r166): [44..45]
 a22(r165): [46..47]
 a23(r120): [48..49]
 a24(r221): [50..51]
 a25(r154): [52..65] [12..13]
 a26(r163): [52..53]
 a27(r162): [54..55]
 a28(r159): [54..59]
 a29(r158): [56..59]
 a30(r161): [56..57]
 a31(r160): [58..59]
 a32(r157): [60..61]
 a33(r156): [62..63]
 a34(r155): [64..65]
 a35(r220): [66..67]
 a36(r108): [66..67]
 a37(r107): [68..69]
 a38(r218): [74..75] [70..71]
 a39(r219): [72..73]
 a40(r217): [74..75]
 a41(r216): [76..77]
 a42(r106): [78..91]
 a43(r146): [78..89] [14..15]
 a44(r153): [78..79]
 a45(r152): [80..81]
 a46(r151): [80..83]
 a47(r150): [82..83]
 a48(r149): [84..85]
 a49(r148): [86..87]
 a50(r147): [88..89]
 a51(r119): [90..91]
 a52(r215): [92..93]
 a53(r105): [92..93]
 a54(r104): [94..95]
 a55(r213): [100..101] [96..97]
 a56(r214): [98..99]
 a57(r212): [100..101]
 a58(r103): [102..103]
 a59(r211): [102..103]
 a60(r102): [104..113]
 a61(r141): [104..111] [16..17]
 a62(r145): [104..105]
 a63(r144): [106..107]
 a64(r143): [108..109]
 a65(r142): [110..111]
 a66(r118): [112..113]
 a67(r210): [114..115]
 a68(r101): [114..115]
 a69(r100): [116..117]
 a70(r208): [122..123] [118..119]
 a71(r209): [120..121]
 a72(r207): [122..123]
 a73(r99): [124..125]
 a74(r98): [126..135]
 a75(r136): [126..133] [18..19]
 a76(r140): [126..127]
 a77(r139): [128..129]
 a78(r138): [130..131]
 a79(r137): [132..133]
 a80(r117): [134..135]
 a81(r206): [136..137]
 a82(r97): [136..137]
 a83(r96): [138..139]
 a84(r204): [144..145] [140..141]
 a85(r205): [142..143]
 a86(r203): [144..145]
 a87(r94): [146..159]
 a88(r95): [146..155]
 a89(r131): [146..153] [20..21]
 a90(r135): [146..147]
 a91(r134): [148..149]
 a92(r133): [150..151]
 a93(r132): [152..153]
 a94(r116): [154..155]
 a95(r202): [156..157]
 a96(r91): [158..169]
 a97(r201): [160..161]
 a98(r93): [160..161]
 a99(r92): [162..163]
 a100(r199): [168..169] [164..165]
 a101(r200): [166..167]
 a102(r198): [168..169]
 a103(r90): [170..171]
 a104(r89): [172..181]
 a105(r126): [172..179] [22..23]
 a106(r130): [172..173]
 a107(r129): [174..175]
 a108(r128): [176..177]
 a109(r127): [178..179]
 a110(r115): [180..181]
 a111(r197): [182..183]
 a112(r88): [182..183]
 a113(r87): [184..185]
 a114(r195): [190..191] [186..187]
 a115(r196): [188..189]
 a116(r194): [190..191]
 a117(r85): [192..203]
 a118(r86): [192..201]
 a119(r121): [192..199] [24..25]
 a120(r125): [192..193]
 a121(r124): [194..195]
 a122(r123): [196..197]
 a123(r122): [198..199]
 a124(r114): [200..201]
 a125(r193): [202..203]
 a126(r192): [204..205]
 a127(r84): [204..205]
 a128(r83): [206..207]
 a129(r190): [212..213] [208..209]
 a130(r191): [210..211]
 a131(r189): [212..213]
 a132(r188): [214..215]
 a133(r187): [216..217]
 a134(r82): [218..219]
 a135(r186): [220..221]
 a136(r185): [222..223]
 a137(r184): [224..225]
 a138(r183): [226..227]
 a139(r182): [226..227]
 a140(r181): [228..229]
 a141(r177): [230..231]
 a142(r176): [232..233]
 a143(r175): [234..235]
  pref0:a7(r225)<-hr5@1500
  pref1:a10(r224)<-hr5@1500
  pref2:a11(r223)<-hr1@1500
  pref3:a12(r222)<-hr0@1500
  pref4:a41(r216)<-hr0@1500
  pref5:a59(r211)<-hr4@1500
  pref6:a95(r202)<-hr0@1500
  pref7:a125(r193)<-hr5@1500
  pref8:a132(r188)<-hr0@1500
  pref9:a135(r186)<-hr5@1500
  pref10:a136(r185)<-hr0@1500
  pref11:a137(r184)<-hr5@1500
  pref12:a138(r183)<-hr5@1500
  pref13:a139(r182)<-hr1@1500
  pref14:a140(r181)<-hr0@1500
  pref15:a0(r180)<-hr0@1500
  pref16:a3(r173)<-hr0@1500
  pref17:a15(r164)<-hr5@1500
  pref18:a25(r154)<-hr5@1500
  pref19:a43(r146)<-hr5@1500
  pref20:a61(r141)<-hr5@1500
  pref21:a75(r136)<-hr5@1500
  pref22:a89(r131)<-hr5@1500
  pref23:a105(r126)<-hr5@1500
  pref24:a119(r121)<-hr5@1500
  pref25:a6(r112)<-hr0@1500
  pref26:a9(r111)<-hr0@1500
  pref27:a58(r103)<-hr5@1500
  pref28:a96(r91)<-hr5@1500
  pref29:a118(r86)<-hr0@1500
  pref30:a134(r82)<-hr0@1500
  regions=1, blocks=39, points=238
    allocnos=144 (big 0), copies=0, conflicts=0, ranges=163
Disposition:
  134:r82  l0     0  128:r83  l0     0  127:r84  l0     1  117:r85  l0    42
  118:r86  l0     0  113:r87  l0     0  112:r88  l0     1  104:r89  l0     0
  103:r90  l0     0   96:r91  l0     2   99:r92  l0     0   98:r93  l0     1
   87:r94  l0    42   88:r95  l0     2   83:r96  l0     0   82:r97  l0     1
   74:r98  l0     0   73:r99  l0     0   69:r100 l0     0   68:r101 l0     1
   60:r102 l0     0   58:r103 l0     0   54:r104 l0     0   53:r105 l0     1
   42:r106 l0     1   37:r107 l0     0   36:r108 l0     1   13:r109 l0     1
   14:r110 l0     4    9:r111 l0     0    6:r112 l0     0    5:r113 l0     0
  124:r114 l0     1  110:r115 l0     1   94:r116 l0     0   80:r117 l0     1
   66:r118 l0     1   51:r119 l0     0   23:r120 l0     0  119:r121 l0     1
  123:r122 l0     2  122:r123 l0     2  121:r124 l0     2  120:r125 l0     2
  105:r126 l0     1  109:r127 l0     2  108:r128 l0     2  107:r129 l0     2
  106:r130 l0     2   89:r131 l0     0   93:r132 l0     1   92:r133 l0     1
   91:r134 l0     1   90:r135 l0     1   75:r136 l0     1   79:r137 l0     2
   78:r138 l0     2   77:r139 l0     2   76:r140 l0     2   61:r141 l0     1
   65:r142 l0     2   64:r143 l0     2   63:r144 l0     2   62:r145 l0     2
   43:r146 l0     2   50:r147 l0     0   49:r148 l0     0   48:r149 l0     0
   47:r150 l0     0   46:r151 l0     4   45:r152 l0     0   44:r153 l0     0
   25:r154 l0     0   34:r155 l0     2   33:r156 l0     2   32:r157 l0     2
   29:r158 l0     2   28:r159 l0     4   31:r160 l0     5   30:r161 l0     5
   27:r162 l0     2   26:r163 l0     2   15:r164 l0     2   22:r165 l0     0
   21:r166 l0     0   20:r167 l0     0   19:r168 l0     0   18:r169 l0     5
   17:r170 l0     0   16:r171 l0     0    8:r172 l0    41    3:r173 l0     3
    4:r174 l0    43  143:r175 l0     0  142:r176 l0     0  141:r177 l0     0
    1:r178 l0    40    2:r179 l0     0    0:r180 l0     1  140:r181 l0     0
  139:r182 l0     1  138:r183 l0     0  137:r184 l0     0  136:r185 l0     0
  135:r186 l0     0  133:r187 l0     0  132:r188 l0     0  131:r189 l0     1
  129:r190 l0     0  130:r191 l0     0  126:r192 l0     0  125:r193 l0     0
  116:r194 l0     1  114:r195 l0     0  115:r196 l0     0  111:r197 l0     0
  102:r198 l0     1  100:r199 l0     0  101:r200 l0     0   97:r201 l0     0
   95:r202 l0     0   86:r203 l0     1   84:r204 l0     0   85:r205 l0     0
   81:r206 l0     0   72:r207 l0     1   70:r208 l0     0   71:r209 l0     0
   67:r210 l0     0   59:r211 l0     1   57:r212 l0     1   55:r213 l0     0
   56:r214 l0     0   52:r215 l0     0   41:r216 l0     0   40:r217 l0     1
   38:r218 l0     0   39:r219 l0     0   35:r220 l0     0   24:r221 l0     0
   12:r222 l0     0   11:r223 l0     1   10:r224 l0     0    7:r225 l0     0
+++Costs: overall 9000, reg 9000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


createSensorV

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags]
;;  ref usage 	r0={30d,14u} r1={31d,2u} r2={29d} r4={37d,8u} r5={54d,26u} r6={1d,38u} r7={1d,66u} r8={28d} r9={28d} r10={28d} r11={28d} r12={28d} r13={28d} r14={28d} r15={28d} r16={1d,37u} r17={122d,23u} r18={28d} r19={1d,76u,7e} r20={29d} r21={29d} r22={29d} r23={29d} r24={29d} r25={29d} r26={29d} r27={29d} r28={28d} r29={28d} r30={28d} r31={28d} r32={28d} r33={28d} r34={28d} r35={28d} r36={29d} r37={29d} r38={28d} r39={28d} r44={28d} r45={28d} r46={28d} r47={28d} r48={28d} r49={28d} r50={28d} r51={28d} r52={28d} r53={28d} r54={28d} r55={28d} r56={28d} r57={28d} r58={28d} r59={28d} r60={28d} r61={28d} r62={28d} r63={28d} r64={28d} r65={28d} r66={28d} r67={28d} r68={28d} r69={28d} r70={28d} r71={28d} r72={28d} r73={28d} r74={28d} r75={28d} r82={1d,1u} r83={1d,1u} r84={1d,1u,1e} r85={1d,2u} r86={1d,1u} r87={1d,1u} r88={1d,1u,1e} r89={1d,2u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u,1e} r94={1d,2u} r95={1d,1u} r96={1d,1u} r97={1d,1u,1e} r98={1d,2u} r99={1d,1u} r100={1d,1u} r101={1d,1u,1e} r102={1d,2u} r103={1d,1u} r104={1d,1u} r105={1d,1u,1e} r106={1d,2u} r107={1d,1u} r108={1d,1u,1e} r109={1d,2u} r110={1d,1u} r111={1d,1u} r112={1d,1u} r113={1d,1u} r114={1d,1u} r115={1d,1u} r116={1d,1u} r117={1d,1u} r118={1d,1u} r119={1d,1u} r120={1d,1u} r121={1d,2u} r122={1d,1u} r123={1d,1u} r124={1d,1u} r125={1d,1u} r126={1d,2u} r127={1d,1u} r128={1d,1u} r129={1d,1u} r130={1d,1u} r131={1d,2u} r132={1d,1u} r133={1d,1u} r134={1d,1u} r135={1d,1u} r136={1d,2u} r137={1d,1u} r138={1d,1u} r139={1d,1u} r140={1d,1u} r141={1d,2u} r142={1d,1u} r143={1d,1u} r144={1d,1u} r145={1d,1u} r146={1d,2u} r147={1d,1u} r148={1d,1u} r149={1d,1u} r150={1d,2u} r151={1d,1u} r152={1d,1u} r153={1d,1u} r154={1d,3u} r155={1d,1u} r156={1d,1u} r157={1d,1u} r158={1d,2u} r159={1d,1u} r160={1d,1u} r161={1d,1u} r162={1d,1u} r163={1d,1u} r164={1d,2u} r165={1d,1u} r166={1d,1u} r167={1d,1u} r168={1d,2u} r169={1d,1u} r170={1d,1u} r171={1d,1u} r172={1d,3u} r173={2d,9u} r174={1d,1u} r175={1d,1u} r176={1d,1u} r177={1d,1u} r178={1d,9u} r179={1d,1u} r180={1d,1u} r181={1d,1u} r182={1d,1u} r183={1d,1u} r184={1d,1u} r185={1d,1u} r186={1d,1u} r187={1d,1u} r188={1d,1u} r189={1d,2u,1e} r190={4d,4u} r191={1d,1u} r192={1d,1u} r193={1d,1u} r194={1d,2u,1e} r195={4d,4u} r196={1d,1u} r197={1d,1u} r198={1d,2u,1e} r199={4d,4u} r200={1d,1u} r201={1d,1u} r202={1d,1u} r203={1d,2u,1e} r204={4d,4u} r205={1d,1u} r206={1d,1u} r207={1d,2u,1e} r208={4d,4u} r209={1d,1u} r210={1d,1u} r211={1d,1u} r212={1d,2u,1e} r213={4d,4u} r214={1d,1u} r215={1d,1u} r216={1d,1u} r217={1d,2u,1e} r218={4d,4u} r219={1d,1u} r220={1d,1u} r221={1d,1u} r222={1d,1u} r223={1d,1u} r224={1d,1u} r225={1d,1u} 
;;    total ref usage 2711{2191d,499u,21e} in 303{275 regular + 28 call} insns.
(note 1 0 41 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 17 [flags] 173 174
(note 41 1 38 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 38 41 2 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -328 [0xfffffffffffffeb8])) [10 fSensor+0 S8 A64])
        (reg:DI 5 di [ fSensor ])) "main.c":32:40 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ fSensor ])
        (nil)))
(insn 2 38 3 2 (parallel [
            (set (reg:DI 173)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -288 [0xfffffffffffffee0])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":32:40 191 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 3 2 4 2 (set (reg:DI 174)
        (reg:DI 173)) "main.c":32:40 66 {*movdi_internal}
     (nil))
(insn 4 3 5 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (symbol_ref:DI ("__asan_option_detect_stack_use_after_return") [flags 0x40]  <var_decl 0x7ffa22b503f0 __asan_option_detect_stack_use_after_return>) [11 __asan_option_detect_stack_use_after_return+0 S4 A32])
            (const_int 0 [0]))) "main.c":32:40 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 5 4 381 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 11)
            (pc))) "main.c":32:40 659 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 11)
;;  succ:       5
;;              3 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 173 174

;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 4, flags: (RTL)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 173 174
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
(note 381 5 6 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 6 381 7 3 (set (reg:DI 5 di)
        (const_int 256 [0x100])) "main.c":32:40 66 {*movdi_internal}
     (nil))
(call_insn 7 6 8 3 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__asan_stack_malloc_2") [flags 0x41]) [0  S1 A8])
            (const_int 0 [0]))) "main.c":32:40 677 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (use (reg:DI 5 di))
        (nil)))
(insn 8 7 9 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 0 ax)
            (const_int 0 [0]))) "main.c":32:40 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 9 8 382 3 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 11)
            (pc))) "main.c":32:40 659 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 11)
;;  succ:       5
;;              4 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 19 [frame] 173 174

;; basic block 4, loop depth 0, maybe hot
;;  prev block 3, next block 5, flags: (RTL)
;;  pred:       3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 19 [frame] 174
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 173
(note 382 9 10 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 10 382 11 4 (set (reg:DI 173)
        (reg:DI 0 ax)) "main.c":32:40 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
;;  succ:       5 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 173 174

;; basic block 5, loop depth 0, maybe hot
;;  prev block 4, next block 6, flags: (RTL)
;;  pred:       2
;;              3
;;              4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 173 174
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 173
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 172 175 176 177 178 181
(code_label 11 10 383 5 9 (nil) [2 uses])
(note 383 11 12 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 12 383 13 5 (parallel [
            (set (reg:DI 175)
                (plus:DI (reg:DI 173)
                    (const_int 288 [0x120])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":32:40 191 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 13 12 14 5 (set (reg:DI 172)
        (reg:DI 175)) "main.c":32:40 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 175)
        (nil)))
(insn 14 13 15 5 (set (mem:DI (reg:DI 173) [0  S8 A8])
        (const_int 1102416563 [0x41b58ab3])) "main.c":32:40 66 {*movdi_internal}
     (nil))
(insn 15 14 16 5 (set (reg/f:DI 176)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7ffa22b50480 *.LC2>)) "main.c":32:40 66 {*movdi_internal}
     (nil))
(insn 16 15 17 5 (set (mem:DI (plus:DI (reg:DI 173)
                (const_int 8 [0x8])) [0  S8 A8])
        (reg/f:DI 176)) "main.c":32:40 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 176)
        (nil)))
(insn 17 16 18 5 (set (reg/f:DI 177)
        (symbol_ref:DI ("*.LASANPC1") [flags 0x2]  <var_decl 0x7ffa22b50510 *.LASANPC1>)) "main.c":32:40 66 {*movdi_internal}
     (nil))
(insn 18 17 19 5 (set (mem:DI (plus:DI (reg:DI 173)
                (const_int 16 [0x10])) [0  S8 A8])
        (reg/f:DI 177)) "main.c":32:40 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 177)
        (nil)))
(insn 19 18 20 5 (parallel [
            (set (reg:DI 178)
                (lshiftrt:DI (reg:DI 173)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":32:40 566 {*lshrdi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 20 19 21 5 (set (mem:SI (plus:DI (reg:DI 178)
                (const_int 2147450880 [0x7fff8000])) [7  S4 A8])
        (const_int -235802127 [0xfffffffff1f1f1f1])) "main.c":32:40 67 {*movsi_internal}
     (nil))
(insn 21 20 22 5 (set (mem:SI (plus:DI (reg:DI 178)
                (const_int 2147450900 [0x7fff8014])) [7  S4 A8])
        (const_int -217710592 [0xfffffffff3060000])) "main.c":32:40 67 {*movsi_internal}
     (nil))
(insn 22 21 23 5 (set (mem:SI (plus:DI (reg:DI 178)
                (const_int 2147450904 [0x7fff8018])) [7  S4 A8])
        (const_int -202116109 [0xfffffffff3f3f3f3])) "main.c":32:40 67 {*movsi_internal}
     (nil))
(insn 23 22 39 5 (set (mem:SI (plus:DI (reg:DI 178)
                (const_int 2147450908 [0x7fff801c])) [7  S4 A8])
        (const_int -202116109 [0xfffffffff3f3f3f3])) "main.c":32:40 67 {*movsi_internal}
     (nil))
(note 39 23 40 5 NOTE_INSN_FUNCTION_BEG)
(insn 40 39 43 5 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 19 frame)
                        (const_int -8 [0xfffffffffffffff8])) [13 D.3491+0 S8 A64])
                (unspec:DI [
                        (mem/v/f:DI (const_int 40 [0x28]) [0 MEM[(<address-space-1> long unsigned int *)40B]+0 S8 A64 AS1])
                    ] UNSPEC_SP_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) "main.c":32:40 976 {stack_protect_set_di}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 43 40 44 5 (set (reg:DI 4 si)
        (const_int 80 [0x50])) "main.c":33:21 66 {*movdi_internal}
     (nil))
(insn 44 43 45 5 (set (reg:DI 5 di)
        (const_int 86 [0x56])) "main.c":33:21 66 {*movdi_internal}
     (nil))
(call_insn 45 44 46 5 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("calloc") [flags 0x41]  <function_decl 0x7ffa22d7bd00 calloc>) [0 __builtin_calloc S1 A8])
            (const_int 0 [0]))) "main.c":33:21 677 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 46 45 47 5 (set (reg/f:DI 181)
        (reg:DI 0 ax)) "main.c":33:21 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (expr_list:REG_NOALIAS (reg/f:DI 181)
            (nil))))
(insn 47 46 48 5 (set (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -304 [0xfffffffffffffed0])) [8 ans+0 S8 A64])
        (reg/f:DI 181)) "main.c":33:21 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 181)
        (nil)))
(insn 48 47 49 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                    (const_int -304 [0xfffffffffffffed0])) [8 ans+0 S8 A64])
            (const_int 0 [0]))) "main.c":34:8 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 49 48 50 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 57)
            (pc))) "main.c":34:8 659 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 57)
;;  succ:       6 (FALLTHRU)
;;              7
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 172 173 174 178

;; basic block 6, loop depth 0, maybe hot
;;  prev block 5, next block 7, flags: (RTL)
;;  pred:       5 (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
(note 50 49 51 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 51 50 52 6 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x7ffa22b505a0 *.LC3>)) "main.c":35:9 66 {*movdi_internal}
     (nil))
(call_insn 52 51 53 6 (call (mem:QI (symbol_ref:DI ("perror") [flags 0x41]  <function_decl 0x7ffa22e64500 perror>) [0 perror S1 A8])
        (const_int 0 [0])) "main.c":35:9 666 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(call_insn 53 52 54 6 (call (mem:QI (symbol_ref:DI ("__asan_handle_no_return") [flags 0x41]  <function_decl 0x7ffa22db2800 __builtin___asan_handle_no_return>) [0 __builtin___asan_handle_no_return S1 A8])
        (const_int 0 [0])) "main.c":36:9 666 {*call}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))
(insn 54 53 55 6 (set (reg:SI 5 di)
        (const_int 1 [0x1])) "main.c":36:9 67 {*movsi_internal}
     (nil))
(call_insn 55 54 56 6 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x7ffa22d81900 exit>) [0 __builtin_exit S1 A8])
        (const_int 0 [0])) "main.c":36:9 666 {*call}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 19 [frame]

(barrier 56 55 57)
;; basic block 7, loop depth 0, maybe hot
;;  prev block 6, next block 8, flags: (RTL)
;;  pred:       5
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 172 173 174 178
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 172
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 182 183
(code_label 57 56 58 7 13 (nil) [1 uses])
(note 58 57 59 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 59 58 60 7 (set (reg:DI 182)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -328 [0xfffffffffffffeb8])) [10 fSensor+0 S8 A64])) "main.c":39:5 66 {*movdi_internal}
     (nil))
(insn 60 59 61 7 (parallel [
            (set (reg:DI 183)
                (plus:DI (reg:DI 172)
                    (const_int -256 [0xffffffffffffff00])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":39:5 191 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 61 60 62 7 (set (reg:DI 1 dx)
        (reg:DI 182)) "main.c":39:5 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 182)
        (nil)))
(insn 62 61 63 7 (set (reg:SI 4 si)
        (const_int 150 [0x96])) "main.c":39:5 67 {*movsi_internal}
     (nil))
(insn 63 62 64 7 (set (reg:DI 5 di)
        (reg:DI 183)) "main.c":39:5 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 183)
        (nil)))
(call_insn 64 63 389 7 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fgets") [flags 0x41]  <function_decl 0x7ffa22e57300 fgets>) [0 fgets S1 A8])
            (const_int 0 [0]))) "main.c":39:5 677 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:DI 0 ax)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(jump_insn 389 64 390 7 (set (pc)
        (label_ref 356)) "main.c":40:11 660 {jump}
     (nil)
 -> 356)
;;  succ:       32 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 172 173 174 178

(barrier 390 389 362)
;; basic block 8, loop depth 0, maybe hot
;;  prev block 7, next block 9, flags: (RTL)
;;  pred:       32
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 172 173 174 178
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	
(code_label 362 390 67 8 28 (nil) [1 uses])
(note 67 362 68 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 68 67 391 8 (set (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -316 [0xfffffffffffffec4])) [11 i+0 S4 A32])
        (const_int 0 [0])) "main.c":41:18 67 {*movsi_internal}
     (nil))
(jump_insn 391 68 392 8 (set (pc)
        (label_ref 344)) "main.c":41:9 660 {jump}
     (nil)
 -> 344)
;;  succ:       31 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 172 173 174 178

(barrier 392 391 353)
;; basic block 9, loop depth 0, maybe hot
;;  prev block 8, next block 10, flags: (RTL)
;;  pred:       31
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 172 173 174 178
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 172
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 184 185
(code_label 353 392 71 9 27 (nil) [1 uses])
(note 71 353 72 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 72 71 73 9 (parallel [
            (set (reg:DI 184)
                (plus:DI (reg:DI 172)
                    (const_int -256 [0xffffffffffffff00])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":42:28 191 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 73 72 74 9 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC4") [flags 0x2]  <var_decl 0x7ffa22b50630 *.LC4>)) "main.c":42:28 66 {*movdi_internal}
     (nil))
(insn 74 73 75 9 (set (reg:DI 5 di)
        (reg:DI 184)) "main.c":42:28 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 184)
        (nil)))
(call_insn 75 74 76 9 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x7ffa22aecf00 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) "main.c":42:28 677 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 76 75 77 9 (set (reg:DI 185)
        (reg:DI 0 ax)) "main.c":42:28 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 77 76 393 9 (set (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -312 [0xfffffffffffffec8])) [3 value+0 S8 A64])
        (reg:DI 185)) "main.c":42:28 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 185)
        (nil)))
(jump_insn 393 77 394 9 (set (pc)
        (label_ref 337)) "main.c":43:19 660 {jump}
     (nil)
 -> 337)
;;  succ:       29 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 172 173 174 178

(barrier 394 393 339)
;; basic block 10, loop depth 0, maybe hot
;;  prev block 9, next block 11, flags: (RTL)
;;  pred:       29
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 172 173 174 178
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 82 83 84 85 86 114 121 122 123 124 125 186 187 188 189 190 191 192 193
(code_label 339 394 80 10 26 (nil) [1 uses])
(note 80 339 81 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 81 80 82 10 (set (reg:DI 186)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -312 [0xfffffffffffffec8])) [3 value+0 S8 A64])) "main.c":44:30 66 {*movdi_internal}
     (nil))
(insn 82 81 83 10 (set (reg:DI 5 di)
        (reg:DI 186)) "main.c":44:30 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 186)
        (nil)))
(call_insn/i 83 82 84 10 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("atoi") [flags 0x41]  <function_decl 0x7ffa22e69600 atoi>) [0 atoi S1 A8])
            (const_int 0 [0]))) "main.c":44:30 677 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 84 83 85 10 (set (reg:SI 82 [ _1 ])
        (reg:SI 0 ax)) "main.c":44:30 67 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 85 84 86 10 (set (reg:DI 187)
        (sign_extend:DI (reg:SI 82 [ _1 ]))) "main.c":44:24 128 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 82 [ _1 ])
        (nil)))
(insn 86 85 87 10 (set (mem/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -296 [0xfffffffffffffed8])) [2 pos+0 S8 A64])
        (reg:DI 187)) "main.c":44:24 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 187)
        (nil)))
(insn 87 86 88 10 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC4") [flags 0x2]  <var_decl 0x7ffa22b50630 *.LC4>)) "main.c":45:25 66 {*movdi_internal}
     (nil))
(insn 88 87 89 10 (set (reg:DI 5 di)
        (const_int 0 [0])) "main.c":45:25 66 {*movdi_internal}
     (nil))
(call_insn 89 88 90 10 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x7ffa22aecf00 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) "main.c":45:25 677 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 90 89 91 10 (set (reg:DI 188)
        (reg:DI 0 ax)) "main.c":45:25 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 91 90 92 10 (set (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -312 [0xfffffffffffffec8])) [3 value+0 S8 A64])
        (reg:DI 188)) "main.c":45:25 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 188)
        (nil)))
(insn 92 91 93 10 (set (reg:DI 189)
        (mem/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -296 [0xfffffffffffffed8])) [2 pos+0 S8 A64])) "main.c":46:20 66 {*movdi_internal}
     (nil))
(insn 93 92 94 10 (set (reg:DI 190)
        (reg:DI 189)) "main.c":46:20 66 {*movdi_internal}
     (nil))
(insn 94 93 95 10 (parallel [
            (set (reg:DI 190)
                (ashift:DI (reg:DI 190)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":46:20 520 {*ashldi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 95 94 96 10 (parallel [
            (set (reg:DI 190)
                (plus:DI (reg:DI 190)
                    (reg:DI 189)))
            (clobber (reg:CC 17 flags))
        ]) "main.c":46:20 191 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 189)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (mult:DI (reg:DI 189)
                    (const_int 5 [0x5]))
                (nil)))))
(insn 96 95 97 10 (parallel [
            (set (reg:DI 191)
                (ashift:DI (reg:DI 190)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":46:20 520 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 190)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 97 96 98 10 (set (reg:DI 190)
        (reg:DI 191)) "main.c":46:20 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 191)
        (nil)))
(insn 98 97 99 10 (set (reg:DI 83 [ _2 ])
        (reg:DI 190)) "main.c":46:20 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 190)
        (nil)))
(insn 99 98 100 10 (parallel [
            (set (reg:DI 84 [ _3 ])
                (plus:DI (reg:DI 83 [ _2 ])
                    (const_int -80 [0xffffffffffffffb0])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":46:20 191 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 83 [ _2 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 100 99 101 10 (set (reg/f:DI 192)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -304 [0xfffffffffffffed0])) [8 ans+0 S8 A64])) "main.c":46:20 66 {*movdi_internal}
     (nil))
(insn 101 100 102 10 (parallel [
            (set (reg/f:DI 85 [ _4 ])
                (plus:DI (reg:DI 84 [ _3 ])
                    (reg/f:DI 192)))
            (clobber (reg:CC 17 flags))
        ]) "main.c":46:20 191 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 192)
        (expr_list:REG_DEAD (reg:DI 84 [ _3 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                                (const_int -304 [0xfffffffffffffed0])) [8 ans+0 S8 A64])
                        (reg:DI 84 [ _3 ]))
                    (nil))))))
(insn 102 101 103 10 (set (reg:DI 193)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -312 [0xfffffffffffffec8])) [3 value+0 S8 A64])) "main.c":46:36 66 {*movdi_internal}
     (nil))
(insn 103 102 104 10 (set (reg:DI 5 di)
        (reg:DI 193)) "main.c":46:36 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 193)
        (nil)))
(call_insn/i 104 103 105 10 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strlen") [flags 0x41]  <function_decl 0x7ffa22d64d00 strlen>) [0 __builtin_strlen S1 A8])
            (const_int 0 [0]))) "main.c":46:36 677 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 105 104 106 10 (set (reg:DI 86 [ _5 ])
        (reg:DI 0 ax)) "main.c":46:36 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 106 105 107 10 (parallel [
            (set (reg/f:DI 114 [ _68 ])
                (plus:DI (reg/f:DI 85 [ _4 ])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":46:34 191 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 107 106 108 10 (set (reg:DI 121 [ _85 ])
        (reg/f:DI 114 [ _68 ])) "main.c":46:34 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 114 [ _68 ])
        (nil)))
(insn 108 107 109 10 (parallel [
            (set (reg:DI 122 [ _86 ])
                (lshiftrt:DI (reg:DI 121 [ _85 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":46:34 566 {*lshrdi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 109 108 110 10 (parallel [
            (set (reg:DI 123 [ _87 ])
                (plus:DI (reg:DI 122 [ _86 ])
                    (const_int 2147450880 [0x7fff8000])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":46:34 191 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 122 [ _86 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 110 109 111 10 (set (reg/f:DI 124 [ _88 ])
        (reg:DI 123 [ _87 ])) "main.c":46:34 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 123 [ _87 ])
        (nil)))
(insn 111 110 112 10 (set (reg:QI 125 [ _89 ])
        (mem:QI (reg/f:DI 124 [ _88 ]) [7 *_88+0 S1 A8])) "main.c":46:34 69 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:DI 124 [ _88 ])
        (nil)))
(insn 112 111 113 10 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 125 [ _89 ])
            (const_int 0 [0]))) "main.c":46:34 5 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 125 [ _89 ])
        (nil)))
(jump_insn 113 112 114 10 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 118)
            (pc))) "main.c":46:34 659 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 118)
;;  succ:       12 [100.0% (guessed)] 
;;              11 [0.0% (guessed)]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 85 86 121 172 173 174 178

;; basic block 11, loop depth 0, maybe hot
;;  prev block 10, next block 12, flags: (RTL)
;;  pred:       10 [0.0% (guessed)]  (FALLTHRU)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 121
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 121
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
(note 114 113 115 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 115 114 116 11 (set (reg:DI 5 di)
        (reg:DI 121 [ _85 ])) "main.c":46:34 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 121 [ _85 ])
        (nil)))
(call_insn 116 115 117 11 (call (mem:QI (symbol_ref:DI ("__asan_report_store8") [flags 0x41]  <function_decl 0x7ffa22daaf00 __builtin___asan_report_store8>) [0 __builtin___asan_report_store8 S1 A8])
        (const_int 0 [0])) "main.c":46:34 666 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 19 [frame]

(barrier 117 116 118)
;; basic block 12, loop depth 0, maybe hot
;;  prev block 11, next block 13, flags: (RTL)
;;  pred:       10 [100.0% (guessed)] 
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 85 86 172 173 174 178
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 85 86
;; lr  def 	 17 [flags] 87 88 89 115 126 127 128 129 130 194 195 196 197
(code_label 118 117 119 12 17 (nil) [1 uses])
(note 119 118 120 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 120 119 121 12 (set (mem:DI (plus:DI (reg/f:DI 85 [ _4 ])
                (const_int 16 [0x10])) [2 _4->len+0 S8 A64])
        (reg:DI 86 [ _5 ])) "main.c":46:34 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 86 [ _5 ])
        (expr_list:REG_DEAD (reg/f:DI 85 [ _4 ])
            (nil))))
(insn 121 120 122 12 (set (reg:DI 194)
        (mem/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -296 [0xfffffffffffffed8])) [2 pos+0 S8 A64])) "main.c":47:47 66 {*movdi_internal}
     (nil))
(insn 122 121 123 12 (set (reg:DI 195)
        (reg:DI 194)) "main.c":47:47 66 {*movdi_internal}
     (nil))
(insn 123 122 124 12 (parallel [
            (set (reg:DI 195)
                (ashift:DI (reg:DI 195)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":47:47 520 {*ashldi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 124 123 125 12 (parallel [
            (set (reg:DI 195)
                (plus:DI (reg:DI 195)
                    (reg:DI 194)))
            (clobber (reg:CC 17 flags))
        ]) "main.c":47:47 191 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 194)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (mult:DI (reg:DI 194)
                    (const_int 5 [0x5]))
                (nil)))))
(insn 125 124 126 12 (parallel [
            (set (reg:DI 196)
                (ashift:DI (reg:DI 195)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":47:47 520 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 195)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 126 125 127 12 (set (reg:DI 195)
        (reg:DI 196)) "main.c":47:47 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 196)
        (nil)))
(insn 127 126 128 12 (set (reg:DI 87 [ _6 ])
        (reg:DI 195)) "main.c":47:47 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 195)
        (nil)))
(insn 128 127 129 12 (parallel [
            (set (reg:DI 88 [ _7 ])
                (plus:DI (reg:DI 87 [ _6 ])
                    (const_int -80 [0xffffffffffffffb0])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":47:47 191 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 87 [ _6 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 129 128 130 12 (set (reg/f:DI 197)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -304 [0xfffffffffffffed0])) [8 ans+0 S8 A64])) "main.c":47:47 66 {*movdi_internal}
     (nil))
(insn 130 129 131 12 (parallel [
            (set (reg/f:DI 89 [ _8 ])
                (plus:DI (reg:DI 88 [ _7 ])
                    (reg/f:DI 197)))
            (clobber (reg:CC 17 flags))
        ]) "main.c":47:47 191 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 197)
        (expr_list:REG_DEAD (reg:DI 88 [ _7 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                                (const_int -304 [0xfffffffffffffed0])) [8 ans+0 S8 A64])
                        (reg:DI 88 [ _7 ]))
                    (nil))))))
(insn 131 130 132 12 (parallel [
            (set (reg/f:DI 115 [ _69 ])
                (plus:DI (reg/f:DI 89 [ _8 ])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":47:56 191 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 132 131 133 12 (set (reg:DI 126 [ _90 ])
        (reg/f:DI 115 [ _69 ])) "main.c":47:56 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 115 [ _69 ])
        (nil)))
(insn 133 132 134 12 (parallel [
            (set (reg:DI 127 [ _91 ])
                (lshiftrt:DI (reg:DI 126 [ _90 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":47:56 566 {*lshrdi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 134 133 135 12 (parallel [
            (set (reg:DI 128 [ _92 ])
                (plus:DI (reg:DI 127 [ _91 ])
                    (const_int 2147450880 [0x7fff8000])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":47:56 191 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 127 [ _91 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 135 134 136 12 (set (reg/f:DI 129 [ _93 ])
        (reg:DI 128 [ _92 ])) "main.c":47:56 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 128 [ _92 ])
        (nil)))
(insn 136 135 137 12 (set (reg:QI 130 [ _94 ])
        (mem:QI (reg/f:DI 129 [ _93 ]) [7 *_93+0 S1 A8])) "main.c":47:56 69 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:DI 129 [ _93 ])
        (nil)))
(insn 137 136 138 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 130 [ _94 ])
            (const_int 0 [0]))) "main.c":47:56 5 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 130 [ _94 ])
        (nil)))
(jump_insn 138 137 139 12 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 143)
            (pc))) "main.c":47:56 659 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 143)
;;  succ:       14 [100.0% (guessed)] 
;;              13 [0.0% (guessed)]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 89 126 172 173 174 178

;; basic block 13, loop depth 0, maybe hot
;;  prev block 12, next block 14, flags: (RTL)
;;  pred:       12 [0.0% (guessed)]  (FALLTHRU)
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 126
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 126
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
(note 139 138 140 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 140 139 141 13 (set (reg:DI 5 di)
        (reg:DI 126 [ _90 ])) "main.c":47:56 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 126 [ _90 ])
        (nil)))
(call_insn 141 140 142 13 (call (mem:QI (symbol_ref:DI ("__asan_report_load8") [flags 0x41]  <function_decl 0x7ffa22daa900 __builtin___asan_report_load8>) [0 __builtin___asan_report_load8 S1 A8])
        (const_int 0 [0])) "main.c":47:56 666 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 19 [frame]

(barrier 142 141 143)
;; basic block 14, loop depth 0, maybe hot
;;  prev block 13, next block 15, flags: (RTL)
;;  pred:       12 [100.0% (guessed)] 
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 89 172 173 174 178
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 89
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 90 91 92 93 94 95 116 131 132 133 134 135 198 199 200 201 202
(code_label 143 142 144 14 18 (nil) [1 uses])
(note 144 143 145 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 145 144 146 14 (set (reg:DI 90 [ _9 ])
        (mem:DI (plus:DI (reg/f:DI 89 [ _8 ])
                (const_int 16 [0x10])) [2 _8->len+0 S8 A64])) "main.c":47:56 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 89 [ _8 ])
        (nil)))
(insn 146 145 147 14 (parallel [
            (set (reg:DI 91 [ _10 ])
                (plus:DI (reg:DI 90 [ _9 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":47:37 191 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 90 [ _9 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 147 146 148 14 (set (reg:DI 198)
        (mem/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -296 [0xfffffffffffffed8])) [2 pos+0 S8 A64])) "main.c":47:20 66 {*movdi_internal}
     (nil))
(insn 148 147 149 14 (set (reg:DI 199)
        (reg:DI 198)) "main.c":47:20 66 {*movdi_internal}
     (nil))
(insn 149 148 150 14 (parallel [
            (set (reg:DI 199)
                (ashift:DI (reg:DI 199)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":47:20 520 {*ashldi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 150 149 151 14 (parallel [
            (set (reg:DI 199)
                (plus:DI (reg:DI 199)
                    (reg:DI 198)))
            (clobber (reg:CC 17 flags))
        ]) "main.c":47:20 191 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 198)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (mult:DI (reg:DI 198)
                    (const_int 5 [0x5]))
                (nil)))))
(insn 151 150 152 14 (parallel [
            (set (reg:DI 200)
                (ashift:DI (reg:DI 199)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":47:20 520 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 199)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 152 151 153 14 (set (reg:DI 199)
        (reg:DI 200)) "main.c":47:20 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 200)
        (nil)))
(insn 153 152 154 14 (set (reg:DI 92 [ _11 ])
        (reg:DI 199)) "main.c":47:20 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 199)
        (nil)))
(insn 154 153 155 14 (parallel [
            (set (reg:DI 93 [ _12 ])
                (plus:DI (reg:DI 92 [ _11 ])
                    (const_int -80 [0xffffffffffffffb0])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":47:20 191 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 92 [ _11 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 155 154 156 14 (set (reg/f:DI 201)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -304 [0xfffffffffffffed0])) [8 ans+0 S8 A64])) "main.c":47:20 66 {*movdi_internal}
     (nil))
(insn 156 155 157 14 (parallel [
            (set (reg/f:DI 94 [ _13 ])
                (plus:DI (reg:DI 93 [ _12 ])
                    (reg/f:DI 201)))
            (clobber (reg:CC 17 flags))
        ]) "main.c":47:20 191 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 201)
        (expr_list:REG_DEAD (reg:DI 93 [ _12 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                                (const_int -304 [0xfffffffffffffed0])) [8 ans+0 S8 A64])
                        (reg:DI 93 [ _12 ]))
                    (nil))))))
(insn 157 156 158 14 (set (reg:DI 5 di)
        (reg:DI 91 [ _10 ])) "main.c":47:37 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 91 [ _10 ])
        (nil)))
(call_insn 158 157 159 14 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x7ffa22d87000 malloc>) [0 __builtin_malloc S1 A8])
            (const_int 0 [0]))) "main.c":47:37 677 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 159 158 160 14 (set (reg/f:DI 202)
        (reg:DI 0 ax)) "main.c":47:37 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (expr_list:REG_NOALIAS (reg/f:DI 202)
            (nil))))
(insn 160 159 161 14 (set (reg/f:DI 95 [ _14 ])
        (reg/f:DI 202)) "main.c":47:37 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 202)
        (nil)))
(insn 161 160 162 14 (parallel [
            (set (reg/f:DI 116 [ _70 ])
                (plus:DI (reg/f:DI 94 [ _13 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":47:35 191 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 162 161 163 14 (set (reg:DI 131 [ _95 ])
        (reg/f:DI 116 [ _70 ])) "main.c":47:35 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 116 [ _70 ])
        (nil)))
(insn 163 162 164 14 (parallel [
            (set (reg:DI 132 [ _96 ])
                (lshiftrt:DI (reg:DI 131 [ _95 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":47:35 566 {*lshrdi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 164 163 165 14 (parallel [
            (set (reg:DI 133 [ _97 ])
                (plus:DI (reg:DI 132 [ _96 ])
                    (const_int 2147450880 [0x7fff8000])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":47:35 191 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 132 [ _96 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 165 164 166 14 (set (reg/f:DI 134 [ _98 ])
        (reg:DI 133 [ _97 ])) "main.c":47:35 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 133 [ _97 ])
        (nil)))
(insn 166 165 167 14 (set (reg:QI 135 [ _99 ])
        (mem:QI (reg/f:DI 134 [ _98 ]) [7 *_98+0 S1 A8])) "main.c":47:35 69 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:DI 134 [ _98 ])
        (nil)))
(insn 167 166 168 14 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 135 [ _99 ])
            (const_int 0 [0]))) "main.c":47:35 5 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 135 [ _99 ])
        (nil)))
(jump_insn 168 167 169 14 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 173)
            (pc))) "main.c":47:35 659 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 173)
;;  succ:       16 [100.0% (guessed)] 
;;              15 [0.0% (guessed)]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 94 95 131 172 173 174 178

;; basic block 15, loop depth 0, maybe hot
;;  prev block 14, next block 16, flags: (RTL)
;;  pred:       14 [0.0% (guessed)]  (FALLTHRU)
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 131
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 131
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
(note 169 168 170 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 170 169 171 15 (set (reg:DI 5 di)
        (reg:DI 131 [ _95 ])) "main.c":47:35 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 131 [ _95 ])
        (nil)))
(call_insn 171 170 172 15 (call (mem:QI (symbol_ref:DI ("__asan_report_store8") [flags 0x41]  <function_decl 0x7ffa22daaf00 __builtin___asan_report_store8>) [0 __builtin___asan_report_store8 S1 A8])
        (const_int 0 [0])) "main.c":47:35 666 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 19 [frame]

(barrier 172 171 173)
;; basic block 16, loop depth 0, maybe hot
;;  prev block 15, next block 17, flags: (RTL)
;;  pred:       14 [100.0% (guessed)] 
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 94 95 172 173 174 178
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 94 95
;; lr  def 	 17 [flags] 96 97 98 117 136 137 138 139 140 203 204 205 206
(code_label 173 172 174 16 19 (nil) [1 uses])
(note 174 173 175 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 175 174 176 16 (set (mem/f:DI (plus:DI (reg/f:DI 94 [ _13 ])
                (const_int 8 [0x8])) [3 _13->name+0 S8 A64])
        (reg/f:DI 95 [ _14 ])) "main.c":47:35 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 95 [ _14 ])
        (expr_list:REG_DEAD (reg/f:DI 94 [ _13 ])
            (nil))))
(insn 176 175 177 16 (set (reg:DI 203)
        (mem/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -296 [0xfffffffffffffed8])) [2 pos+0 S8 A64])) "main.c":48:24 66 {*movdi_internal}
     (nil))
(insn 177 176 178 16 (set (reg:DI 204)
        (reg:DI 203)) "main.c":48:24 66 {*movdi_internal}
     (nil))
(insn 178 177 179 16 (parallel [
            (set (reg:DI 204)
                (ashift:DI (reg:DI 204)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":48:24 520 {*ashldi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 179 178 180 16 (parallel [
            (set (reg:DI 204)
                (plus:DI (reg:DI 204)
                    (reg:DI 203)))
            (clobber (reg:CC 17 flags))
        ]) "main.c":48:24 191 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 203)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (mult:DI (reg:DI 203)
                    (const_int 5 [0x5]))
                (nil)))))
(insn 180 179 181 16 (parallel [
            (set (reg:DI 205)
                (ashift:DI (reg:DI 204)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":48:24 520 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 204)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 181 180 182 16 (set (reg:DI 204)
        (reg:DI 205)) "main.c":48:24 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 205)
        (nil)))
(insn 182 181 183 16 (set (reg:DI 96 [ _15 ])
        (reg:DI 204)) "main.c":48:24 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 204)
        (nil)))
(insn 183 182 184 16 (parallel [
            (set (reg:DI 97 [ _16 ])
                (plus:DI (reg:DI 96 [ _15 ])
                    (const_int -80 [0xffffffffffffffb0])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":48:24 191 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 96 [ _15 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 184 183 185 16 (set (reg/f:DI 206)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -304 [0xfffffffffffffed0])) [8 ans+0 S8 A64])) "main.c":48:24 66 {*movdi_internal}
     (nil))
(insn 185 184 186 16 (parallel [
            (set (reg/f:DI 98 [ _17 ])
                (plus:DI (reg:DI 97 [ _16 ])
                    (reg/f:DI 206)))
            (clobber (reg:CC 17 flags))
        ]) "main.c":48:24 191 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 206)
        (expr_list:REG_DEAD (reg:DI 97 [ _16 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                                (const_int -304 [0xfffffffffffffed0])) [8 ans+0 S8 A64])
                        (reg:DI 97 [ _16 ]))
                    (nil))))))
(insn 186 185 187 16 (parallel [
            (set (reg/f:DI 117 [ _71 ])
                (plus:DI (reg/f:DI 98 [ _17 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":48:33 191 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 187 186 188 16 (set (reg:DI 136 [ _100 ])
        (reg/f:DI 117 [ _71 ])) "main.c":48:33 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 117 [ _71 ])
        (nil)))
(insn 188 187 189 16 (parallel [
            (set (reg:DI 137 [ _101 ])
                (lshiftrt:DI (reg:DI 136 [ _100 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":48:33 566 {*lshrdi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 189 188 190 16 (parallel [
            (set (reg:DI 138 [ _102 ])
                (plus:DI (reg:DI 137 [ _101 ])
                    (const_int 2147450880 [0x7fff8000])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":48:33 191 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 137 [ _101 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 190 189 191 16 (set (reg/f:DI 139 [ _103 ])
        (reg:DI 138 [ _102 ])) "main.c":48:33 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 138 [ _102 ])
        (nil)))
(insn 191 190 192 16 (set (reg:QI 140 [ _104 ])
        (mem:QI (reg/f:DI 139 [ _103 ]) [7 *_103+0 S1 A8])) "main.c":48:33 69 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:DI 139 [ _103 ])
        (nil)))
(insn 192 191 193 16 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 140 [ _104 ])
            (const_int 0 [0]))) "main.c":48:33 5 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 140 [ _104 ])
        (nil)))
(jump_insn 193 192 194 16 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 198)
            (pc))) "main.c":48:33 659 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 198)
;;  succ:       18 [100.0% (guessed)] 
;;              17 [0.0% (guessed)]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 98 136 172 173 174 178

;; basic block 17, loop depth 0, maybe hot
;;  prev block 16, next block 18, flags: (RTL)
;;  pred:       16 [0.0% (guessed)]  (FALLTHRU)
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 136
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 136
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
(note 194 193 195 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 195 194 196 17 (set (reg:DI 5 di)
        (reg:DI 136 [ _100 ])) "main.c":48:33 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 136 [ _100 ])
        (nil)))
(call_insn 196 195 197 17 (call (mem:QI (symbol_ref:DI ("__asan_report_load8") [flags 0x41]  <function_decl 0x7ffa22daa900 __builtin___asan_report_load8>) [0 __builtin___asan_report_load8 S1 A8])
        (const_int 0 [0])) "main.c":48:33 666 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 19 [frame]

(barrier 197 196 198)
;; basic block 18, loop depth 0, maybe hot
;;  prev block 17, next block 19, flags: (RTL)
;;  pred:       16 [100.0% (guessed)] 
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 98 172 173 174 178
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 98
;; lr  def 	 17 [flags] 99
(code_label 198 197 199 18 20 (nil) [1 uses])
(note 199 198 200 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 200 199 201 18 (set (reg/f:DI 99 [ _18 ])
        (mem/f:DI (plus:DI (reg/f:DI 98 [ _17 ])
                (const_int 8 [0x8])) [3 _17->name+0 S8 A64])) "main.c":48:33 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 98 [ _17 ])
        (nil)))
(insn 201 200 202 18 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 99 [ _18 ])
            (const_int 0 [0]))) "main.c":48:20 8 {*cmpdi_ccno_1}
     (expr_list:REG_DEAD (reg/f:DI 99 [ _18 ])
        (nil)))
(jump_insn 202 201 203 18 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 210)
            (pc))) "main.c":48:20 659 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 210)
;;  succ:       19 (FALLTHRU)
;;              20
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 172 173 174 178

;; basic block 19, loop depth 0, maybe hot
;;  prev block 18, next block 20, flags: (RTL)
;;  pred:       18 (FALLTHRU)
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
(note 203 202 204 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 204 203 205 19 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x7ffa22b505a0 *.LC3>)) "main.c":49:21 66 {*movdi_internal}
     (nil))
(call_insn 205 204 206 19 (call (mem:QI (symbol_ref:DI ("perror") [flags 0x41]  <function_decl 0x7ffa22e64500 perror>) [0 perror S1 A8])
        (const_int 0 [0])) "main.c":49:21 666 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(call_insn 206 205 207 19 (call (mem:QI (symbol_ref:DI ("__asan_handle_no_return") [flags 0x41]  <function_decl 0x7ffa22db2800 __builtin___asan_handle_no_return>) [0 __builtin___asan_handle_no_return S1 A8])
        (const_int 0 [0])) "main.c":50:21 666 {*call}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))
(insn 207 206 208 19 (set (reg:SI 5 di)
        (const_int 1 [0x1])) "main.c":50:21 67 {*movsi_internal}
     (nil))
(call_insn 208 207 209 19 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x7ffa22d81900 exit>) [0 __builtin_exit S1 A8])
        (const_int 0 [0])) "main.c":50:21 666 {*call}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 19 [frame]

(barrier 209 208 210)
;; basic block 20, loop depth 0, maybe hot
;;  prev block 19, next block 21, flags: (RTL)
;;  pred:       18
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 172 173 174 178
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 17 [flags] 100 101 102 118 141 142 143 144 145 207 208 209 210
(code_label 210 209 211 20 21 (nil) [1 uses])
(note 211 210 212 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 212 211 213 20 (set (reg:DI 207)
        (mem/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -296 [0xfffffffffffffed8])) [2 pos+0 S8 A64])) "main.c":52:27 66 {*movdi_internal}
     (nil))
(insn 213 212 214 20 (set (reg:DI 208)
        (reg:DI 207)) "main.c":52:27 66 {*movdi_internal}
     (nil))
(insn 214 213 215 20 (parallel [
            (set (reg:DI 208)
                (ashift:DI (reg:DI 208)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":52:27 520 {*ashldi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 215 214 216 20 (parallel [
            (set (reg:DI 208)
                (plus:DI (reg:DI 208)
                    (reg:DI 207)))
            (clobber (reg:CC 17 flags))
        ]) "main.c":52:27 191 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 207)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (mult:DI (reg:DI 207)
                    (const_int 5 [0x5]))
                (nil)))))
(insn 216 215 217 20 (parallel [
            (set (reg:DI 209)
                (ashift:DI (reg:DI 208)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":52:27 520 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 208)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 217 216 218 20 (set (reg:DI 208)
        (reg:DI 209)) "main.c":52:27 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 209)
        (nil)))
(insn 218 217 219 20 (set (reg:DI 100 [ _19 ])
        (reg:DI 208)) "main.c":52:27 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 208)
        (nil)))
(insn 219 218 220 20 (parallel [
            (set (reg:DI 101 [ _20 ])
                (plus:DI (reg:DI 100 [ _19 ])
                    (const_int -80 [0xffffffffffffffb0])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":52:27 191 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 100 [ _19 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 220 219 221 20 (set (reg/f:DI 210)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -304 [0xfffffffffffffed0])) [8 ans+0 S8 A64])) "main.c":52:27 66 {*movdi_internal}
     (nil))
(insn 221 220 222 20 (parallel [
            (set (reg/f:DI 102 [ _21 ])
                (plus:DI (reg:DI 101 [ _20 ])
                    (reg/f:DI 210)))
            (clobber (reg:CC 17 flags))
        ]) "main.c":52:27 191 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 210)
        (expr_list:REG_DEAD (reg:DI 101 [ _20 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                                (const_int -304 [0xfffffffffffffed0])) [8 ans+0 S8 A64])
                        (reg:DI 101 [ _20 ]))
                    (nil))))))
(insn 222 221 223 20 (parallel [
            (set (reg/f:DI 118 [ _72 ])
                (plus:DI (reg/f:DI 102 [ _21 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":52:17 191 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 223 222 224 20 (set (reg:DI 141 [ _105 ])
        (reg/f:DI 118 [ _72 ])) "main.c":52:17 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 118 [ _72 ])
        (nil)))
(insn 224 223 225 20 (parallel [
            (set (reg:DI 142 [ _106 ])
                (lshiftrt:DI (reg:DI 141 [ _105 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":52:17 566 {*lshrdi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 225 224 226 20 (parallel [
            (set (reg:DI 143 [ _107 ])
                (plus:DI (reg:DI 142 [ _106 ])
                    (const_int 2147450880 [0x7fff8000])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":52:17 191 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 142 [ _106 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 226 225 227 20 (set (reg/f:DI 144 [ _108 ])
        (reg:DI 143 [ _107 ])) "main.c":52:17 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 143 [ _107 ])
        (nil)))
(insn 227 226 228 20 (set (reg:QI 145 [ _109 ])
        (mem:QI (reg/f:DI 144 [ _108 ]) [7 *_108+0 S1 A8])) "main.c":52:17 69 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:DI 144 [ _108 ])
        (nil)))
(insn 228 227 229 20 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 145 [ _109 ])
            (const_int 0 [0]))) "main.c":52:17 5 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 145 [ _109 ])
        (nil)))
(jump_insn 229 228 230 20 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 234)
            (pc))) "main.c":52:17 659 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 234)
;;  succ:       22 [100.0% (guessed)] 
;;              21 [0.0% (guessed)]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 102 141 172 173 174 178

;; basic block 21, loop depth 0, maybe hot
;;  prev block 20, next block 22, flags: (RTL)
;;  pred:       20 [0.0% (guessed)]  (FALLTHRU)
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 141
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 141
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
(note 230 229 231 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 231 230 232 21 (set (reg:DI 5 di)
        (reg:DI 141 [ _105 ])) "main.c":52:17 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 141 [ _105 ])
        (nil)))
(call_insn 232 231 233 21 (call (mem:QI (symbol_ref:DI ("__asan_report_load8") [flags 0x41]  <function_decl 0x7ffa22daa900 __builtin___asan_report_load8>) [0 __builtin___asan_report_load8 S1 A8])
        (const_int 0 [0])) "main.c":52:17 666 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 19 [frame]

(barrier 233 232 234)
;; basic block 22, loop depth 0, maybe hot
;;  prev block 21, next block 23, flags: (RTL)
;;  pred:       20 [100.0% (guessed)] 
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 102 172 173 174 178
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 102
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 103 104 105 106 119 146 147 148 149 150 151 152 153 211 212 213 214 215
(code_label 234 233 235 22 22 (nil) [1 uses])
(note 235 234 236 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 236 235 237 22 (set (reg/f:DI 103 [ _22 ])
        (mem/f:DI (plus:DI (reg/f:DI 102 [ _21 ])
                (const_int 8 [0x8])) [3 _21->name+0 S8 A64])) "main.c":52:17 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 102 [ _21 ])
        (nil)))
(insn 237 236 238 22 (set (reg:DI 211)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -312 [0xfffffffffffffec8])) [3 value+0 S8 A64])) "main.c":52:17 66 {*movdi_internal}
     (nil))
(insn 238 237 239 22 (set (reg:DI 4 si)
        (reg:DI 211)) "main.c":52:17 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 211)
        (nil)))
(insn 239 238 240 22 (set (reg:DI 5 di)
        (reg/f:DI 103 [ _22 ])) "main.c":52:17 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 103 [ _22 ])
        (nil)))
(call_insn 240 239 241 22 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcpy") [flags 0x41]  <function_decl 0x7ffa22d64700 strcpy>) [0 __builtin_strcpy S1 A8])
            (const_int 0 [0]))) "main.c":52:17 677 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_UNUSED (reg:DI 0 ax)
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (set (reg:DI 0 ax)
            (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (nil)))))
(insn 241 240 242 22 (set (reg:DI 212)
        (mem/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -296 [0xfffffffffffffed8])) [2 pos+0 S8 A64])) "main.c":53:20 66 {*movdi_internal}
     (nil))
(insn 242 241 243 22 (set (reg:DI 213)
        (reg:DI 212)) "main.c":53:20 66 {*movdi_internal}
     (nil))
(insn 243 242 244 22 (parallel [
            (set (reg:DI 213)
                (ashift:DI (reg:DI 213)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":53:20 520 {*ashldi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 244 243 245 22 (parallel [
            (set (reg:DI 213)
                (plus:DI (reg:DI 213)
                    (reg:DI 212)))
            (clobber (reg:CC 17 flags))
        ]) "main.c":53:20 191 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 212)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (mult:DI (reg:DI 212)
                    (const_int 5 [0x5]))
                (nil)))))
(insn 245 244 246 22 (parallel [
            (set (reg:DI 214)
                (ashift:DI (reg:DI 213)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":53:20 520 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 213)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 246 245 247 22 (set (reg:DI 213)
        (reg:DI 214)) "main.c":53:20 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 214)
        (nil)))
(insn 247 246 248 22 (set (reg:DI 104 [ _23 ])
        (reg:DI 213)) "main.c":53:20 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 213)
        (nil)))
(insn 248 247 249 22 (parallel [
            (set (reg:DI 105 [ _24 ])
                (plus:DI (reg:DI 104 [ _23 ])
                    (const_int -80 [0xffffffffffffffb0])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":53:20 191 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 104 [ _23 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 249 248 250 22 (set (reg/f:DI 215)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -304 [0xfffffffffffffed0])) [8 ans+0 S8 A64])) "main.c":53:20 66 {*movdi_internal}
     (nil))
(insn 250 249 251 22 (parallel [
            (set (reg/f:DI 106 [ _25 ])
                (plus:DI (reg:DI 105 [ _24 ])
                    (reg/f:DI 215)))
            (clobber (reg:CC 17 flags))
        ]) "main.c":53:20 191 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 215)
        (expr_list:REG_DEAD (reg:DI 105 [ _24 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                                (const_int -304 [0xfffffffffffffed0])) [8 ans+0 S8 A64])
                        (reg:DI 105 [ _24 ]))
                    (nil))))))
(insn 251 250 252 22 (parallel [
            (set (reg/f:DI 119 [ _73 ])
                (plus:DI (reg/f:DI 106 [ _25 ])
                    (const_int 40 [0x28])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":53:40 191 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 252 251 253 22 (set (reg:DI 146 [ _110 ])
        (reg/f:DI 119 [ _73 ])) "main.c":53:40 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 119 [ _73 ])
        (nil)))
(insn 253 252 254 22 (parallel [
            (set (reg:DI 147 [ _111 ])
                (lshiftrt:DI (reg:DI 146 [ _110 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":53:40 566 {*lshrdi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 254 253 255 22 (parallel [
            (set (reg:DI 148 [ _112 ])
                (plus:DI (reg:DI 147 [ _111 ])
                    (const_int 2147450880 [0x7fff8000])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":53:40 191 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 147 [ _111 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 255 254 256 22 (set (reg/f:DI 149 [ _113 ])
        (reg:DI 148 [ _112 ])) "main.c":53:40 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 148 [ _112 ])
        (nil)))
(insn 256 255 257 22 (set (reg:QI 150 [ _114 ])
        (mem:QI (reg/f:DI 149 [ _113 ]) [7 *_113+0 S1 A8])) "main.c":53:40 69 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:DI 149 [ _113 ])
        (nil)))
(insn 257 256 258 22 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 150 [ _114 ])
            (const_int 0 [0]))) "main.c":53:40 5 {*cmpqi_ccno_1}
     (nil))
(insn 258 257 261 22 (set (reg:QI 151 [ _115 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) "main.c":53:40 655 {*setcc_qi}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil)))
(insn 261 258 262 22 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:QI 150 [ _114 ])
            (const_int 0 [0]))) "main.c":53:40 5 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 150 [ _114 ])
        (nil)))
(insn 262 261 263 22 (set (reg:QI 152 [ _116 ])
        (le:QI (reg:CCNO 17 flags)
            (const_int 0 [0]))) "main.c":53:40 655 {*setcc_qi}
     (expr_list:REG_DEAD (reg:CCNO 17 flags)
        (nil)))
(insn 263 262 264 22 (parallel [
            (set (reg:QI 153 [ _117 ])
                (and:QI (reg:QI 151 [ _115 ])
                    (reg:QI 152 [ _116 ])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":53:40 396 {*andqi_1}
     (expr_list:REG_DEAD (reg:QI 152 [ _116 ])
        (expr_list:REG_DEAD (reg:QI 151 [ _115 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 264 263 265 22 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 153 [ _117 ])
            (const_int 0 [0]))) "main.c":53:40 5 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 153 [ _117 ])
        (nil)))
(jump_insn 265 264 266 22 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 270)
            (pc))) "main.c":53:40 659 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 270)
;;  succ:       24 [100.0% (guessed)] 
;;              23 [0.0% (guessed)]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 106 146 172 173 174 178

;; basic block 23, loop depth 0, maybe hot
;;  prev block 22, next block 24, flags: (RTL)
;;  pred:       22 [0.0% (guessed)]  (FALLTHRU)
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 146
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 146
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
(note 266 265 267 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 267 266 268 23 (set (reg:DI 5 di)
        (reg:DI 146 [ _110 ])) "main.c":53:40 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 146 [ _110 ])
        (nil)))
(call_insn 268 267 269 23 (call (mem:QI (symbol_ref:DI ("__asan_report_store1") [flags 0x41]  <function_decl 0x7ffa22daac00 __builtin___asan_report_store1>) [0 __builtin___asan_report_store1 S1 A8])
        (const_int 0 [0])) "main.c":53:40 666 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 19 [frame]

(barrier 269 268 270)
;; basic block 24, loop depth 0, maybe hot
;;  prev block 23, next block 25, flags: (RTL)
;;  pred:       22 [100.0% (guessed)] 
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 106 172 173 174 178
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 106
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 107 108 109 154 155 156 157 158 159 160 161 162 163 216 217 218 219 220
(code_label 270 269 271 24 23 (nil) [1 uses])
(note 271 270 272 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 272 271 273 24 (set (mem:QI (plus:DI (reg/f:DI 106 [ _25 ])
                (const_int 40 [0x28])) [0 _25->oldest.used+0 S1 A64])
        (const_int 0 [0])) "main.c":53:40 69 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:DI 106 [ _25 ])
        (nil)))
(insn 273 272 274 24 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC4") [flags 0x2]  <var_decl 0x7ffa22b50630 *.LC4>)) "main.c":54:25 66 {*movdi_internal}
     (nil))
(insn 274 273 275 24 (set (reg:DI 5 di)
        (const_int 0 [0])) "main.c":54:25 66 {*movdi_internal}
     (nil))
(call_insn 275 274 276 24 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x7ffa22aecf00 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) "main.c":54:25 677 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 276 275 277 24 (set (reg:DI 216)
        (reg:DI 0 ax)) "main.c":54:25 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 277 276 278 24 (set (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -312 [0xfffffffffffffec8])) [3 value+0 S8 A64])
        (reg:DI 216)) "main.c":54:25 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 216)
        (nil)))
(insn 278 277 279 24 (set (reg:DI 217)
        (mem/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -296 [0xfffffffffffffed8])) [2 pos+0 S8 A64])) "main.c":55:20 66 {*movdi_internal}
     (nil))
(insn 279 278 280 24 (set (reg:DI 218)
        (reg:DI 217)) "main.c":55:20 66 {*movdi_internal}
     (nil))
(insn 280 279 281 24 (parallel [
            (set (reg:DI 218)
                (ashift:DI (reg:DI 218)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":55:20 520 {*ashldi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 281 280 282 24 (parallel [
            (set (reg:DI 218)
                (plus:DI (reg:DI 218)
                    (reg:DI 217)))
            (clobber (reg:CC 17 flags))
        ]) "main.c":55:20 191 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 217)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (mult:DI (reg:DI 217)
                    (const_int 5 [0x5]))
                (nil)))))
(insn 282 281 283 24 (parallel [
            (set (reg:DI 219)
                (ashift:DI (reg:DI 218)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":55:20 520 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 218)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 283 282 284 24 (set (reg:DI 218)
        (reg:DI 219)) "main.c":55:20 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 219)
        (nil)))
(insn 284 283 285 24 (set (reg:DI 107 [ _26 ])
        (reg:DI 218)) "main.c":55:20 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 218)
        (nil)))
(insn 285 284 286 24 (parallel [
            (set (reg:DI 108 [ _27 ])
                (plus:DI (reg:DI 107 [ _26 ])
                    (const_int -80 [0xffffffffffffffb0])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":55:20 191 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 107 [ _26 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 286 285 287 24 (set (reg/f:DI 220)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -304 [0xfffffffffffffed0])) [8 ans+0 S8 A64])) "main.c":55:20 66 {*movdi_internal}
     (nil))
(insn 287 286 288 24 (parallel [
            (set (reg/f:DI 109 [ _28 ])
                (plus:DI (reg:DI 108 [ _27 ])
                    (reg/f:DI 220)))
            (clobber (reg:CC 17 flags))
        ]) "main.c":55:20 191 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 220)
        (expr_list:REG_DEAD (reg:DI 108 [ _27 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                                (const_int -304 [0xfffffffffffffed0])) [8 ans+0 S8 A64])
                        (reg:DI 108 [ _27 ]))
                    (nil))))))
(insn 288 287 289 24 (set (reg:DI 154 [ _118 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -312 [0xfffffffffffffec8])) [3 value+0 S8 A64])) "main.c":55:37 66 {*movdi_internal}
     (nil))
(insn 289 288 290 24 (parallel [
            (set (reg:DI 155 [ _119 ])
                (lshiftrt:DI (reg:DI 154 [ _118 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":55:37 566 {*lshrdi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 290 289 291 24 (parallel [
            (set (reg:DI 156 [ _120 ])
                (plus:DI (reg:DI 155 [ _119 ])
                    (const_int 2147450880 [0x7fff8000])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":55:37 191 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 155 [ _119 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 291 290 292 24 (set (reg/f:DI 157 [ _121 ])
        (reg:DI 156 [ _120 ])) "main.c":55:37 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 156 [ _120 ])
        (nil)))
(insn 292 291 293 24 (set (reg:QI 158 [ _122 ])
        (mem:QI (reg/f:DI 157 [ _121 ]) [7 *_121+0 S1 A8])) "main.c":55:37 69 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:DI 157 [ _121 ])
        (nil)))
(insn 293 292 294 24 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 158 [ _122 ])
            (const_int 0 [0]))) "main.c":55:37 5 {*cmpqi_ccno_1}
     (nil))
(insn 294 293 295 24 (set (reg:QI 159 [ _123 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) "main.c":55:37 655 {*setcc_qi}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil)))
(insn 295 294 296 24 (parallel [
            (set (reg:DI 160 [ _124 ])
                (and:DI (reg:DI 154 [ _118 ])
                    (const_int 7 [0x7])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":55:37 391 {*anddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 296 295 297 24 (set (reg:QI 161 [ _125 ])
        (subreg:QI (reg:DI 160 [ _124 ]) 0)) "main.c":55:37 69 {*movqi_internal}
     (expr_list:REG_DEAD (reg:DI 160 [ _124 ])
        (nil)))
(insn 297 296 298 24 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:QI 161 [ _125 ])
            (reg:QI 158 [ _122 ]))) "main.c":55:37 9 {*cmpqi_1}
     (expr_list:REG_DEAD (reg:QI 161 [ _125 ])
        (expr_list:REG_DEAD (reg:QI 158 [ _122 ])
            (nil))))
(insn 298 297 299 24 (set (reg:QI 162 [ _126 ])
        (ge:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "main.c":55:37 655 {*setcc_qi}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil)))
(insn 299 298 300 24 (parallel [
            (set (reg:QI 163 [ _127 ])
                (and:QI (reg:QI 159 [ _123 ])
                    (reg:QI 162 [ _126 ])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":55:37 396 {*andqi_1}
     (expr_list:REG_DEAD (reg:QI 162 [ _126 ])
        (expr_list:REG_DEAD (reg:QI 159 [ _123 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 300 299 301 24 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 163 [ _127 ])
            (const_int 0 [0]))) "main.c":55:37 5 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 163 [ _127 ])
        (nil)))
(jump_insn 301 300 302 24 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 306)
            (pc))) "main.c":55:37 659 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 306)
;;  succ:       26 [100.0% (guessed)] 
;;              25 [0.0% (guessed)]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 109 154 172 173 174 178

;; basic block 25, loop depth 0, maybe hot
;;  prev block 24, next block 26, flags: (RTL)
;;  pred:       24 [0.0% (guessed)]  (FALLTHRU)
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 154
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 154
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
(note 302 301 303 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 303 302 304 25 (set (reg:DI 5 di)
        (reg:DI 154 [ _118 ])) "main.c":55:37 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 154 [ _118 ])
        (nil)))
(call_insn 304 303 305 25 (call (mem:QI (symbol_ref:DI ("__asan_report_load1") [flags 0x41]  <function_decl 0x7ffa22daa600 __builtin___asan_report_load1>) [0 __builtin___asan_report_load1 S1 A8])
        (const_int 0 [0])) "main.c":55:37 666 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 19 [frame]

(barrier 305 304 306)
;; basic block 26, loop depth 0, maybe hot
;;  prev block 25, next block 27, flags: (RTL)
;;  pred:       24 [100.0% (guessed)] 
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 109 172 173 174 178
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 109
;; lr  def 	 17 [flags] 110 120 164 165 166 167 168 169 170 171 221
(code_label 306 305 307 26 24 (nil) [1 uses])
(note 307 306 308 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 308 307 309 26 (set (reg/f:DI 221)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -312 [0xfffffffffffffec8])) [3 value+0 S8 A64])) "main.c":55:37 66 {*movdi_internal}
     (nil))
(insn 309 308 310 26 (set (reg:QI 110 [ _29 ])
        (mem:QI (reg/f:DI 221) [0 *value_60+0 S1 A8])) "main.c":55:37 69 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:DI 221)
        (nil)))
(insn 310 309 311 26 (parallel [
            (set (reg/f:DI 120 [ _74 ])
                (plus:DI (reg/f:DI 109 [ _28 ])
                    (const_int 24 [0x18])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":55:35 191 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 311 310 312 26 (set (reg:DI 164 [ _128 ])
        (reg/f:DI 120 [ _74 ])) "main.c":55:35 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 120 [ _74 ])
        (nil)))
(insn 312 311 313 26 (parallel [
            (set (reg:DI 165 [ _129 ])
                (lshiftrt:DI (reg:DI 164 [ _128 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":55:35 566 {*lshrdi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 313 312 314 26 (parallel [
            (set (reg:DI 166 [ _130 ])
                (plus:DI (reg:DI 165 [ _129 ])
                    (const_int 2147450880 [0x7fff8000])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":55:35 191 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 165 [ _129 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 314 313 315 26 (set (reg/f:DI 167 [ _131 ])
        (reg:DI 166 [ _130 ])) "main.c":55:35 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 166 [ _130 ])
        (nil)))
(insn 315 314 316 26 (set (reg:QI 168 [ _132 ])
        (mem:QI (reg/f:DI 167 [ _131 ]) [7 *_131+0 S1 A8])) "main.c":55:35 69 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:DI 167 [ _131 ])
        (nil)))
(insn 316 315 317 26 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 168 [ _132 ])
            (const_int 0 [0]))) "main.c":55:35 5 {*cmpqi_ccno_1}
     (nil))
(insn 317 316 320 26 (set (reg:QI 169 [ _133 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) "main.c":55:35 655 {*setcc_qi}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil)))
(insn 320 317 321 26 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:QI 168 [ _132 ])
            (const_int 0 [0]))) "main.c":55:35 5 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 168 [ _132 ])
        (nil)))
(insn 321 320 322 26 (set (reg:QI 170 [ _134 ])
        (le:QI (reg:CCNO 17 flags)
            (const_int 0 [0]))) "main.c":55:35 655 {*setcc_qi}
     (expr_list:REG_DEAD (reg:CCNO 17 flags)
        (nil)))
(insn 322 321 323 26 (parallel [
            (set (reg:QI 171 [ _135 ])
                (and:QI (reg:QI 169 [ _133 ])
                    (reg:QI 170 [ _134 ])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":55:35 396 {*andqi_1}
     (expr_list:REG_DEAD (reg:QI 170 [ _134 ])
        (expr_list:REG_DEAD (reg:QI 169 [ _133 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 323 322 324 26 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 171 [ _135 ])
            (const_int 0 [0]))) "main.c":55:35 5 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 171 [ _135 ])
        (nil)))
(jump_insn 324 323 325 26 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 329)
            (pc))) "main.c":55:35 659 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 329)
;;  succ:       28 [100.0% (guessed)] 
;;              27 [0.0% (guessed)]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 109 110 164 172 173 174 178

;; basic block 27, loop depth 0, maybe hot
;;  prev block 26, next block 28, flags: (RTL)
;;  pred:       26 [0.0% (guessed)]  (FALLTHRU)
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 164
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 164
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
(note 325 324 326 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn 326 325 327 27 (set (reg:DI 5 di)
        (reg:DI 164 [ _128 ])) "main.c":55:35 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 164 [ _128 ])
        (nil)))
(call_insn 327 326 328 27 (call (mem:QI (symbol_ref:DI ("__asan_report_store1") [flags 0x41]  <function_decl 0x7ffa22daac00 __builtin___asan_report_store1>) [0 __builtin___asan_report_store1 S1 A8])
        (const_int 0 [0])) "main.c":55:35 666 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 19 [frame]

(barrier 328 327 329)
;; basic block 28, loop depth 0, maybe hot
;;  prev block 27, next block 29, flags: (RTL)
;;  pred:       26 [100.0% (guessed)] 
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 109 110 172 173 174 178
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 109 110
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 222
(code_label 329 328 330 28 25 (nil) [1 uses])
(note 330 329 331 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(insn 331 330 332 28 (set (mem:QI (plus:DI (reg/f:DI 109 [ _28 ])
                (const_int 24 [0x18])) [0 _28->flag+0 S1 A64])
        (reg:QI 110 [ _29 ])) "main.c":55:35 69 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 110 [ _29 ])
        (expr_list:REG_DEAD (reg/f:DI 109 [ _28 ])
            (nil))))
(insn 332 331 333 28 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC4") [flags 0x2]  <var_decl 0x7ffa22b50630 *.LC4>)) "main.c":56:25 66 {*movdi_internal}
     (nil))
(insn 333 332 334 28 (set (reg:DI 5 di)
        (const_int 0 [0])) "main.c":56:25 66 {*movdi_internal}
     (nil))
(call_insn 334 333 335 28 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x7ffa22aecf00 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) "main.c":56:25 677 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 335 334 336 28 (set (reg:DI 222)
        (reg:DI 0 ax)) "main.c":56:25 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 336 335 337 28 (set (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -312 [0xfffffffffffffec8])) [3 value+0 S8 A64])
        (reg:DI 222)) "main.c":56:25 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 222)
        (nil)))
;;  succ:       29 (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 172 173 174 178

;; basic block 29, loop depth 0, maybe hot
;;  prev block 28, next block 30, flags: (RTL)
;;  pred:       28 (FALLTHRU,DFS_BACK)
;;              9 [always] 
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 172 173 174 178
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 17 [flags]
(code_label 337 336 338 29 16 (nil) [1 uses])
(note 338 337 340 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(insn 340 338 341 29 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                    (const_int -312 [0xfffffffffffffec8])) [3 value+0 S8 A64])
            (const_int 0 [0]))) "main.c":43:19 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 341 340 342 29 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 339)
            (pc))) "main.c":43:19 659 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 339)
;;  succ:       10
;;              30 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 172 173 174 178

;; basic block 30, loop depth 0, maybe hot
;;  prev block 29, next block 31, flags: (RTL)
;;  pred:       29 (FALLTHRU)
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 172 173 174 178
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 17 [flags]
(note 342 341 343 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(insn 343 342 344 30 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                        (const_int -316 [0xfffffffffffffec4])) [11 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                            (const_int -316 [0xfffffffffffffec4])) [11 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":41:53 190 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
;;  succ:       31 (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 172 173 174 178

;; basic block 31, loop depth 0, maybe hot
;;  prev block 30, next block 32, flags: (RTL)
;;  pred:       30 (FALLTHRU,DFS_BACK)
;;              8 [always] 
;; bb 31 artificial_defs: { }
;; bb 31 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 172 173 174 178
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 172
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 111 223 224
(code_label 344 343 345 31 15 (nil) [1 uses])
(note 345 344 346 31 [bb 31] NOTE_INSN_BASIC_BLOCK)
(insn 346 345 347 31 (set (reg:DI 223)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -328 [0xfffffffffffffeb8])) [10 fSensor+0 S8 A64])) "main.c":41:23 66 {*movdi_internal}
     (nil))
(insn 347 346 348 31 (parallel [
            (set (reg:DI 224)
                (plus:DI (reg:DI 172)
                    (const_int -256 [0xffffffffffffff00])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":41:23 191 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 348 347 349 31 (set (reg:DI 1 dx)
        (reg:DI 223)) "main.c":41:23 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 223)
        (nil)))
(insn 349 348 350 31 (set (reg:SI 4 si)
        (const_int 150 [0x96])) "main.c":41:23 67 {*movsi_internal}
     (nil))
(insn 350 349 351 31 (set (reg:DI 5 di)
        (reg:DI 224)) "main.c":41:23 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 224)
        (nil)))
(call_insn 351 350 352 31 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fgets") [flags 0x41]  <function_decl 0x7ffa22e57300 fgets>) [0 fgets S1 A8])
            (const_int 0 [0]))) "main.c":41:23 677 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 352 351 354 31 (set (reg/f:DI 111 [ _30 ])
        (reg:DI 0 ax)) "main.c":41:23 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 354 352 355 31 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 111 [ _30 ])
            (const_int 0 [0]))) "main.c":41:9 8 {*cmpdi_ccno_1}
     (expr_list:REG_DEAD (reg/f:DI 111 [ _30 ])
        (nil)))
(jump_insn 355 354 356 31 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 353)
            (pc))) "main.c":41:9 659 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 353)
;;  succ:       9
;;              32 (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 172 173 174 178

;; basic block 32, loop depth 0, maybe hot
;;  prev block 31, next block 33, flags: (RTL)
;;  pred:       31 (FALLTHRU,DFS_BACK)
;;              7 [always] 
;; bb 32 artificial_defs: { }
;; bb 32 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 172 173 174 178
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 112 225
(code_label 356 355 357 32 14 (nil) [1 uses])
(note 357 356 358 32 [bb 32] NOTE_INSN_BASIC_BLOCK)
(insn 358 357 359 32 (set (reg:DI 225)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -328 [0xfffffffffffffeb8])) [10 fSensor+0 S8 A64])) "main.c":40:13 66 {*movdi_internal}
     (nil))
(insn 359 358 360 32 (set (reg:DI 5 di)
        (reg:DI 225)) "main.c":40:13 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 225)
        (nil)))
(call_insn 360 359 361 32 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("feof") [flags 0x41]  <function_decl 0x7ffa22e64300 feof>) [0 feof S1 A8])
            (const_int 0 [0]))) "main.c":40:13 677 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 361 360 363 32 (set (reg:SI 112 [ _31 ])
        (reg:SI 0 ax)) "main.c":40:13 67 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 363 361 364 32 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 112 [ _31 ])
            (const_int 0 [0]))) "main.c":40:11 7 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 112 [ _31 ])
        (nil)))
(jump_insn 364 363 365 32 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 362)
            (pc))) "main.c":40:11 659 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 362)
;;  succ:       8
;;              33 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 172 173 174 178

;; basic block 33, loop depth 0, maybe hot
;;  prev block 32, next block 34, flags: (RTL)
;;  pred:       32 (FALLTHRU)
;; bb 33 artificial_defs: { }
;; bb 33 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 173 174 178
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 173 174
;; lr  def 	 17 [flags] 113 180
(note 365 364 366 33 [bb 33] NOTE_INSN_BASIC_BLOCK)
(insn 366 365 369 33 (set (reg/f:DI 113 [ _44 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -304 [0xfffffffffffffed0])) [8 ans+0 S8 A64])) "main.c":60:12 66 {*movdi_internal}
     (nil))
(insn 369 366 24 33 (set (reg/f:DI 180 [ <retval> ])
        (reg/f:DI 113 [ _44 ])) "main.c":60:12 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 113 [ _44 ])
        (nil)))
(insn 24 369 25 33 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 174)
            (reg:DI 173))) "main.c":32:40 12 {*cmpdi_1}
     (expr_list:REG_DEAD (reg:DI 174)
        (nil)))
(jump_insn 25 24 384 33 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 33)
            (pc))) "main.c":32:40 659 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 33)
;;  succ:       35
;;              34 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 173 178 180

;; basic block 34, loop depth 0, maybe hot
;;  prev block 33, next block 35, flags: (RTL)
;;  pred:       33 (FALLTHRU)
;; bb 34 artificial_defs: { }
;; bb 34 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 173 178 180
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 173 178
;; lr  def 	 179
(note 384 25 26 34 [bb 34] NOTE_INSN_BASIC_BLOCK)
(insn 26 384 27 34 (set (mem:DI (reg:DI 173) [0  S8 A8])
        (const_int 1172321806 [0x45e0360e])) "main.c":32:40 66 {*movdi_internal}
     (nil))
(insn 27 26 28 34 (set (mem:TI (plus:DI (reg:DI 178)
                (const_int 2147450880 [0x7fff8000])) [7  S16 A8])
        (const_wide_int 0xf5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5)) "main.c":32:40 65 {*movti_internal}
     (nil))
(insn 28 27 29 34 (set (mem:TI (plus:DI (reg:DI 178)
                (const_int 2147450896 [0x7fff8010])) [7  S16 A8])
        (const_wide_int 0xf5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5)) "main.c":32:40 65 {*movti_internal}
     (expr_list:REG_DEAD (reg:DI 178)
        (nil)))
(insn 29 28 30 34 (set (reg:DI 179)
        (mem:DI (plus:DI (reg:DI 173)
                (const_int 248 [0xf8])) [0  S8 A8])) "main.c":32:40 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 173)
        (nil)))
(insn 30 29 395 34 (set (mem:QI (reg:DI 179) [0  S1 A8])
        (const_int 0 [0])) "main.c":32:40 69 {*movqi_internal}
     (expr_list:REG_DEAD (reg:DI 179)
        (nil)))
(jump_insn 395 30 396 34 (set (pc)
        (label_ref 37)) 660 {jump}
     (nil)
 -> 37)
;;  succ:       36 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 180

(barrier 396 395 33)
;; basic block 35, loop depth 0, maybe hot
;;  prev block 34, next block 36, flags: (RTL)
;;  pred:       33
;; bb 35 artificial_defs: { }
;; bb 35 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 178 180
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 178
;; lr  def 	
(code_label 33 396 385 35 10 (nil) [1 uses])
(note 385 33 34 35 [bb 35] NOTE_INSN_BASIC_BLOCK)
(insn 34 385 35 35 (set (mem:SI (plus:DI (reg:DI 178)
                (const_int 2147450880 [0x7fff8000])) [7  S4 A8])
        (const_int 0 [0])) "main.c":32:40 67 {*movsi_internal}
     (nil))
(insn 35 34 36 35 (set (mem:DI (plus:DI (reg:DI 178)
                (const_int 2147450900 [0x7fff8014])) [7  S8 A8])
        (const_int 0 [0])) "main.c":32:40 66 {*movdi_internal}
     (nil))
(insn 36 35 37 35 (set (mem:SI (plus:DI (reg:DI 178)
                (const_int 2147450908 [0x7fff801c])) [7  S4 A8])
        (const_int 0 [0])) "main.c":32:40 67 {*movsi_internal}
     (expr_list:REG_DEAD (reg:DI 178)
        (nil)))
;;  succ:       36 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 180

;; basic block 36, loop depth 0, maybe hot
;;  prev block 35, next block 37, flags: (RTL)
;;  pred:       35 (FALLTHRU)
;;              34 [always] 
;; bb 36 artificial_defs: { }
;; bb 36 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 180
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 17 [flags]
(code_label 37 36 386 36 11 (nil) [1 uses])
(note 386 37 373 36 [bb 36] NOTE_INSN_BASIC_BLOCK)
(insn 373 386 374 36 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 19 frame)
                                (const_int -8 [0xfffffffffffffff8])) [13 D.3491+0 S8 A64])
                        (mem/v/f:DI (const_int 40 [0x28]) [0 MEM[(<address-space-1> long unsigned int *)40B]+0 S8 A64 AS1])
                    ] UNSPEC_SP_TEST))
            (clobber (scratch:DI))
        ]) "main.c":61:1 978 {stack_protect_test_di}
     (nil))
(jump_insn 374 373 387 36 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 377)
            (pc))) "main.c":61:1 659 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 377)
;;  succ:       38
;;              37 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 180

;; basic block 37, loop depth 0, maybe hot
;;  prev block 36, next block 38, flags: (RTL)
;;  pred:       36 (FALLTHRU)
;; bb 37 artificial_defs: { }
;; bb 37 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
(note 387 374 375 37 [bb 37] NOTE_INSN_BASIC_BLOCK)
(call_insn 375 387 376 37 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7ffa22b3e700 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) "main.c":61:1 666 {*call}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (nil))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 19 [frame]

(barrier 376 375 377)
;; basic block 38, loop depth 0, maybe hot
;;  prev block 37, next block 1, flags: (RTL)
;;  pred:       36
;; bb 38 artificial_defs: { }
;; bb 38 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 180
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 180
;; lr  def 	 0 [ax]
(code_label 377 376 388 38 30 (nil) [1 uses])
(note 388 377 378 38 [bb 38] NOTE_INSN_BASIC_BLOCK)
(insn 378 388 379 38 (set (reg/i:DI 0 ax)
        (reg/f:DI 180 [ <retval> ])) "main.c":61:1 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 180 [ <retval> ])
        (nil)))
(insn 379 378 0 38 (use (reg/i:DI 0 ax)) "main.c":61:1 -1
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 19 [frame]


;; Function addRec (addRec, funcdef_no=2, decl_uid=3430, cgraph_uid=3, symbol_order=2)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 37 n_edges 40 count 37 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36
;; 2 succs { 3 4 }
;; 3 succs { 36 }
;; 4 succs { 10 5 }
;; 5 succs { 7 6 }
;; 6 succs { }
;; 7 succs { 9 8 }
;; 8 succs { }
;; 9 succs { 10 13 }
;; 10 succs { 12 11 }
;; 11 succs { }
;; 12 succs { 36 }
;; 13 succs { 15 14 }
;; 14 succs { }
;; 15 succs { 17 16 }
;; 16 succs { }
;; 17 succs { 18 31 }
;; 18 succs { 20 19 }
;; 19 succs { }
;; 20 succs { 22 21 }
;; 21 succs { }
;; 22 succs { 24 23 }
;; 23 succs { }
;; 24 succs { 26 25 }
;; 25 succs { }
;; 26 succs { 28 27 }
;; 27 succs { }
;; 28 succs { 30 29 }
;; 29 succs { }
;; 30 succs { 36 }
;; 31 succs { 33 32 }
;; 32 succs { }
;; 33 succs { 35 34 }
;; 34 succs { }
;; 35 succs { 36 }
;; 36 succs { 1 }
Building IRA IR
verify found no changes in insn with uid = 28.
verify found no changes in insn with uid = 44.
verify found no changes in insn with uid = 65.
verify found no changes in insn with uid = 87.
verify found no changes in insn with uid = 103.
verify found no changes in insn with uid = 123.
verify found no changes in insn with uid = 140.
verify found no changes in insn with uid = 160.
verify found no changes in insn with uid = 177.
verify found no changes in insn with uid = 197.
verify found no changes in insn with uid = 214.
verify found no changes in insn with uid = 225.
verify found no changes in insn with uid = 242.
verify found no changes in insn with uid = 251.
verify found no changes in insn with uid = 264.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r204: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r204,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r203: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r203,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r202: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a12 (r202,l0) best SIREG, allocno GENERAL_REGS
    r201: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a13 (r201,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r200: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a20 (r200,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r199: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a21 (r199,l0) best DIREG, allocno GENERAL_REGS
    r198: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a22 (r198,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r197: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a26 (r197,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r196: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a33 (r196,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r195: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a34 (r195,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r194: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a41 (r194,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r193: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a42 (r193,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r192: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a46 (r192,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r191: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a53 (r191,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r190: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a54 (r190,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r189: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a61 (r189,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r188: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a62 (r188,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r187: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a66 (r187,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r186: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a73 (r186,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r185: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a74 (r185,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r184: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a81 (r184,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r183: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a84 (r183,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r182: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a91 (r182,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r181: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a99 (r181,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r180: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a98 (r180,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r179: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a106 (r179,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r178: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a109 (r178,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r177: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a116 (r177,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r176: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r176,l0) best AREG, allocno GENERAL_REGS
    r175: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r175,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r174: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r174,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r173: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r173,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r172: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r172,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r171: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a4 (r171,l0) best DIREG, allocno GENERAL_REGS
    r170: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a15 (r170,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r169: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a16 (r169,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r168: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a17 (r168,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r167: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a18 (r167,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r166: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a14 (r166,l0) best DIREG, allocno GENERAL_REGS
    r165: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a28 (r165,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r164: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a29 (r164,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r163: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a30 (r163,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r162: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a31 (r162,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r161: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a27 (r161,l0) best DIREG, allocno GENERAL_REGS
    r160: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a36 (r160,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r159: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a37 (r159,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r158: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a38 (r158,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r157: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a39 (r157,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r156: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a35 (r156,l0) best DIREG, allocno GENERAL_REGS
    r155: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a48 (r155,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r154: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a49 (r154,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r153: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a50 (r153,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r152: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a51 (r152,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r151: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a47 (r151,l0) best DIREG, allocno GENERAL_REGS
    r150: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a56 (r150,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r149: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a57 (r149,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r148: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a58 (r148,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r147: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a59 (r147,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r146: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a55 (r146,l0) best DIREG, allocno GENERAL_REGS
    r145: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a68 (r145,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r144: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a69 (r144,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r143: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a70 (r143,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r142: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a71 (r142,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r141: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a67 (r141,l0) best DIREG, allocno GENERAL_REGS
    r140: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a76 (r140,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r139: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a77 (r139,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r138: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a78 (r138,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r137: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a79 (r137,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r136: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a75 (r136,l0) best DIREG, allocno GENERAL_REGS
    r135: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a86 (r135,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r134: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a87 (r134,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r133: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a88 (r133,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r132: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a89 (r132,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r131: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a85 (r131,l0) best DIREG, allocno GENERAL_REGS
    r130: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a93 (r130,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r129: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a94 (r129,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r128: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a95 (r128,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r127: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a96 (r127,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r126: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a92 (r126,l0) best DIREG, allocno GENERAL_REGS
    r125: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a101 (r125,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r124: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a102 (r124,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r123: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a103 (r123,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r122: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a104 (r122,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r121: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a100 (r121,l0) best DIREG, allocno GENERAL_REGS
    r120: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a111 (r120,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r119: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a112 (r119,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r118: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a113 (r118,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r117: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a114 (r117,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r116: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a110 (r116,l0) best DIREG, allocno GENERAL_REGS
    r115: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a118 (r115,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r114: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a119 (r114,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r113: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a120 (r113,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r112: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a121 (r112,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r111: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a117 (r111,l0) best DIREG, allocno GENERAL_REGS
    r110: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r110,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r109: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a19 (r109,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r108: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a32 (r108,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r107: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a40 (r107,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r106: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a52 (r106,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r105: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a60 (r105,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r104: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a72 (r104,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r103: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a80 (r103,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r102: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a90 (r102,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r101: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a97 (r101,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r100: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a105 (r100,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r99: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a115 (r99,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r98: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a122 (r98,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r97: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r97,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r96: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r96,l0) best AREG, allocno GENERAL_REGS
    r95: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a11 (r95,l0) best DIREG, allocno GENERAL_REGS
    r94: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a23 (r94,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a24 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a25 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a43 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a44 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a45 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a63 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a64 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r86: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a65 (r86,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r85: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a82 (r85,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r84: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a83 (r84,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r83: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a107 (r83,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r82: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a108 (r82,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r176,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:14000 NO_REX_SSE_REGS:14000 SSE_REGS:14000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:7000
  a1(r97,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:32000 NO_REX_SSE_REGS:32000 SSE_REGS:32000 MMX_REGS:61000 INT_SSE_REGS:61000 ALL_REGS:636000 MEM:29000
  a2(r204,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16000 NO_REX_SSE_REGS:16000 SSE_REGS:16000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a3(r96,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:8000 NO_REX_SSE_REGS:8000 SSE_REGS:8000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:12000
  a4(r171,l0) costs: AREG:4000 DREG:4000 CREG:4000 BREG:4000 SIREG:4000 DIREG:4000 AD_REGS:4000 CLOBBERED_REGS:4000 Q_REGS:4000 TLS_GOTBASE_REGS:4000 GENERAL_REGS:4000 SSE_FIRST_REG:24000 NO_REX_SSE_REGS:24000 SSE_REGS:24000 MMX_REGS:34000 INT_SSE_REGS:34000 ALL_REGS:526000 MEM:14000
  a5(r175,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a6(r174,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:14000 NO_REX_SSE_REGS:14000 SSE_REGS:14000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:7000
  a7(r173,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8000 NO_REX_SSE_REGS:8000 SSE_REGS:8000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a8(r172,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:18000 NO_REX_SSE_REGS:18000 SSE_REGS:18000 MMX_REGS:28000 INT_SSE_REGS:28000 ALL_REGS:426000 MEM:12000
  a9(r110,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8000 NO_REX_SSE_REGS:8000 SSE_REGS:8000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a10(r203,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16000 NO_REX_SSE_REGS:16000 SSE_REGS:16000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:11000
  a11(r95,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:16000 NO_REX_SSE_REGS:16000 SSE_REGS:16000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a12(r202,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:16000 NO_REX_SSE_REGS:16000 SSE_REGS:16000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a13(r201,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16000 NO_REX_SSE_REGS:16000 SSE_REGS:16000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a14(r166,l0) costs: AREG:4000 DREG:4000 CREG:4000 BREG:4000 SIREG:4000 DIREG:4000 AD_REGS:4000 CLOBBERED_REGS:4000 Q_REGS:4000 TLS_GOTBASE_REGS:4000 GENERAL_REGS:4000 SSE_FIRST_REG:24000 NO_REX_SSE_REGS:24000 SSE_REGS:24000 MMX_REGS:34000 INT_SSE_REGS:34000 ALL_REGS:526000 MEM:14000
  a15(r170,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a16(r169,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:14000 NO_REX_SSE_REGS:14000 SSE_REGS:14000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:7000
  a17(r168,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8000 NO_REX_SSE_REGS:8000 SSE_REGS:8000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a18(r167,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:18000 NO_REX_SSE_REGS:18000 SSE_REGS:18000 MMX_REGS:28000 INT_SSE_REGS:28000 ALL_REGS:426000 MEM:12000
  a19(r109,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8000 NO_REX_SSE_REGS:8000 SSE_REGS:8000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a20(r200,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16000 NO_REX_SSE_REGS:16000 SSE_REGS:16000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:11000
  a21(r199,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:16000 NO_REX_SSE_REGS:16000 SSE_REGS:16000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a22(r198,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16000 NO_REX_SSE_REGS:16000 SSE_REGS:16000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a23(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8000 NO_REX_SSE_REGS:8000 SSE_REGS:8000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a24(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16000 NO_REX_SSE_REGS:16000 SSE_REGS:16000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:11000
  a25(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16000 NO_REX_SSE_REGS:16000 SSE_REGS:16000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:11000
  a26(r197,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16000 NO_REX_SSE_REGS:16000 SSE_REGS:16000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a27(r161,l0) costs: AREG:4000 DREG:4000 CREG:4000 BREG:4000 SIREG:4000 DIREG:4000 AD_REGS:4000 CLOBBERED_REGS:4000 Q_REGS:4000 TLS_GOTBASE_REGS:4000 GENERAL_REGS:4000 SSE_FIRST_REG:24000 NO_REX_SSE_REGS:24000 SSE_REGS:24000 MMX_REGS:34000 INT_SSE_REGS:34000 ALL_REGS:526000 MEM:14000
  a28(r165,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a29(r164,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:14000 NO_REX_SSE_REGS:14000 SSE_REGS:14000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:7000
  a30(r163,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8000 NO_REX_SSE_REGS:8000 SSE_REGS:8000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a31(r162,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:18000 NO_REX_SSE_REGS:18000 SSE_REGS:18000 MMX_REGS:28000 INT_SSE_REGS:28000 ALL_REGS:426000 MEM:12000
  a32(r108,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8000 NO_REX_SSE_REGS:8000 SSE_REGS:8000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a33(r196,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16000 NO_REX_SSE_REGS:16000 SSE_REGS:16000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:11000
  a34(r195,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16000 NO_REX_SSE_REGS:16000 SSE_REGS:16000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a35(r156,l0) costs: AREG:4000 DREG:4000 CREG:4000 BREG:4000 SIREG:4000 DIREG:4000 AD_REGS:4000 CLOBBERED_REGS:4000 Q_REGS:4000 TLS_GOTBASE_REGS:4000 GENERAL_REGS:4000 SSE_FIRST_REG:24000 NO_REX_SSE_REGS:24000 SSE_REGS:24000 MMX_REGS:34000 INT_SSE_REGS:34000 ALL_REGS:526000 MEM:14000
  a36(r160,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a37(r159,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:14000 NO_REX_SSE_REGS:14000 SSE_REGS:14000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:7000
  a38(r158,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8000 NO_REX_SSE_REGS:8000 SSE_REGS:8000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a39(r157,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:18000 NO_REX_SSE_REGS:18000 SSE_REGS:18000 MMX_REGS:28000 INT_SSE_REGS:28000 ALL_REGS:426000 MEM:12000
  a40(r107,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8000 NO_REX_SSE_REGS:8000 SSE_REGS:8000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a41(r194,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16000 NO_REX_SSE_REGS:16000 SSE_REGS:16000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:11000
  a42(r193,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16000 NO_REX_SSE_REGS:16000 SSE_REGS:16000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a43(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8000 NO_REX_SSE_REGS:8000 SSE_REGS:8000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a44(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16000 NO_REX_SSE_REGS:16000 SSE_REGS:16000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:11000
  a45(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16000 NO_REX_SSE_REGS:16000 SSE_REGS:16000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:11000
  a46(r192,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16000 NO_REX_SSE_REGS:16000 SSE_REGS:16000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a47(r151,l0) costs: AREG:4000 DREG:4000 CREG:4000 BREG:4000 SIREG:4000 DIREG:4000 AD_REGS:4000 CLOBBERED_REGS:4000 Q_REGS:4000 TLS_GOTBASE_REGS:4000 GENERAL_REGS:4000 SSE_FIRST_REG:24000 NO_REX_SSE_REGS:24000 SSE_REGS:24000 MMX_REGS:34000 INT_SSE_REGS:34000 ALL_REGS:526000 MEM:14000
  a48(r155,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a49(r154,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:14000 NO_REX_SSE_REGS:14000 SSE_REGS:14000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:7000
  a50(r153,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8000 NO_REX_SSE_REGS:8000 SSE_REGS:8000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a51(r152,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:18000 NO_REX_SSE_REGS:18000 SSE_REGS:18000 MMX_REGS:28000 INT_SSE_REGS:28000 ALL_REGS:426000 MEM:12000
  a52(r106,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8000 NO_REX_SSE_REGS:8000 SSE_REGS:8000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a53(r191,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16000 NO_REX_SSE_REGS:16000 SSE_REGS:16000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:11000
  a54(r190,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16000 NO_REX_SSE_REGS:16000 SSE_REGS:16000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a55(r146,l0) costs: AREG:4000 DREG:4000 CREG:4000 BREG:4000 SIREG:4000 DIREG:4000 AD_REGS:4000 CLOBBERED_REGS:4000 Q_REGS:4000 TLS_GOTBASE_REGS:4000 GENERAL_REGS:4000 SSE_FIRST_REG:24000 NO_REX_SSE_REGS:24000 SSE_REGS:24000 MMX_REGS:34000 INT_SSE_REGS:34000 ALL_REGS:526000 MEM:14000
  a56(r150,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a57(r149,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:14000 NO_REX_SSE_REGS:14000 SSE_REGS:14000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:7000
  a58(r148,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8000 NO_REX_SSE_REGS:8000 SSE_REGS:8000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a59(r147,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:18000 NO_REX_SSE_REGS:18000 SSE_REGS:18000 MMX_REGS:28000 INT_SSE_REGS:28000 ALL_REGS:426000 MEM:12000
  a60(r105,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8000 NO_REX_SSE_REGS:8000 SSE_REGS:8000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a61(r189,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16000 NO_REX_SSE_REGS:16000 SSE_REGS:16000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:11000
  a62(r188,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16000 NO_REX_SSE_REGS:16000 SSE_REGS:16000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a63(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8000 NO_REX_SSE_REGS:8000 SSE_REGS:8000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a64(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16000 NO_REX_SSE_REGS:16000 SSE_REGS:16000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:11000
  a65(r86,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16000 NO_REX_SSE_REGS:16000 SSE_REGS:16000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:11000
  a66(r187,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16000 NO_REX_SSE_REGS:16000 SSE_REGS:16000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a67(r141,l0) costs: AREG:4000 DREG:4000 CREG:4000 BREG:4000 SIREG:4000 DIREG:4000 AD_REGS:4000 CLOBBERED_REGS:4000 Q_REGS:4000 TLS_GOTBASE_REGS:4000 GENERAL_REGS:4000 SSE_FIRST_REG:24000 NO_REX_SSE_REGS:24000 SSE_REGS:24000 MMX_REGS:34000 INT_SSE_REGS:34000 ALL_REGS:526000 MEM:14000
  a68(r145,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a69(r144,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:14000 NO_REX_SSE_REGS:14000 SSE_REGS:14000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:7000
  a70(r143,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8000 NO_REX_SSE_REGS:8000 SSE_REGS:8000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a71(r142,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:18000 NO_REX_SSE_REGS:18000 SSE_REGS:18000 MMX_REGS:28000 INT_SSE_REGS:28000 ALL_REGS:426000 MEM:12000
  a72(r104,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8000 NO_REX_SSE_REGS:8000 SSE_REGS:8000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a73(r186,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16000 NO_REX_SSE_REGS:16000 SSE_REGS:16000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:11000
  a74(r185,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16000 NO_REX_SSE_REGS:16000 SSE_REGS:16000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a75(r136,l0) costs: AREG:4000 DREG:4000 CREG:4000 BREG:4000 SIREG:4000 DIREG:4000 AD_REGS:4000 CLOBBERED_REGS:4000 Q_REGS:4000 TLS_GOTBASE_REGS:4000 GENERAL_REGS:4000 SSE_FIRST_REG:24000 NO_REX_SSE_REGS:24000 SSE_REGS:24000 MMX_REGS:34000 INT_SSE_REGS:34000 ALL_REGS:526000 MEM:14000
  a76(r140,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a77(r139,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:14000 NO_REX_SSE_REGS:14000 SSE_REGS:14000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:7000
  a78(r138,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8000 NO_REX_SSE_REGS:8000 SSE_REGS:8000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a79(r137,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:18000 NO_REX_SSE_REGS:18000 SSE_REGS:18000 MMX_REGS:28000 INT_SSE_REGS:28000 ALL_REGS:426000 MEM:12000
  a80(r103,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8000 NO_REX_SSE_REGS:8000 SSE_REGS:8000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a81(r184,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16000 NO_REX_SSE_REGS:16000 SSE_REGS:16000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:11000
  a82(r85,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16000 NO_REX_SSE_REGS:16000 SSE_REGS:16000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:11000
  a83(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16000 NO_REX_SSE_REGS:16000 SSE_REGS:16000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:11000
  a84(r183,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16000 NO_REX_SSE_REGS:16000 SSE_REGS:16000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a85(r131,l0) costs: AREG:4000 DREG:4000 CREG:4000 BREG:4000 SIREG:4000 DIREG:4000 AD_REGS:4000 CLOBBERED_REGS:4000 Q_REGS:4000 TLS_GOTBASE_REGS:4000 GENERAL_REGS:4000 SSE_FIRST_REG:24000 NO_REX_SSE_REGS:24000 SSE_REGS:24000 MMX_REGS:34000 INT_SSE_REGS:34000 ALL_REGS:526000 MEM:14000
  a86(r135,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a87(r134,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:14000 NO_REX_SSE_REGS:14000 SSE_REGS:14000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:7000
  a88(r133,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8000 NO_REX_SSE_REGS:8000 SSE_REGS:8000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a89(r132,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:18000 NO_REX_SSE_REGS:18000 SSE_REGS:18000 MMX_REGS:28000 INT_SSE_REGS:28000 ALL_REGS:426000 MEM:12000
  a90(r102,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8000 NO_REX_SSE_REGS:8000 SSE_REGS:8000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:11000
  a91(r182,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16000 NO_REX_SSE_REGS:16000 SSE_REGS:16000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a92(r126,l0) costs: AREG:4000 DREG:4000 CREG:4000 BREG:4000 SIREG:4000 DIREG:4000 AD_REGS:4000 CLOBBERED_REGS:4000 Q_REGS:4000 TLS_GOTBASE_REGS:4000 GENERAL_REGS:4000 SSE_FIRST_REG:24000 NO_REX_SSE_REGS:24000 SSE_REGS:24000 MMX_REGS:34000 INT_SSE_REGS:34000 ALL_REGS:526000 MEM:14000
  a93(r130,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a94(r129,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:14000 NO_REX_SSE_REGS:14000 SSE_REGS:14000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:7000
  a95(r128,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8000 NO_REX_SSE_REGS:8000 SSE_REGS:8000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a96(r127,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:18000 NO_REX_SSE_REGS:18000 SSE_REGS:18000 MMX_REGS:28000 INT_SSE_REGS:28000 ALL_REGS:426000 MEM:12000
  a97(r101,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8000 NO_REX_SSE_REGS:8000 SSE_REGS:8000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:11000
  a98(r180,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16000 NO_REX_SSE_REGS:16000 SSE_REGS:16000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a99(r181,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8000 NO_REX_SSE_REGS:8000 SSE_REGS:8000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a100(r121,l0) costs: AREG:4000 DREG:4000 CREG:4000 BREG:4000 SIREG:4000 DIREG:4000 AD_REGS:4000 CLOBBERED_REGS:4000 Q_REGS:4000 TLS_GOTBASE_REGS:4000 GENERAL_REGS:4000 SSE_FIRST_REG:24000 NO_REX_SSE_REGS:24000 SSE_REGS:24000 MMX_REGS:34000 INT_SSE_REGS:34000 ALL_REGS:526000 MEM:14000
  a101(r125,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a102(r124,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:14000 NO_REX_SSE_REGS:14000 SSE_REGS:14000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:7000
  a103(r123,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8000 NO_REX_SSE_REGS:8000 SSE_REGS:8000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a104(r122,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:18000 NO_REX_SSE_REGS:18000 SSE_REGS:18000 MMX_REGS:28000 INT_SSE_REGS:28000 ALL_REGS:426000 MEM:12000
  a105(r100,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8000 NO_REX_SSE_REGS:8000 SSE_REGS:8000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a106(r179,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16000 NO_REX_SSE_REGS:16000 SSE_REGS:16000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:11000
  a107(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16000 NO_REX_SSE_REGS:16000 SSE_REGS:16000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:11000
  a108(r82,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16000 NO_REX_SSE_REGS:16000 SSE_REGS:16000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:11000
  a109(r178,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16000 NO_REX_SSE_REGS:16000 SSE_REGS:16000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a110(r116,l0) costs: AREG:4000 DREG:4000 CREG:4000 BREG:4000 SIREG:4000 DIREG:4000 AD_REGS:4000 CLOBBERED_REGS:4000 Q_REGS:4000 TLS_GOTBASE_REGS:4000 GENERAL_REGS:4000 SSE_FIRST_REG:24000 NO_REX_SSE_REGS:24000 SSE_REGS:24000 MMX_REGS:34000 INT_SSE_REGS:34000 ALL_REGS:526000 MEM:14000
  a111(r120,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a112(r119,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:14000 NO_REX_SSE_REGS:14000 SSE_REGS:14000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:7000
  a113(r118,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8000 NO_REX_SSE_REGS:8000 SSE_REGS:8000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a114(r117,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:18000 NO_REX_SSE_REGS:18000 SSE_REGS:18000 MMX_REGS:28000 INT_SSE_REGS:28000 ALL_REGS:426000 MEM:12000
  a115(r99,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8000 NO_REX_SSE_REGS:8000 SSE_REGS:8000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:11000
  a116(r177,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16000 NO_REX_SSE_REGS:16000 SSE_REGS:16000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a117(r111,l0) costs: AREG:4000 DREG:4000 CREG:4000 BREG:4000 SIREG:4000 DIREG:4000 AD_REGS:4000 CLOBBERED_REGS:4000 Q_REGS:4000 TLS_GOTBASE_REGS:4000 GENERAL_REGS:4000 SSE_FIRST_REG:24000 NO_REX_SSE_REGS:24000 SSE_REGS:24000 MMX_REGS:34000 INT_SSE_REGS:34000 ALL_REGS:526000 MEM:14000
  a118(r115,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a119(r114,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:14000 NO_REX_SSE_REGS:14000 SSE_REGS:14000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:7000
  a120(r113,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8000 NO_REX_SSE_REGS:8000 SSE_REGS:8000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a121(r112,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:18000 NO_REX_SSE_REGS:18000 SSE_REGS:18000 MMX_REGS:28000 INT_SSE_REGS:28000 ALL_REGS:426000 MEM:12000
  a122(r98,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8000 NO_REX_SSE_REGS:8000 SSE_REGS:8000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:11000

   Insn 278(l0): point = 0
   Insn 277(l0): point = 2
   Insn 273(l0): point = 4
   Insn 270(l0): point = 7
   Insn 269(l0): point = 9
   Insn 268(l0): point = 11
   Insn 264(l0): point = 14
   Insn 263(l0): point = 16
   Insn 261(l0): point = 19
   Insn 260(l0): point = 21
   Insn 259(l0): point = 23
   Insn 258(l0): point = 25
   Insn 257(l0): point = 27
   Insn 256(l0): point = 29
   Insn 255(l0): point = 31
   Insn 254(l0): point = 33
   Insn 253(l0): point = 35
   Insn 252(l0): point = 37
   Insn 251(l0): point = 39
   Insn 250(l0): point = 41
   Insn 249(l0): point = 43
   Insn 248(l0): point = 45
   Insn 247(l0): point = 47
   Insn 246(l0): point = 49
   Insn 242(l0): point = 52
   Insn 241(l0): point = 54
   Insn 239(l0): point = 57
   Insn 238(l0): point = 59
   Insn 237(l0): point = 61
   Insn 236(l0): point = 63
   Insn 235(l0): point = 65
   Insn 234(l0): point = 67
   Insn 233(l0): point = 69
   Insn 232(l0): point = 71
   Insn 231(l0): point = 73
   Insn 284(l0): point = 76
   Insn 226(l0): point = 78
   Insn 225(l0): point = 80
   Insn 224(l0): point = 82
   Insn 223(l0): point = 84
   Insn 222(l0): point = 86
   Insn 221(l0): point = 88
   Insn 220(l0): point = 90
   Insn 219(l0): point = 92
   Insn 218(l0): point = 94
   Insn 214(l0): point = 97
   Insn 213(l0): point = 99
   Insn 211(l0): point = 102
   Insn 210(l0): point = 104
   Insn 209(l0): point = 106
   Insn 208(l0): point = 108
   Insn 207(l0): point = 110
   Insn 206(l0): point = 112
   Insn 205(l0): point = 114
   Insn 204(l0): point = 116
   Insn 203(l0): point = 118
   Insn 202(l0): point = 120
   Insn 201(l0): point = 122
   Insn 197(l0): point = 125
   Insn 196(l0): point = 127
   Insn 194(l0): point = 130
   Insn 193(l0): point = 132
   Insn 192(l0): point = 134
   Insn 191(l0): point = 136
   Insn 190(l0): point = 138
   Insn 189(l0): point = 140
   Insn 188(l0): point = 142
   Insn 187(l0): point = 144
   Insn 186(l0): point = 146
   Insn 185(l0): point = 148
   Insn 184(l0): point = 150
   Insn 183(l0): point = 152
   Insn 182(l0): point = 154
   Insn 181(l0): point = 156
   Insn 177(l0): point = 159
   Insn 176(l0): point = 161
   Insn 174(l0): point = 164
   Insn 173(l0): point = 166
   Insn 172(l0): point = 168
   Insn 171(l0): point = 170
   Insn 170(l0): point = 172
   Insn 169(l0): point = 174
   Insn 168(l0): point = 176
   Insn 167(l0): point = 178
   Insn 166(l0): point = 180
   Insn 165(l0): point = 182
   Insn 164(l0): point = 184
   Insn 160(l0): point = 187
   Insn 159(l0): point = 189
   Insn 157(l0): point = 192
   Insn 156(l0): point = 194
   Insn 155(l0): point = 196
   Insn 154(l0): point = 198
   Insn 153(l0): point = 200
   Insn 152(l0): point = 202
   Insn 151(l0): point = 204
   Insn 150(l0): point = 206
   Insn 149(l0): point = 208
   Insn 148(l0): point = 210
   Insn 147(l0): point = 212
   Insn 146(l0): point = 214
   Insn 145(l0): point = 216
   Insn 144(l0): point = 218
   Insn 140(l0): point = 221
   Insn 139(l0): point = 223
   Insn 137(l0): point = 226
   Insn 136(l0): point = 228
   Insn 135(l0): point = 230
   Insn 134(l0): point = 232
   Insn 133(l0): point = 234
   Insn 132(l0): point = 236
   Insn 131(l0): point = 238
   Insn 130(l0): point = 240
   Insn 129(l0): point = 242
   Insn 128(l0): point = 244
   Insn 127(l0): point = 246
   Insn 123(l0): point = 249
   Insn 122(l0): point = 251
   Insn 120(l0): point = 254
   Insn 119(l0): point = 256
   Insn 118(l0): point = 258
   Insn 117(l0): point = 260
   Insn 116(l0): point = 262
   Insn 115(l0): point = 264
   Insn 114(l0): point = 266
   Insn 113(l0): point = 268
   Insn 112(l0): point = 270
   Insn 110(l0): point = 273
   Insn 109(l0): point = 275
   Insn 108(l0): point = 277
   Insn 107(l0): point = 279
   Insn 103(l0): point = 282
   Insn 102(l0): point = 284
   Insn 100(l0): point = 287
   Insn 99(l0): point = 289
   Insn 98(l0): point = 291
   Insn 97(l0): point = 293
   Insn 96(l0): point = 295
   Insn 95(l0): point = 297
   Insn 94(l0): point = 299
   Insn 93(l0): point = 301
   Insn 92(l0): point = 303
   Insn 91(l0): point = 305
   Insn 87(l0): point = 308
   Insn 86(l0): point = 310
   Insn 84(l0): point = 313
   Insn 83(l0): point = 315
   Insn 82(l0): point = 317
   Insn 81(l0): point = 319
   Insn 80(l0): point = 321
   Insn 79(l0): point = 323
   Insn 78(l0): point = 325
   Insn 77(l0): point = 327
   Insn 282(l0): point = 330
   Insn 72(l0): point = 332
   Insn 71(l0): point = 334
   Insn 70(l0): point = 336
   Insn 69(l0): point = 338
   Insn 65(l0): point = 341
   Insn 64(l0): point = 343
   Insn 62(l0): point = 346
   Insn 61(l0): point = 348
   Insn 60(l0): point = 350
   Insn 59(l0): point = 352
   Insn 58(l0): point = 354
   Insn 57(l0): point = 356
   Insn 56(l0): point = 358
   Insn 55(l0): point = 360
   Insn 54(l0): point = 362
   Insn 51(l0): point = 365
   Insn 50(l0): point = 367
   Insn 49(l0): point = 369
   Insn 48(l0): point = 371
   Insn 44(l0): point = 374
   Insn 43(l0): point = 376
   Insn 41(l0): point = 379
   Insn 40(l0): point = 381
   Insn 39(l0): point = 383
   Insn 38(l0): point = 385
   Insn 37(l0): point = 387
   Insn 36(l0): point = 389
   Insn 35(l0): point = 391
   Insn 34(l0): point = 393
   Insn 33(l0): point = 395
   Insn 32(l0): point = 397
   Insn 28(l0): point = 400
   Insn 27(l0): point = 402
   Insn 25(l0): point = 405
   Insn 24(l0): point = 407
   Insn 23(l0): point = 409
   Insn 22(l0): point = 411
   Insn 21(l0): point = 413
   Insn 20(l0): point = 415
   Insn 19(l0): point = 417
   Insn 18(l0): point = 419
   Insn 16(l0): point = 422
   Insn 15(l0): point = 424
   Insn 280(l0): point = 427
   Insn 10(l0): point = 429
   Insn 8(l0): point = 432
   Insn 7(l0): point = 434
   Insn 3(l0): point = 436
   Insn 2(l0): point = 438
 a0(r176): [3..4]
 a1(r97): [427..429] [330..332] [76..78] [5..7]
 a2(r204): [10..11]
 a3(r96): [19..37] [10..13]
 a4(r171): [17..31]
 a5(r175): [22..23]
 a6(r174): [24..25]
 a7(r173): [26..27]
 a8(r172): [28..29]
 a9(r110): [32..33]
 a10(r203): [34..35]
 a11(r95): [42..47]
 a12(r202): [44..45]
 a13(r201): [48..49]
 a14(r166): [55..69]
 a15(r170): [60..61]
 a16(r169): [62..63]
 a17(r168): [64..65]
 a18(r167): [66..67]
 a19(r109): [70..71]
 a20(r200): [72..73]
 a21(r199): [83..84]
 a22(r198): [87..88]
 a23(r94): [87..90]
 a24(r93): [91..92]
 a25(r92): [102..120] [91..96]
 a26(r197): [93..94]
 a27(r161): [100..114]
 a28(r165): [105..106]
 a29(r164): [107..108]
 a30(r163): [109..110]
 a31(r162): [111..112]
 a32(r108): [115..116]
 a33(r196): [117..118]
 a34(r195): [121..122]
 a35(r156): [128..142]
 a36(r160): [133..134]
 a37(r159): [135..136]
 a38(r158): [137..138]
 a39(r157): [139..140]
 a40(r107): [143..144]
 a41(r194): [145..146]
 a42(r193): [149..150]
 a43(r91): [149..152]
 a44(r90): [153..154]
 a45(r89): [164..182] [153..158]
 a46(r192): [155..156]
 a47(r151): [162..176]
 a48(r155): [167..168]
 a49(r154): [169..170]
 a50(r153): [171..172]
 a51(r152): [173..174]
 a52(r106): [177..178]
 a53(r191): [179..180]
 a54(r190): [183..184]
 a55(r146): [190..204]
 a56(r150): [195..196]
 a57(r149): [197..198]
 a58(r148): [199..200]
 a59(r147): [201..202]
 a60(r105): [205..206]
 a61(r189): [207..208]
 a62(r188): [211..212]
 a63(r88): [211..214]
 a64(r87): [215..216]
 a65(r86): [226..244] [215..220]
 a66(r187): [217..218]
 a67(r141): [224..238]
 a68(r145): [229..230]
 a69(r144): [231..232]
 a70(r143): [233..234]
 a71(r142): [235..236]
 a72(r104): [239..240]
 a73(r186): [241..242]
 a74(r185): [245..246]
 a75(r136): [252..266]
 a76(r140): [257..258]
 a77(r139): [259..260]
 a78(r138): [261..262]
 a79(r137): [263..264]
 a80(r103): [267..268]
 a81(r184): [269..270]
 a82(r85): [276..277]
 a83(r84): [287..303] [276..281]
 a84(r183): [278..279]
 a85(r131): [285..299]
 a86(r135): [290..291]
 a87(r134): [292..293]
 a88(r133): [294..295]
 a89(r132): [296..297]
 a90(r102): [300..301]
 a91(r182): [304..305]
 a92(r126): [311..325]
 a93(r130): [316..317]
 a94(r129): [318..319]
 a95(r128): [320..321]
 a96(r127): [322..323]
 a97(r101): [326..327]
 a98(r180): [335..338]
 a99(r181): [335..336]
 a100(r121): [344..358]
 a101(r125): [349..350]
 a102(r124): [351..352]
 a103(r123): [353..354]
 a104(r122): [355..356]
 a105(r100): [359..360]
 a106(r179): [361..362]
 a107(r83): [368..369]
 a108(r82): [379..395] [368..373]
 a109(r178): [370..371]
 a110(r116): [377..391]
 a111(r120): [382..383]
 a112(r119): [384..385]
 a113(r118): [386..387]
 a114(r117): [388..389]
 a115(r99): [392..393]
 a116(r177): [396..397]
 a117(r111): [403..417]
 a118(r115): [408..409]
 a119(r114): [410..411]
 a120(r113): [412..413]
 a121(r112): [414..415]
 a122(r98): [418..419]
Compressing live ranges: from 441 to 204 - 46%
Ranges after the compression:
 a0(r176): [0..1]
 a1(r97): [202..203] [160..161] [34..35] [2..3]
 a2(r204): [4..5]
 a3(r96): [4..17]
 a4(r171): [6..13]
 a5(r175): [6..7]
 a6(r174): [8..9]
 a7(r173): [10..11]
 a8(r172): [12..13]
 a9(r110): [14..15]
 a10(r203): [16..17]
 a11(r95): [18..19]
 a12(r202): [18..19]
 a13(r201): [20..21]
 a14(r166): [22..29]
 a15(r170): [22..23]
 a16(r169): [24..25]
 a17(r168): [26..27]
 a18(r167): [28..29]
 a19(r109): [30..31]
 a20(r200): [32..33]
 a21(r199): [36..37]
 a22(r198): [38..39]
 a23(r94): [38..39]
 a24(r93): [40..41]
 a25(r92): [40..55]
 a26(r197): [42..43]
 a27(r161): [44..51]
 a28(r165): [44..45]
 a29(r164): [46..47]
 a30(r163): [48..49]
 a31(r162): [50..51]
 a32(r108): [52..53]
 a33(r196): [54..55]
 a34(r195): [56..57]
 a35(r156): [58..65]
 a36(r160): [58..59]
 a37(r159): [60..61]
 a38(r158): [62..63]
 a39(r157): [64..65]
 a40(r107): [66..67]
 a41(r194): [68..69]
 a42(r193): [70..71]
 a43(r91): [70..71]
 a44(r90): [72..73]
 a45(r89): [72..87]
 a46(r192): [74..75]
 a47(r151): [76..83]
 a48(r155): [76..77]
 a49(r154): [78..79]
 a50(r153): [80..81]
 a51(r152): [82..83]
 a52(r106): [84..85]
 a53(r191): [86..87]
 a54(r190): [88..89]
 a55(r146): [90..97]
 a56(r150): [90..91]
 a57(r149): [92..93]
 a58(r148): [94..95]
 a59(r147): [96..97]
 a60(r105): [98..99]
 a61(r189): [100..101]
 a62(r188): [102..103]
 a63(r88): [102..103]
 a64(r87): [104..105]
 a65(r86): [104..119]
 a66(r187): [106..107]
 a67(r141): [108..115]
 a68(r145): [108..109]
 a69(r144): [110..111]
 a70(r143): [112..113]
 a71(r142): [114..115]
 a72(r104): [116..117]
 a73(r186): [118..119]
 a74(r185): [120..121]
 a75(r136): [122..129]
 a76(r140): [122..123]
 a77(r139): [124..125]
 a78(r138): [126..127]
 a79(r137): [128..129]
 a80(r103): [130..131]
 a81(r184): [132..133]
 a82(r85): [134..135]
 a83(r84): [134..147]
 a84(r183): [136..137]
 a85(r131): [138..145]
 a86(r135): [138..139]
 a87(r134): [140..141]
 a88(r133): [142..143]
 a89(r132): [144..145]
 a90(r102): [146..147]
 a91(r182): [148..149]
 a92(r126): [150..157]
 a93(r130): [150..151]
 a94(r129): [152..153]
 a95(r128): [154..155]
 a96(r127): [156..157]
 a97(r101): [158..159]
 a98(r180): [162..163]
 a99(r181): [162..163]
 a100(r121): [164..171]
 a101(r125): [164..165]
 a102(r124): [166..167]
 a103(r123): [168..169]
 a104(r122): [170..171]
 a105(r100): [172..173]
 a106(r179): [174..175]
 a107(r83): [176..177]
 a108(r82): [176..189]
 a109(r178): [178..179]
 a110(r116): [180..187]
 a111(r120): [180..181]
 a112(r119): [182..183]
 a113(r118): [184..185]
 a114(r117): [186..187]
 a115(r99): [188..189]
 a116(r177): [190..191]
 a117(r111): [192..199]
 a118(r115): [192..193]
 a119(r114): [194..195]
 a120(r113): [196..197]
 a121(r112): [198..199]
 a122(r98): [200..201]
  pref0:a12(r202)<-hr4@1500
  pref1:a21(r199)<-hr5@1500
  pref2:a0(r176)<-hr0@1500
  pref3:a4(r171)<-hr5@1500
  pref4:a14(r166)<-hr5@1500
  pref5:a27(r161)<-hr5@1500
  pref6:a35(r156)<-hr5@1500
  pref7:a47(r151)<-hr5@1500
  pref8:a55(r146)<-hr5@1500
  pref9:a67(r141)<-hr5@1500
  pref10:a75(r136)<-hr5@1500
  pref11:a85(r131)<-hr5@1500
  pref12:a92(r126)<-hr5@1500
  pref13:a100(r121)<-hr5@1500
  pref14:a110(r116)<-hr5@1500
  pref15:a117(r111)<-hr5@1500
  pref16:a3(r96)<-hr0@1500
  pref17:a11(r95)<-hr5@1500
  regions=1, blocks=37, points=204
    allocnos=123 (big 0), copies=0, conflicts=0, ranges=126
Disposition:
  108:r82  l0     2  107:r83  l0     0   83:r84  l0     2   82:r85  l0     0
   65:r86  l0     2   64:r87  l0     0   63:r88  l0     1   45:r89  l0     2
   44:r90  l0     0   43:r91  l0     1   25:r92  l0     2   24:r93  l0     0
   23:r94  l0     1   11:r95  l0     0    3:r96  l0     0    1:r97  l0     0
  122:r98  l0     0  115:r99  l0     0  105:r100 l0     0   97:r101 l0     0
   90:r102 l0     0   80:r103 l0     0   72:r104 l0     0   60:r105 l0     0
   52:r106 l0     0   40:r107 l0     0   32:r108 l0     0   19:r109 l0     0
    9:r110 l0     1  117:r111 l0     0  121:r112 l0     1  120:r113 l0     1
  119:r114 l0     1  118:r115 l0     1  110:r116 l0     0  114:r117 l0     1
  113:r118 l0     1  112:r119 l0     1  111:r120 l0     1  100:r121 l0     0
  104:r122 l0     1  103:r123 l0     1  102:r124 l0     1  101:r125 l0     1
   92:r126 l0     0   96:r127 l0     1   95:r128 l0     1   94:r129 l0     1
   93:r130 l0     1   85:r131 l0     0   89:r132 l0     1   88:r133 l0     1
   87:r134 l0     1   86:r135 l0     1   75:r136 l0     0   79:r137 l0     1
   78:r138 l0     1   77:r139 l0     1   76:r140 l0     1   67:r141 l0     0
   71:r142 l0     1   70:r143 l0     1   69:r144 l0     1   68:r145 l0     1
   55:r146 l0     0   59:r147 l0     1   58:r148 l0     1   57:r149 l0     1
   56:r150 l0     1   47:r151 l0     0   51:r152 l0     1   50:r153 l0     1
   49:r154 l0     1   48:r155 l0     1   35:r156 l0     0   39:r157 l0     1
   38:r158 l0     1   37:r159 l0     1   36:r160 l0     1   27:r161 l0     0
   31:r162 l0     1   30:r163 l0     1   29:r164 l0     1   28:r165 l0     1
   14:r166 l0     0   18:r167 l0     1   17:r168 l0     1   16:r169 l0     1
   15:r170 l0     1    4:r171 l0     1    8:r172 l0     2    7:r173 l0     2
    6:r174 l0     2    5:r175 l0     2    0:r176 l0     0  116:r177 l0     0
  109:r178 l0     0  106:r179 l0     0   98:r180 l0     0   99:r181 l0     1
   91:r182 l0     0   84:r183 l0     0   81:r184 l0     0   74:r185 l0     0
   73:r186 l0     0   66:r187 l0     0   62:r188 l0     0   61:r189 l0     0
   54:r190 l0     0   53:r191 l0     0   46:r192 l0     0   42:r193 l0     0
   41:r194 l0     0   34:r195 l0     0   33:r196 l0     0   26:r197 l0     0
   22:r198 l0     0   21:r199 l0     0   20:r200 l0     0   13:r201 l0     0
   12:r202 l0     1   10:r203 l0     1    2:r204 l0     1
+++Costs: overall 34000, reg 34000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


addRec

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags]
;;  ref usage 	r0={17d,3u} r1={16d} r2={16d} r4={17d,2u} r5={31d,16u} r6={1d,36u} r7={1d,51u} r8={15d} r9={15d} r10={15d} r11={15d} r12={15d} r13={15d} r14={15d} r15={15d} r16={1d,35u} r17={70d,17u} r18={15d} r19={1d,76u,9e} r20={16d} r21={16d} r22={16d} r23={16d} r24={16d} r25={16d} r26={16d} r27={16d} r28={15d} r29={15d} r30={15d} r31={15d} r32={15d} r33={15d} r34={15d} r35={15d} r36={16d} r37={16d} r38={15d} r39={15d} r44={15d} r45={15d} r46={15d} r47={15d} r48={15d} r49={15d} r50={15d} r51={15d} r52={15d} r53={15d} r54={15d} r55={15d} r56={15d} r57={15d} r58={15d} r59={15d} r60={15d} r61={15d} r62={15d} r63={15d} r64={15d} r65={15d} r66={15d} r67={15d} r68={15d} r69={15d} r70={15d} r71={15d} r72={15d} r73={15d} r74={15d} r75={15d} r82={1d,1u} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} r96={1d,1u} r97={4d,1u} r98={1d,1u} r99={1d,1u} r100={1d,1u} r101={1d,1u} r102={1d,1u} r103={1d,1u} r104={1d,1u} r105={1d,1u} r106={1d,1u} r107={1d,1u} r108={1d,1u} r109={1d,1u} r110={1d,1u} r111={1d,2u} r112={1d,1u} r113={1d,1u} r114={1d,1u} r115={1d,1u} r116={1d,2u} r117={1d,1u} r118={1d,1u} r119={1d,1u} r120={1d,1u} r121={1d,2u} r122={1d,1u} r123={1d,1u} r124={1d,1u} r125={1d,1u} r126={1d,2u} r127={1d,1u} r128={1d,1u} r129={1d,1u} r130={1d,1u} r131={1d,2u} r132={1d,1u} r133={1d,1u} r134={1d,1u} r135={1d,1u} r136={1d,2u} r137={1d,1u} r138={1d,1u} r139={1d,1u} r140={1d,1u} r141={1d,2u} r142={1d,1u} r143={1d,1u} r144={1d,1u} r145={1d,1u} r146={1d,2u} r147={1d,1u} r148={1d,1u} r149={1d,1u} r150={1d,1u} r151={1d,2u} r152={1d,1u} r153={1d,1u} r154={1d,1u} r155={1d,1u} r156={1d,2u} r157={1d,1u} r158={1d,1u} r159={1d,1u} r160={1d,1u} r161={1d,2u} r162={1d,1u} r163={1d,1u} r164={1d,1u} r165={1d,1u} r166={1d,2u} r167={1d,1u} r168={1d,1u} r169={1d,1u} r170={1d,1u} r171={1d,2u} r172={1d,1u} r173={1d,1u} r174={1d,1u} r175={1d,1u} r176={1d,1u} r177={1d,1u} r178={1d,1u} r179={1d,1u} r180={1d,1u} r181={1d,1u} r182={1d,1u} r183={1d,1u} r184={1d,1u} r185={1d,1u} r186={1d,1u} r187={1d,1u} r188={1d,1u} r189={1d,1u} r190={1d,1u} r191={1d,1u} r192={1d,1u} r193={1d,1u} r194={1d,1u} r195={1d,1u} r196={1d,1u} r197={1d,1u} r198={1d,1u} r199={1d,1u} r200={1d,1u} r201={1d,1u} r202={1d,1u} r203={1d,1u} r204={1d,1u} 
;;    total ref usage 1603{1222d,372u,9e} in 203{188 regular + 15 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 17 [flags]
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [6 years+0 S8 A64])
        (reg:DI 5 di [ years ])) "main.c":63:43 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ years ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -16 [0xfffffffffffffff0])) [6 ans+0 S8 A64])
        (reg:DI 4 si [ ans ])) "main.c":63:43 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ ans ])
        (nil)))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                    (const_int -16 [0xfffffffffffffff0])) [6 ans+0 S8 A64])
            (const_int 0 [0]))) "main.c":64:7 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 8 7 9 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 13)
            (pc))) "main.c":64:7 659 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 13)
;;  succ:       3 (FALLTHRU)
;;              4
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 4, flags: (RTL)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 97
(note 9 8 10 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 10 9 280 3 (set (reg/f:DI 97 [ _16 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [6 years+0 S8 A64])) "main.c":65:16 66 {*movdi_internal}
     (nil))
(jump_insn 280 10 281 3 (set (pc)
        (label_ref 271)) "main.c":65:16 660 {jump}
     (nil)
 -> 271)
;;  succ:       36 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 97

(barrier 281 280 13)
;; basic block 4, loop depth 0, maybe hot
;;  prev block 3, next block 5, flags: (RTL)
;;  pred:       2
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 17 [flags]
(code_label 13 281 14 4 32 (nil) [1 uses])
(note 14 13 15 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 15 14 16 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                    (const_int -8 [0xfffffffffffffff8])) [6 years+0 S8 A64])
            (const_int 0 [0]))) "main.c":67:8 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 16 15 17 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 52)
            (pc))) "main.c":67:8 659 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 52)
;;  succ:       10
;;              5 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 5, loop depth 0, maybe hot
;;  prev block 4, next block 6, flags: (RTL)
;;  pred:       4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 17 [flags] 98 111 112 113 114 115
(note 17 16 18 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 18 17 19 5 (set (reg/f:DI 98 [ _32 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [6 years+0 S8 A64])) "main.c":67:32 66 {*movdi_internal}
     (nil))
(insn 19 18 20 5 (set (reg:DI 111 [ _59 ])
        (reg/f:DI 98 [ _32 ])) "main.c":67:32 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 98 [ _32 ])
        (nil)))
(insn 20 19 21 5 (parallel [
            (set (reg:DI 112 [ _60 ])
                (lshiftrt:DI (reg:DI 111 [ _59 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":67:32 566 {*lshrdi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 21 20 22 5 (parallel [
            (set (reg:DI 113 [ _61 ])
                (plus:DI (reg:DI 112 [ _60 ])
                    (const_int 2147450880 [0x7fff8000])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":67:32 191 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 112 [ _60 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 22 21 23 5 (set (reg/f:DI 114 [ _62 ])
        (reg:DI 113 [ _61 ])) "main.c":67:32 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 113 [ _61 ])
        (nil)))
(insn 23 22 24 5 (set (reg:QI 115 [ _63 ])
        (mem:QI (reg/f:DI 114 [ _62 ]) [7 *_62+0 S1 A8])) "main.c":67:32 69 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:DI 114 [ _62 ])
        (nil)))
(insn 24 23 25 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 115 [ _63 ])
            (const_int 0 [0]))) "main.c":67:32 5 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 115 [ _63 ])
        (nil)))
(jump_insn 25 24 26 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 30)
            (pc))) "main.c":67:32 659 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 30)
;;  succ:       7 [100.0% (guessed)] 
;;              6 [0.0% (guessed)]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 111

;; basic block 6, loop depth 0, maybe hot
;;  prev block 5, next block 7, flags: (RTL)
;;  pred:       5 [0.0% (guessed)]  (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 111
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 111
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
(note 26 25 27 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 27 26 28 6 (set (reg:DI 5 di)
        (reg:DI 111 [ _59 ])) "main.c":67:32 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 111 [ _59 ])
        (nil)))
(call_insn 28 27 29 6 (call (mem:QI (symbol_ref:DI ("__asan_report_load8") [flags 0x41]  <function_decl 0x7ffa22daa900 __builtin___asan_report_load8>) [0 __builtin___asan_report_load8 S1 A8])
        (const_int 0 [0])) "main.c":67:32 666 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 19 [frame]

(barrier 29 28 30)
;; basic block 7, loop depth 0, maybe hot
;;  prev block 6, next block 8, flags: (RTL)
;;  pred:       5 [100.0% (guessed)] 
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 17 [flags] 82 99 116 117 118 119 120 177
(code_label 30 29 31 7 35 (nil) [1 uses])
(note 31 30 32 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 32 31 33 7 (set (reg/f:DI 177)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [6 years+0 S8 A64])) "main.c":67:32 66 {*movdi_internal}
     (nil))
(insn 33 32 34 7 (set (reg:DI 82 [ _1 ])
        (mem:DI (reg/f:DI 177) [2 years_19(D)->year+0 S8 A64])) "main.c":67:32 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 177)
        (nil)))
(insn 34 33 35 7 (set (reg/f:DI 99 [ _33 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -16 [0xfffffffffffffff0])) [6 ans+0 S8 A64])) "main.c":67:44 66 {*movdi_internal}
     (nil))
(insn 35 34 36 7 (set (reg:DI 116 [ _64 ])
        (reg/f:DI 99 [ _33 ])) "main.c":67:44 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 99 [ _33 ])
        (nil)))
(insn 36 35 37 7 (parallel [
            (set (reg:DI 117 [ _65 ])
                (lshiftrt:DI (reg:DI 116 [ _64 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":67:44 566 {*lshrdi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 37 36 38 7 (parallel [
            (set (reg:DI 118 [ _66 ])
                (plus:DI (reg:DI 117 [ _65 ])
                    (const_int 2147450880 [0x7fff8000])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":67:44 191 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 117 [ _65 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 38 37 39 7 (set (reg/f:DI 119 [ _67 ])
        (reg:DI 118 [ _66 ])) "main.c":67:44 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 118 [ _66 ])
        (nil)))
(insn 39 38 40 7 (set (reg:QI 120 [ _68 ])
        (mem:QI (reg/f:DI 119 [ _67 ]) [7 *_67+0 S1 A8])) "main.c":67:44 69 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:DI 119 [ _67 ])
        (nil)))
(insn 40 39 41 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 120 [ _68 ])
            (const_int 0 [0]))) "main.c":67:44 5 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 120 [ _68 ])
        (nil)))
(jump_insn 41 40 42 7 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 46)
            (pc))) "main.c":67:44 659 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 46)
;;  succ:       9 [100.0% (guessed)] 
;;              8 [0.0% (guessed)]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 82 116

;; basic block 8, loop depth 0, maybe hot
;;  prev block 7, next block 9, flags: (RTL)
;;  pred:       7 [0.0% (guessed)]  (FALLTHRU)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 116
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 116
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
(note 42 41 43 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 43 42 44 8 (set (reg:DI 5 di)
        (reg:DI 116 [ _64 ])) "main.c":67:44 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 116 [ _64 ])
        (nil)))
(call_insn 44 43 45 8 (call (mem:QI (symbol_ref:DI ("__asan_report_load8") [flags 0x41]  <function_decl 0x7ffa22daa900 __builtin___asan_report_load8>) [0 __builtin___asan_report_load8 S1 A8])
        (const_int 0 [0])) "main.c":67:44 666 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 19 [frame]

(barrier 45 44 46)
;; basic block 9, loop depth 0, maybe hot
;;  prev block 8, next block 10, flags: (RTL)
;;  pred:       7 [100.0% (guessed)] 
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 82
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 82
;; lr  def 	 17 [flags] 83 178
(code_label 46 45 47 9 36 (nil) [1 uses])
(note 47 46 48 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 48 47 49 9 (set (reg/f:DI 178)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -16 [0xfffffffffffffff0])) [6 ans+0 S8 A64])) "main.c":67:44 66 {*movdi_internal}
     (nil))
(insn 49 48 50 9 (set (reg:DI 83 [ _2 ])
        (mem:DI (reg/f:DI 178) [2 ans_18(D)->year+0 S8 A64])) "main.c":67:44 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 178)
        (nil)))
(insn 50 49 51 9 (set (reg:CC 17 flags)
        (compare:CC (reg:DI 82 [ _1 ])
            (reg:DI 83 [ _2 ]))) "main.c":67:24 12 {*cmpdi_1}
     (expr_list:REG_DEAD (reg:DI 83 [ _2 ])
        (expr_list:REG_DEAD (reg:DI 82 [ _1 ])
            (nil))))
(jump_insn 51 50 52 9 (set (pc)
        (if_then_else (geu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 75)
            (pc))) "main.c":67:24 659 {*jcc}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (nil))
 -> 75)
;;  succ:       10 (FALLTHRU)
;;              13
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 10, loop depth 0, maybe hot
;;  prev block 9, next block 11, flags: (RTL)
;;  pred:       4
;;              9 (FALLTHRU)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 17 [flags] 100 121 122 123 124 125 179
(code_label 52 51 53 10 34 (nil) [1 uses])
(note 53 52 54 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 54 53 55 10 (set (reg/f:DI 179)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -16 [0xfffffffffffffff0])) [6 ans+0 S8 A64])) "main.c":68:19 66 {*movdi_internal}
     (nil))
(insn 55 54 56 10 (parallel [
            (set (reg/f:DI 100 [ _34 ])
                (plus:DI (reg/f:DI 179)
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":68:19 191 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 179)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                            (const_int -16 [0xfffffffffffffff0])) [6 ans+0 S8 A64])
                    (const_int 32 [0x20]))
                (nil)))))
(insn 56 55 57 10 (set (reg:DI 121 [ _69 ])
        (reg/f:DI 100 [ _34 ])) "main.c":68:19 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 100 [ _34 ])
        (nil)))
(insn 57 56 58 10 (parallel [
            (set (reg:DI 122 [ _70 ])
                (lshiftrt:DI (reg:DI 121 [ _69 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":68:19 566 {*lshrdi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 58 57 59 10 (parallel [
            (set (reg:DI 123 [ _71 ])
                (plus:DI (reg:DI 122 [ _70 ])
                    (const_int 2147450880 [0x7fff8000])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":68:19 191 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 122 [ _70 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 59 58 60 10 (set (reg/f:DI 124 [ _72 ])
        (reg:DI 123 [ _71 ])) "main.c":68:19 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 123 [ _71 ])
        (nil)))
(insn 60 59 61 10 (set (reg:QI 125 [ _73 ])
        (mem:QI (reg/f:DI 124 [ _72 ]) [7 *_72+0 S1 A8])) "main.c":68:19 69 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:DI 124 [ _72 ])
        (nil)))
(insn 61 60 62 10 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 125 [ _73 ])
            (const_int 0 [0]))) "main.c":68:19 5 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 125 [ _73 ])
        (nil)))
(jump_insn 62 61 63 10 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 67)
            (pc))) "main.c":68:19 659 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 67)
;;  succ:       12 [100.0% (guessed)] 
;;              11 [0.0% (guessed)]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 121

;; basic block 11, loop depth 0, maybe hot
;;  prev block 10, next block 12, flags: (RTL)
;;  pred:       10 [0.0% (guessed)]  (FALLTHRU)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 121
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 121
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
(note 63 62 64 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 64 63 65 11 (set (reg:DI 5 di)
        (reg:DI 121 [ _69 ])) "main.c":68:19 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 121 [ _69 ])
        (nil)))
(call_insn 65 64 66 11 (call (mem:QI (symbol_ref:DI ("__asan_report_store8") [flags 0x41]  <function_decl 0x7ffa22daaf00 __builtin___asan_report_store8>) [0 __builtin___asan_report_store8 S1 A8])
        (const_int 0 [0])) "main.c":68:19 666 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 19 [frame]

(barrier 66 65 67)
;; basic block 12, loop depth 0, maybe hot
;;  prev block 11, next block 13, flags: (RTL)
;;  pred:       10 [100.0% (guessed)] 
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 97 180 181
(code_label 67 66 68 12 38 (nil) [1 uses])
(note 68 67 69 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 69 68 70 12 (set (reg/f:DI 180)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -16 [0xfffffffffffffff0])) [6 ans+0 S8 A64])) "main.c":68:19 66 {*movdi_internal}
     (nil))
(insn 70 69 71 12 (set (reg/f:DI 181)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [6 years+0 S8 A64])) "main.c":68:19 66 {*movdi_internal}
     (nil))
(insn 71 70 72 12 (set (mem/f:DI (plus:DI (reg/f:DI 180)
                (const_int 32 [0x20])) [6 ans_18(D)->tail+0 S8 A64])
        (reg/f:DI 181)) "main.c":68:19 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 181)
        (expr_list:REG_DEAD (reg/f:DI 180)
            (nil))))
(insn 72 71 282 12 (set (reg/f:DI 97 [ _16 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -16 [0xfffffffffffffff0])) [6 ans+0 S8 A64])) "main.c":69:16 66 {*movdi_internal}
     (nil))
(jump_insn 282 72 283 12 (set (pc)
        (label_ref 271)) "main.c":69:16 660 {jump}
     (nil)
 -> 271)
;;  succ:       36 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 97

(barrier 283 282 75)
;; basic block 13, loop depth 0, maybe hot
;;  prev block 12, next block 14, flags: (RTL)
;;  pred:       9
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 17 [flags] 101 126 127 128 129 130
(code_label 75 283 76 13 37 (nil) [1 uses])
(note 76 75 77 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 77 76 78 13 (set (reg/f:DI 101 [ _35 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [6 years+0 S8 A64])) "main.c":71:13 66 {*movdi_internal}
     (nil))
(insn 78 77 79 13 (set (reg:DI 126 [ _74 ])
        (reg/f:DI 101 [ _35 ])) "main.c":71:13 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 101 [ _35 ])
        (nil)))
(insn 79 78 80 13 (parallel [
            (set (reg:DI 127 [ _75 ])
                (lshiftrt:DI (reg:DI 126 [ _74 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":71:13 566 {*lshrdi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 80 79 81 13 (parallel [
            (set (reg:DI 128 [ _76 ])
                (plus:DI (reg:DI 127 [ _75 ])
                    (const_int 2147450880 [0x7fff8000])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":71:13 191 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 127 [ _75 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 81 80 82 13 (set (reg/f:DI 129 [ _77 ])
        (reg:DI 128 [ _76 ])) "main.c":71:13 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 128 [ _76 ])
        (nil)))
(insn 82 81 83 13 (set (reg:QI 130 [ _78 ])
        (mem:QI (reg/f:DI 129 [ _77 ]) [7 *_77+0 S1 A8])) "main.c":71:13 69 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:DI 129 [ _77 ])
        (nil)))
(insn 83 82 84 13 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 130 [ _78 ])
            (const_int 0 [0]))) "main.c":71:13 5 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 130 [ _78 ])
        (nil)))
(jump_insn 84 83 85 13 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 89)
            (pc))) "main.c":71:13 659 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 89)
;;  succ:       15 [100.0% (guessed)] 
;;              14 [0.0% (guessed)]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 126

;; basic block 14, loop depth 0, maybe hot
;;  prev block 13, next block 15, flags: (RTL)
;;  pred:       13 [0.0% (guessed)]  (FALLTHRU)
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 126
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 126
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
(note 85 84 86 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 86 85 87 14 (set (reg:DI 5 di)
        (reg:DI 126 [ _74 ])) "main.c":71:13 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 126 [ _74 ])
        (nil)))
(call_insn 87 86 88 14 (call (mem:QI (symbol_ref:DI ("__asan_report_load8") [flags 0x41]  <function_decl 0x7ffa22daa900 __builtin___asan_report_load8>) [0 __builtin___asan_report_load8 S1 A8])
        (const_int 0 [0])) "main.c":71:13 666 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 19 [frame]

(barrier 88 87 89)
;; basic block 15, loop depth 0, maybe hot
;;  prev block 14, next block 16, flags: (RTL)
;;  pred:       13 [100.0% (guessed)] 
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 17 [flags] 84 102 131 132 133 134 135 182
(code_label 89 88 90 15 39 (nil) [1 uses])
(note 90 89 91 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 91 90 92 15 (set (reg/f:DI 182)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [6 years+0 S8 A64])) "main.c":71:13 66 {*movdi_internal}
     (nil))
(insn 92 91 93 15 (set (reg:DI 84 [ _3 ])
        (mem:DI (reg/f:DI 182) [2 years_19(D)->year+0 S8 A64])) "main.c":71:13 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 182)
        (nil)))
(insn 93 92 94 15 (set (reg/f:DI 102 [ _36 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -16 [0xfffffffffffffff0])) [6 ans+0 S8 A64])) "main.c":71:26 66 {*movdi_internal}
     (nil))
(insn 94 93 95 15 (set (reg:DI 131 [ _79 ])
        (reg/f:DI 102 [ _36 ])) "main.c":71:26 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 102 [ _36 ])
        (nil)))
(insn 95 94 96 15 (parallel [
            (set (reg:DI 132 [ _80 ])
                (lshiftrt:DI (reg:DI 131 [ _79 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":71:26 566 {*lshrdi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 96 95 97 15 (parallel [
            (set (reg:DI 133 [ _81 ])
                (plus:DI (reg:DI 132 [ _80 ])
                    (const_int 2147450880 [0x7fff8000])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":71:26 191 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 132 [ _80 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 97 96 98 15 (set (reg/f:DI 134 [ _82 ])
        (reg:DI 133 [ _81 ])) "main.c":71:26 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 133 [ _81 ])
        (nil)))
(insn 98 97 99 15 (set (reg:QI 135 [ _83 ])
        (mem:QI (reg/f:DI 134 [ _82 ]) [7 *_82+0 S1 A8])) "main.c":71:26 69 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:DI 134 [ _82 ])
        (nil)))
(insn 99 98 100 15 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 135 [ _83 ])
            (const_int 0 [0]))) "main.c":71:26 5 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 135 [ _83 ])
        (nil)))
(jump_insn 100 99 101 15 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 105)
            (pc))) "main.c":71:26 659 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 105)
;;  succ:       17 [100.0% (guessed)] 
;;              16 [0.0% (guessed)]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 84 131

;; basic block 16, loop depth 0, maybe hot
;;  prev block 15, next block 17, flags: (RTL)
;;  pred:       15 [0.0% (guessed)]  (FALLTHRU)
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 131
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 131
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
(note 101 100 102 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 102 101 103 16 (set (reg:DI 5 di)
        (reg:DI 131 [ _79 ])) "main.c":71:26 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 131 [ _79 ])
        (nil)))
(call_insn 103 102 104 16 (call (mem:QI (symbol_ref:DI ("__asan_report_load8") [flags 0x41]  <function_decl 0x7ffa22daa900 __builtin___asan_report_load8>) [0 __builtin___asan_report_load8 S1 A8])
        (const_int 0 [0])) "main.c":71:26 666 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 19 [frame]

(barrier 104 103 105)
;; basic block 17, loop depth 0, maybe hot
;;  prev block 16, next block 18, flags: (RTL)
;;  pred:       15 [100.0% (guessed)] 
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 84
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 84
;; lr  def 	 17 [flags] 85 183
(code_label 105 104 106 17 40 (nil) [1 uses])
(note 106 105 107 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 107 106 108 17 (set (reg/f:DI 183)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -16 [0xfffffffffffffff0])) [6 ans+0 S8 A64])) "main.c":71:26 66 {*movdi_internal}
     (nil))
(insn 108 107 109 17 (set (reg:DI 85 [ _4 ])
        (mem:DI (reg/f:DI 183) [2 ans_18(D)->year+0 S8 A64])) "main.c":71:26 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 183)
        (nil)))
(insn 109 108 110 17 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 84 [ _3 ])
            (reg:DI 85 [ _4 ]))) "main.c":71:7 12 {*cmpdi_1}
     (expr_list:REG_DEAD (reg:DI 85 [ _4 ])
        (expr_list:REG_DEAD (reg:DI 84 [ _3 ])
            (nil))))
(jump_insn 110 109 111 17 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 229)
            (pc))) "main.c":71:7 659 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 229)
;;  succ:       18 (FALLTHRU)
;;              31
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 18, loop depth 0, maybe hot
;;  prev block 17, next block 19, flags: (RTL)
;;  pred:       17 (FALLTHRU)
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 17 [flags] 103 136 137 138 139 140 184
(note 111 110 112 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 112 111 113 18 (set (reg/f:DI 184)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [6 years+0 S8 A64])) "main.c":72:22 66 {*movdi_internal}
     (nil))
(insn 113 112 114 18 (parallel [
            (set (reg/f:DI 103 [ _37 ])
                (plus:DI (reg/f:DI 184)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":72:22 191 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 184)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                            (const_int -8 [0xfffffffffffffff8])) [6 years+0 S8 A64])
                    (const_int 8 [0x8]))
                (nil)))))
(insn 114 113 115 18 (set (reg:DI 136 [ _84 ])
        (reg/f:DI 103 [ _37 ])) "main.c":72:22 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 103 [ _37 ])
        (nil)))
(insn 115 114 116 18 (parallel [
            (set (reg:DI 137 [ _85 ])
                (lshiftrt:DI (reg:DI 136 [ _84 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":72:22 566 {*lshrdi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 116 115 117 18 (parallel [
            (set (reg:DI 138 [ _86 ])
                (plus:DI (reg:DI 137 [ _85 ])
                    (const_int 2147450880 [0x7fff8000])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":72:22 191 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 137 [ _85 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 117 116 118 18 (set (reg/f:DI 139 [ _87 ])
        (reg:DI 138 [ _86 ])) "main.c":72:22 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 138 [ _86 ])
        (nil)))
(insn 118 117 119 18 (set (reg:QI 140 [ _88 ])
        (mem:QI (reg/f:DI 139 [ _87 ]) [7 *_87+0 S1 A8])) "main.c":72:22 69 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:DI 139 [ _87 ])
        (nil)))
(insn 119 118 120 18 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 140 [ _88 ])
            (const_int 0 [0]))) "main.c":72:22 5 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 140 [ _88 ])
        (nil)))
(jump_insn 120 119 121 18 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 125)
            (pc))) "main.c":72:22 659 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 125)
;;  succ:       20 [100.0% (guessed)] 
;;              19 [0.0% (guessed)]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 136

;; basic block 19, loop depth 0, maybe hot
;;  prev block 18, next block 20, flags: (RTL)
;;  pred:       18 [0.0% (guessed)]  (FALLTHRU)
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 136
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 136
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
(note 121 120 122 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 122 121 123 19 (set (reg:DI 5 di)
        (reg:DI 136 [ _84 ])) "main.c":72:22 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 136 [ _84 ])
        (nil)))
(call_insn 123 122 124 19 (call (mem:QI (symbol_ref:DI ("__asan_report_load8") [flags 0x41]  <function_decl 0x7ffa22daa900 __builtin___asan_report_load8>) [0 __builtin___asan_report_load8 S1 A8])
        (const_int 0 [0])) "main.c":72:22 666 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 19 [frame]

(barrier 124 123 125)
;; basic block 20, loop depth 0, maybe hot
;;  prev block 19, next block 21, flags: (RTL)
;;  pred:       18 [100.0% (guessed)] 
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 17 [flags] 86 104 141 142 143 144 145 185 186
(code_label 125 124 126 20 42 (nil) [1 uses])
(note 126 125 127 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 127 126 128 20 (set (reg/f:DI 185)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [6 years+0 S8 A64])) "main.c":72:22 66 {*movdi_internal}
     (nil))
(insn 128 127 129 20 (set (reg:DI 86 [ _5 ])
        (mem:DI (plus:DI (reg/f:DI 185)
                (const_int 8 [0x8])) [2 years_19(D)->total+0 S8 A64])) "main.c":72:22 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 185)
        (nil)))
(insn 129 128 130 20 (set (reg/f:DI 186)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -16 [0xfffffffffffffff0])) [6 ans+0 S8 A64])) "main.c":72:28 66 {*movdi_internal}
     (nil))
(insn 130 129 131 20 (parallel [
            (set (reg/f:DI 104 [ _38 ])
                (plus:DI (reg/f:DI 186)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":72:28 191 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 186)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                            (const_int -16 [0xfffffffffffffff0])) [6 ans+0 S8 A64])
                    (const_int 8 [0x8]))
                (nil)))))
(insn 131 130 132 20 (set (reg:DI 141 [ _89 ])
        (reg/f:DI 104 [ _38 ])) "main.c":72:28 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 104 [ _38 ])
        (nil)))
(insn 132 131 133 20 (parallel [
            (set (reg:DI 142 [ _90 ])
                (lshiftrt:DI (reg:DI 141 [ _89 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":72:28 566 {*lshrdi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 133 132 134 20 (parallel [
            (set (reg:DI 143 [ _91 ])
                (plus:DI (reg:DI 142 [ _90 ])
                    (const_int 2147450880 [0x7fff8000])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":72:28 191 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 142 [ _90 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 134 133 135 20 (set (reg/f:DI 144 [ _92 ])
        (reg:DI 143 [ _91 ])) "main.c":72:28 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 143 [ _91 ])
        (nil)))
(insn 135 134 136 20 (set (reg:QI 145 [ _93 ])
        (mem:QI (reg/f:DI 144 [ _92 ]) [7 *_92+0 S1 A8])) "main.c":72:28 69 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:DI 144 [ _92 ])
        (nil)))
(insn 136 135 137 20 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 145 [ _93 ])
            (const_int 0 [0]))) "main.c":72:28 5 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 145 [ _93 ])
        (nil)))
(jump_insn 137 136 138 20 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 142)
            (pc))) "main.c":72:28 659 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 142)
;;  succ:       22 [100.0% (guessed)] 
;;              21 [0.0% (guessed)]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 86 141

;; basic block 21, loop depth 0, maybe hot
;;  prev block 20, next block 22, flags: (RTL)
;;  pred:       20 [0.0% (guessed)]  (FALLTHRU)
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 141
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 141
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
(note 138 137 139 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 139 138 140 21 (set (reg:DI 5 di)
        (reg:DI 141 [ _89 ])) "main.c":72:28 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 141 [ _89 ])
        (nil)))
(call_insn 140 139 141 21 (call (mem:QI (symbol_ref:DI ("__asan_report_load8") [flags 0x41]  <function_decl 0x7ffa22daa900 __builtin___asan_report_load8>) [0 __builtin___asan_report_load8 S1 A8])
        (const_int 0 [0])) "main.c":72:28 666 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 19 [frame]

(barrier 141 140 142)
;; basic block 22, loop depth 0, maybe hot
;;  prev block 21, next block 23, flags: (RTL)
;;  pred:       20 [100.0% (guessed)] 
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 86
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 86
;; lr  def 	 17 [flags] 87 88 105 146 147 148 149 150 187 188 189
(code_label 142 141 143 22 43 (nil) [1 uses])
(note 143 142 144 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 144 143 145 22 (set (reg/f:DI 187)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -16 [0xfffffffffffffff0])) [6 ans+0 S8 A64])) "main.c":72:28 66 {*movdi_internal}
     (nil))
(insn 145 144 146 22 (set (reg:DI 87 [ _6 ])
        (mem:DI (plus:DI (reg/f:DI 187)
                (const_int 8 [0x8])) [2 ans_18(D)->total+0 S8 A64])) "main.c":72:28 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 187)
        (nil)))
(insn 146 145 147 22 (parallel [
            (set (reg:DI 88 [ _7 ])
                (plus:DI (reg:DI 86 [ _5 ])
                    (reg:DI 87 [ _6 ])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":72:22 191 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 87 [ _6 ])
        (expr_list:REG_DEAD (reg:DI 86 [ _5 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 147 146 148 22 (set (reg/f:DI 188)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [6 years+0 S8 A64])) "main.c":72:22 66 {*movdi_internal}
     (nil))
(insn 148 147 149 22 (set (mem:DI (plus:DI (reg/f:DI 188)
                (const_int 8 [0x8])) [2 years_19(D)->total+0 S8 A64])
        (reg:DI 88 [ _7 ])) "main.c":72:22 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 188)
        (expr_list:REG_DEAD (reg:DI 88 [ _7 ])
            (nil))))
(insn 149 148 150 22 (set (reg/f:DI 189)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [6 years+0 S8 A64])) "main.c":73:22 66 {*movdi_internal}
     (nil))
(insn 150 149 151 22 (parallel [
            (set (reg/f:DI 105 [ _39 ])
                (plus:DI (reg/f:DI 189)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":73:22 191 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 189)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                            (const_int -8 [0xfffffffffffffff8])) [6 years+0 S8 A64])
                    (const_int 16 [0x10]))
                (nil)))))
(insn 151 150 152 22 (set (reg:DI 146 [ _94 ])
        (reg/f:DI 105 [ _39 ])) "main.c":73:22 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 105 [ _39 ])
        (nil)))
(insn 152 151 153 22 (parallel [
            (set (reg:DI 147 [ _95 ])
                (lshiftrt:DI (reg:DI 146 [ _94 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":73:22 566 {*lshrdi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 153 152 154 22 (parallel [
            (set (reg:DI 148 [ _96 ])
                (plus:DI (reg:DI 147 [ _95 ])
                    (const_int 2147450880 [0x7fff8000])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":73:22 191 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 147 [ _95 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 154 153 155 22 (set (reg/f:DI 149 [ _97 ])
        (reg:DI 148 [ _96 ])) "main.c":73:22 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 148 [ _96 ])
        (nil)))
(insn 155 154 156 22 (set (reg:QI 150 [ _98 ])
        (mem:QI (reg/f:DI 149 [ _97 ]) [7 *_97+0 S1 A8])) "main.c":73:22 69 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:DI 149 [ _97 ])
        (nil)))
(insn 156 155 157 22 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 150 [ _98 ])
            (const_int 0 [0]))) "main.c":73:22 5 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 150 [ _98 ])
        (nil)))
(jump_insn 157 156 158 22 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 162)
            (pc))) "main.c":73:22 659 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 162)
;;  succ:       24 [100.0% (guessed)] 
;;              23 [0.0% (guessed)]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 146

;; basic block 23, loop depth 0, maybe hot
;;  prev block 22, next block 24, flags: (RTL)
;;  pred:       22 [0.0% (guessed)]  (FALLTHRU)
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 146
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 146
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
(note 158 157 159 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 159 158 160 23 (set (reg:DI 5 di)
        (reg:DI 146 [ _94 ])) "main.c":73:22 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 146 [ _94 ])
        (nil)))
(call_insn 160 159 161 23 (call (mem:QI (symbol_ref:DI ("__asan_report_load8") [flags 0x41]  <function_decl 0x7ffa22daa900 __builtin___asan_report_load8>) [0 __builtin___asan_report_load8 S1 A8])
        (const_int 0 [0])) "main.c":73:22 666 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 19 [frame]

(barrier 161 160 162)
;; basic block 24, loop depth 0, maybe hot
;;  prev block 23, next block 25, flags: (RTL)
;;  pred:       22 [100.0% (guessed)] 
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 17 [flags] 89 106 151 152 153 154 155 190 191
(code_label 162 161 163 24 44 (nil) [1 uses])
(note 163 162 164 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 164 163 165 24 (set (reg/f:DI 190)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [6 years+0 S8 A64])) "main.c":73:22 66 {*movdi_internal}
     (nil))
(insn 165 164 166 24 (set (reg:DI 89 [ _8 ])
        (mem:DI (plus:DI (reg/f:DI 190)
                (const_int 16 [0x10])) [2 years_19(D)->Dweek+0 S8 A64])) "main.c":73:22 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 190)
        (nil)))
(insn 166 165 167 24 (set (reg/f:DI 191)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -16 [0xfffffffffffffff0])) [6 ans+0 S8 A64])) "main.c":73:28 66 {*movdi_internal}
     (nil))
(insn 167 166 168 24 (parallel [
            (set (reg/f:DI 106 [ _40 ])
                (plus:DI (reg/f:DI 191)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":73:28 191 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 191)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                            (const_int -16 [0xfffffffffffffff0])) [6 ans+0 S8 A64])
                    (const_int 16 [0x10]))
                (nil)))))
(insn 168 167 169 24 (set (reg:DI 151 [ _99 ])
        (reg/f:DI 106 [ _40 ])) "main.c":73:28 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 106 [ _40 ])
        (nil)))
(insn 169 168 170 24 (parallel [
            (set (reg:DI 152 [ _100 ])
                (lshiftrt:DI (reg:DI 151 [ _99 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":73:28 566 {*lshrdi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 170 169 171 24 (parallel [
            (set (reg:DI 153 [ _101 ])
                (plus:DI (reg:DI 152 [ _100 ])
                    (const_int 2147450880 [0x7fff8000])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":73:28 191 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 152 [ _100 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 171 170 172 24 (set (reg/f:DI 154 [ _102 ])
        (reg:DI 153 [ _101 ])) "main.c":73:28 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 153 [ _101 ])
        (nil)))
(insn 172 171 173 24 (set (reg:QI 155 [ _103 ])
        (mem:QI (reg/f:DI 154 [ _102 ]) [7 *_102+0 S1 A8])) "main.c":73:28 69 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:DI 154 [ _102 ])
        (nil)))
(insn 173 172 174 24 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 155 [ _103 ])
            (const_int 0 [0]))) "main.c":73:28 5 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 155 [ _103 ])
        (nil)))
(jump_insn 174 173 175 24 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 179)
            (pc))) "main.c":73:28 659 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 179)
;;  succ:       26 [100.0% (guessed)] 
;;              25 [0.0% (guessed)]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 89 151

;; basic block 25, loop depth 0, maybe hot
;;  prev block 24, next block 26, flags: (RTL)
;;  pred:       24 [0.0% (guessed)]  (FALLTHRU)
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 151
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 151
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
(note 175 174 176 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 176 175 177 25 (set (reg:DI 5 di)
        (reg:DI 151 [ _99 ])) "main.c":73:28 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 151 [ _99 ])
        (nil)))
(call_insn 177 176 178 25 (call (mem:QI (symbol_ref:DI ("__asan_report_load8") [flags 0x41]  <function_decl 0x7ffa22daa900 __builtin___asan_report_load8>) [0 __builtin___asan_report_load8 S1 A8])
        (const_int 0 [0])) "main.c":73:28 666 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 19 [frame]

(barrier 178 177 179)
;; basic block 26, loop depth 0, maybe hot
;;  prev block 25, next block 27, flags: (RTL)
;;  pred:       24 [100.0% (guessed)] 
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 89
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 89
;; lr  def 	 17 [flags] 90 91 107 156 157 158 159 160 192 193 194
(code_label 179 178 180 26 45 (nil) [1 uses])
(note 180 179 181 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 181 180 182 26 (set (reg/f:DI 192)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -16 [0xfffffffffffffff0])) [6 ans+0 S8 A64])) "main.c":73:28 66 {*movdi_internal}
     (nil))
(insn 182 181 183 26 (set (reg:DI 90 [ _9 ])
        (mem:DI (plus:DI (reg/f:DI 192)
                (const_int 16 [0x10])) [2 ans_18(D)->Dweek+0 S8 A64])) "main.c":73:28 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 192)
        (nil)))
(insn 183 182 184 26 (parallel [
            (set (reg:DI 91 [ _10 ])
                (plus:DI (reg:DI 89 [ _8 ])
                    (reg:DI 90 [ _9 ])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":73:22 191 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 90 [ _9 ])
        (expr_list:REG_DEAD (reg:DI 89 [ _8 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 184 183 185 26 (set (reg/f:DI 193)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [6 years+0 S8 A64])) "main.c":73:22 66 {*movdi_internal}
     (nil))
(insn 185 184 186 26 (set (mem:DI (plus:DI (reg/f:DI 193)
                (const_int 16 [0x10])) [2 years_19(D)->Dweek+0 S8 A64])
        (reg:DI 91 [ _10 ])) "main.c":73:22 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 193)
        (expr_list:REG_DEAD (reg:DI 91 [ _10 ])
            (nil))))
(insn 186 185 187 26 (set (reg/f:DI 194)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [6 years+0 S8 A64])) "main.c":74:25 66 {*movdi_internal}
     (nil))
(insn 187 186 188 26 (parallel [
            (set (reg/f:DI 107 [ _41 ])
                (plus:DI (reg/f:DI 194)
                    (const_int 24 [0x18])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":74:25 191 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 194)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                            (const_int -8 [0xfffffffffffffff8])) [6 years+0 S8 A64])
                    (const_int 24 [0x18]))
                (nil)))))
(insn 188 187 189 26 (set (reg:DI 156 [ _104 ])
        (reg/f:DI 107 [ _41 ])) "main.c":74:25 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 107 [ _41 ])
        (nil)))
(insn 189 188 190 26 (parallel [
            (set (reg:DI 157 [ _105 ])
                (lshiftrt:DI (reg:DI 156 [ _104 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":74:25 566 {*lshrdi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 190 189 191 26 (parallel [
            (set (reg:DI 158 [ _106 ])
                (plus:DI (reg:DI 157 [ _105 ])
                    (const_int 2147450880 [0x7fff8000])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":74:25 191 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 157 [ _105 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 191 190 192 26 (set (reg/f:DI 159 [ _107 ])
        (reg:DI 158 [ _106 ])) "main.c":74:25 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 158 [ _106 ])
        (nil)))
(insn 192 191 193 26 (set (reg:QI 160 [ _108 ])
        (mem:QI (reg/f:DI 159 [ _107 ]) [7 *_107+0 S1 A8])) "main.c":74:25 69 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:DI 159 [ _107 ])
        (nil)))
(insn 193 192 194 26 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 160 [ _108 ])
            (const_int 0 [0]))) "main.c":74:25 5 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 160 [ _108 ])
        (nil)))
(jump_insn 194 193 195 26 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 199)
            (pc))) "main.c":74:25 659 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 199)
;;  succ:       28 [100.0% (guessed)] 
;;              27 [0.0% (guessed)]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 156

;; basic block 27, loop depth 0, maybe hot
;;  prev block 26, next block 28, flags: (RTL)
;;  pred:       26 [0.0% (guessed)]  (FALLTHRU)
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 156
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 156
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
(note 195 194 196 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn 196 195 197 27 (set (reg:DI 5 di)
        (reg:DI 156 [ _104 ])) "main.c":74:25 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 156 [ _104 ])
        (nil)))
(call_insn 197 196 198 27 (call (mem:QI (symbol_ref:DI ("__asan_report_load8") [flags 0x41]  <function_decl 0x7ffa22daa900 __builtin___asan_report_load8>) [0 __builtin___asan_report_load8 S1 A8])
        (const_int 0 [0])) "main.c":74:25 666 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 19 [frame]

(barrier 198 197 199)
;; basic block 28, loop depth 0, maybe hot
;;  prev block 27, next block 29, flags: (RTL)
;;  pred:       26 [100.0% (guessed)] 
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 17 [flags] 92 108 161 162 163 164 165 195 196
(code_label 199 198 200 28 46 (nil) [1 uses])
(note 200 199 201 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(insn 201 200 202 28 (set (reg/f:DI 195)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [6 years+0 S8 A64])) "main.c":74:25 66 {*movdi_internal}
     (nil))
(insn 202 201 203 28 (set (reg:DI 92 [ _11 ])
        (mem:DI (plus:DI (reg/f:DI 195)
                (const_int 24 [0x18])) [2 years_19(D)->Dweekend+0 S8 A64])) "main.c":74:25 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 195)
        (nil)))
(insn 203 202 204 28 (set (reg/f:DI 196)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -16 [0xfffffffffffffff0])) [6 ans+0 S8 A64])) "main.c":74:31 66 {*movdi_internal}
     (nil))
(insn 204 203 205 28 (parallel [
            (set (reg/f:DI 108 [ _42 ])
                (plus:DI (reg/f:DI 196)
                    (const_int 24 [0x18])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":74:31 191 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 196)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                            (const_int -16 [0xfffffffffffffff0])) [6 ans+0 S8 A64])
                    (const_int 24 [0x18]))
                (nil)))))
(insn 205 204 206 28 (set (reg:DI 161 [ _109 ])
        (reg/f:DI 108 [ _42 ])) "main.c":74:31 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 108 [ _42 ])
        (nil)))
(insn 206 205 207 28 (parallel [
            (set (reg:DI 162 [ _110 ])
                (lshiftrt:DI (reg:DI 161 [ _109 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":74:31 566 {*lshrdi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 207 206 208 28 (parallel [
            (set (reg:DI 163 [ _111 ])
                (plus:DI (reg:DI 162 [ _110 ])
                    (const_int 2147450880 [0x7fff8000])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":74:31 191 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 162 [ _110 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 208 207 209 28 (set (reg/f:DI 164 [ _112 ])
        (reg:DI 163 [ _111 ])) "main.c":74:31 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 163 [ _111 ])
        (nil)))
(insn 209 208 210 28 (set (reg:QI 165 [ _113 ])
        (mem:QI (reg/f:DI 164 [ _112 ]) [7 *_112+0 S1 A8])) "main.c":74:31 69 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:DI 164 [ _112 ])
        (nil)))
(insn 210 209 211 28 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 165 [ _113 ])
            (const_int 0 [0]))) "main.c":74:31 5 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 165 [ _113 ])
        (nil)))
(jump_insn 211 210 212 28 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 216)
            (pc))) "main.c":74:31 659 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 216)
;;  succ:       30 [100.0% (guessed)] 
;;              29 [0.0% (guessed)]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 92 161

;; basic block 29, loop depth 0, maybe hot
;;  prev block 28, next block 30, flags: (RTL)
;;  pred:       28 [0.0% (guessed)]  (FALLTHRU)
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 161
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 161
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
(note 212 211 213 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(insn 213 212 214 29 (set (reg:DI 5 di)
        (reg:DI 161 [ _109 ])) "main.c":74:31 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 161 [ _109 ])
        (nil)))
(call_insn 214 213 215 29 (call (mem:QI (symbol_ref:DI ("__asan_report_load8") [flags 0x41]  <function_decl 0x7ffa22daa900 __builtin___asan_report_load8>) [0 __builtin___asan_report_load8 S1 A8])
        (const_int 0 [0])) "main.c":74:31 666 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 19 [frame]

(barrier 215 214 216)
;; basic block 30, loop depth 0, maybe hot
;;  prev block 29, next block 31, flags: (RTL)
;;  pred:       28 [100.0% (guessed)] 
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 92
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 92
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 93 94 97 197 198 199
(code_label 216 215 217 30 47 (nil) [1 uses])
(note 217 216 218 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(insn 218 217 219 30 (set (reg/f:DI 197)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -16 [0xfffffffffffffff0])) [6 ans+0 S8 A64])) "main.c":74:31 66 {*movdi_internal}
     (nil))
(insn 219 218 220 30 (set (reg:DI 93 [ _12 ])
        (mem:DI (plus:DI (reg/f:DI 197)
                (const_int 24 [0x18])) [2 ans_18(D)->Dweekend+0 S8 A64])) "main.c":74:31 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 197)
        (nil)))
(insn 220 219 221 30 (parallel [
            (set (reg:DI 94 [ _13 ])
                (plus:DI (reg:DI 92 [ _11 ])
                    (reg:DI 93 [ _12 ])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":74:25 191 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 93 [ _12 ])
        (expr_list:REG_DEAD (reg:DI 92 [ _11 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 221 220 222 30 (set (reg/f:DI 198)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [6 years+0 S8 A64])) "main.c":74:25 66 {*movdi_internal}
     (nil))
(insn 222 221 223 30 (set (mem:DI (plus:DI (reg/f:DI 198)
                (const_int 24 [0x18])) [2 years_19(D)->Dweekend+0 S8 A64])
        (reg:DI 94 [ _13 ])) "main.c":74:25 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 198)
        (expr_list:REG_DEAD (reg:DI 94 [ _13 ])
            (nil))))
(insn 223 222 224 30 (set (reg:DI 199)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -16 [0xfffffffffffffff0])) [6 ans+0 S8 A64])) "main.c":75:9 66 {*movdi_internal}
     (nil))
(insn 224 223 225 30 (set (reg:DI 5 di)
        (reg:DI 199)) "main.c":75:9 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 199)
        (nil)))
(call_insn 225 224 226 30 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7ffa22d82600 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) "main.c":75:9 666 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 226 225 284 30 (set (reg/f:DI 97 [ _16 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [6 years+0 S8 A64])) "main.c":76:16 66 {*movdi_internal}
     (nil))
(jump_insn 284 226 285 30 (set (pc)
        (label_ref 271)) "main.c":76:16 660 {jump}
     (nil)
 -> 271)
;;  succ:       36 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 97

(barrier 285 284 229)
;; basic block 31, loop depth 0, maybe hot
;;  prev block 30, next block 32, flags: (RTL)
;;  pred:       17
;; bb 31 artificial_defs: { }
;; bb 31 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 17 [flags] 109 166 167 168 169 170 200
(code_label 229 285 230 31 41 (nil) [1 uses])
(note 230 229 231 31 [bb 31] NOTE_INSN_BASIC_BLOCK)
(insn 231 230 232 31 (set (reg/f:DI 200)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [6 years+0 S8 A64])) "main.c":78:31 66 {*movdi_internal}
     (nil))
(insn 232 231 233 31 (parallel [
            (set (reg/f:DI 109 [ _43 ])
                (plus:DI (reg/f:DI 200)
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":78:31 191 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 200)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                            (const_int -8 [0xfffffffffffffff8])) [6 years+0 S8 A64])
                    (const_int 32 [0x20]))
                (nil)))))
(insn 233 232 234 31 (set (reg:DI 166 [ _114 ])
        (reg/f:DI 109 [ _43 ])) "main.c":78:31 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 109 [ _43 ])
        (nil)))
(insn 234 233 235 31 (parallel [
            (set (reg:DI 167 [ _115 ])
                (lshiftrt:DI (reg:DI 166 [ _114 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":78:31 566 {*lshrdi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 235 234 236 31 (parallel [
            (set (reg:DI 168 [ _116 ])
                (plus:DI (reg:DI 167 [ _115 ])
                    (const_int 2147450880 [0x7fff8000])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":78:31 191 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 167 [ _115 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 236 235 237 31 (set (reg/f:DI 169 [ _117 ])
        (reg:DI 168 [ _116 ])) "main.c":78:31 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 168 [ _116 ])
        (nil)))
(insn 237 236 238 31 (set (reg:QI 170 [ _118 ])
        (mem:QI (reg/f:DI 169 [ _117 ]) [7 *_117+0 S1 A8])) "main.c":78:31 69 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:DI 169 [ _117 ])
        (nil)))
(insn 238 237 239 31 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 170 [ _118 ])
            (const_int 0 [0]))) "main.c":78:31 5 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 170 [ _118 ])
        (nil)))
(jump_insn 239 238 240 31 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 244)
            (pc))) "main.c":78:31 659 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 244)
;;  succ:       33 [100.0% (guessed)] 
;;              32 [0.0% (guessed)]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 166

;; basic block 32, loop depth 0, maybe hot
;;  prev block 31, next block 33, flags: (RTL)
;;  pred:       31 [0.0% (guessed)]  (FALLTHRU)
;; bb 32 artificial_defs: { }
;; bb 32 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 166
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 166
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
(note 240 239 241 32 [bb 32] NOTE_INSN_BASIC_BLOCK)
(insn 241 240 242 32 (set (reg:DI 5 di)
        (reg:DI 166 [ _114 ])) "main.c":78:31 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 166 [ _114 ])
        (nil)))
(call_insn 242 241 243 32 (call (mem:QI (symbol_ref:DI ("__asan_report_load8") [flags 0x41]  <function_decl 0x7ffa22daa900 __builtin___asan_report_load8>) [0 __builtin___asan_report_load8 S1 A8])
        (const_int 0 [0])) "main.c":78:31 666 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 19 [frame]

(barrier 243 242 244)
;; basic block 33, loop depth 0, maybe hot
;;  prev block 32, next block 34, flags: (RTL)
;;  pred:       31 [100.0% (guessed)] 
;; bb 33 artificial_defs: { }
;; bb 33 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 95 96 110 171 172 173 174 175 201 202 203
(code_label 244 243 245 33 48 (nil) [1 uses])
(note 245 244 246 33 [bb 33] NOTE_INSN_BASIC_BLOCK)
(insn 246 245 247 33 (set (reg/f:DI 201)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [6 years+0 S8 A64])) "main.c":78:31 66 {*movdi_internal}
     (nil))
(insn 247 246 248 33 (set (reg/f:DI 95 [ _14 ])
        (mem/f:DI (plus:DI (reg/f:DI 201)
                (const_int 32 [0x20])) [6 years_19(D)->tail+0 S8 A64])) "main.c":78:31 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 201)
        (nil)))
(insn 248 247 249 33 (set (reg:DI 202)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -16 [0xfffffffffffffff0])) [6 ans+0 S8 A64])) "main.c":78:19 66 {*movdi_internal}
     (nil))
(insn 249 248 250 33 (set (reg:DI 4 si)
        (reg:DI 202)) "main.c":78:19 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 202)
        (nil)))
(insn 250 249 251 33 (set (reg:DI 5 di)
        (reg/f:DI 95 [ _14 ])) "main.c":78:19 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 95 [ _14 ])
        (nil)))
(call_insn 251 250 252 33 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("addRec") [flags 0x3]  <function_decl 0x7ffa22b09700 addRec>) [0 addRec S1 A8])
            (const_int 0 [0]))) "main.c":78:19 677 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 252 251 253 33 (set (reg/f:DI 96 [ _15 ])
        (reg:DI 0 ax)) "main.c":78:19 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 253 252 254 33 (set (reg/f:DI 203)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [6 years+0 S8 A64])) "main.c":78:17 66 {*movdi_internal}
     (nil))
(insn 254 253 255 33 (parallel [
            (set (reg/f:DI 110 [ _44 ])
                (plus:DI (reg/f:DI 203)
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":78:17 191 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 203)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                            (const_int -8 [0xfffffffffffffff8])) [6 years+0 S8 A64])
                    (const_int 32 [0x20]))
                (nil)))))
(insn 255 254 256 33 (set (reg:DI 171 [ _119 ])
        (reg/f:DI 110 [ _44 ])) "main.c":78:17 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 110 [ _44 ])
        (nil)))
(insn 256 255 257 33 (parallel [
            (set (reg:DI 172 [ _120 ])
                (lshiftrt:DI (reg:DI 171 [ _119 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":78:17 566 {*lshrdi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 257 256 258 33 (parallel [
            (set (reg:DI 173 [ _121 ])
                (plus:DI (reg:DI 172 [ _120 ])
                    (const_int 2147450880 [0x7fff8000])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":78:17 191 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 172 [ _120 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 258 257 259 33 (set (reg/f:DI 174 [ _122 ])
        (reg:DI 173 [ _121 ])) "main.c":78:17 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 173 [ _121 ])
        (nil)))
(insn 259 258 260 33 (set (reg:QI 175 [ _123 ])
        (mem:QI (reg/f:DI 174 [ _122 ]) [7 *_122+0 S1 A8])) "main.c":78:17 69 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:DI 174 [ _122 ])
        (nil)))
(insn 260 259 261 33 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 175 [ _123 ])
            (const_int 0 [0]))) "main.c":78:17 5 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 175 [ _123 ])
        (nil)))
(jump_insn 261 260 262 33 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 266)
            (pc))) "main.c":78:17 659 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 266)
;;  succ:       35 [100.0% (guessed)] 
;;              34 [0.0% (guessed)]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 96 171

;; basic block 34, loop depth 0, maybe hot
;;  prev block 33, next block 35, flags: (RTL)
;;  pred:       33 [0.0% (guessed)]  (FALLTHRU)
;; bb 34 artificial_defs: { }
;; bb 34 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 171
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 171
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
(note 262 261 263 34 [bb 34] NOTE_INSN_BASIC_BLOCK)
(insn 263 262 264 34 (set (reg:DI 5 di)
        (reg:DI 171 [ _119 ])) "main.c":78:17 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 171 [ _119 ])
        (nil)))
(call_insn 264 263 265 34 (call (mem:QI (symbol_ref:DI ("__asan_report_store8") [flags 0x41]  <function_decl 0x7ffa22daaf00 __builtin___asan_report_store8>) [0 __builtin___asan_report_store8 S1 A8])
        (const_int 0 [0])) "main.c":78:17 666 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 19 [frame]

(barrier 265 264 266)
;; basic block 35, loop depth 0, maybe hot
;;  prev block 34, next block 36, flags: (RTL)
;;  pred:       33 [100.0% (guessed)] 
;; bb 35 artificial_defs: { }
;; bb 35 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 96
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 96
;; lr  def 	 97 204
(code_label 266 265 267 35 49 (nil) [1 uses])
(note 267 266 268 35 [bb 35] NOTE_INSN_BASIC_BLOCK)
(insn 268 267 269 35 (set (reg/f:DI 204)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [6 years+0 S8 A64])) "main.c":78:17 66 {*movdi_internal}
     (nil))
(insn 269 268 270 35 (set (mem/f:DI (plus:DI (reg/f:DI 204)
                (const_int 32 [0x20])) [6 years_19(D)->tail+0 S8 A64])
        (reg/f:DI 96 [ _15 ])) "main.c":78:17 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 204)
        (expr_list:REG_DEAD (reg/f:DI 96 [ _15 ])
            (nil))))
(insn 270 269 271 35 (set (reg/f:DI 97 [ _16 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [6 years+0 S8 A64])) "main.c":79:12 66 {*movdi_internal}
     (nil))
;;  succ:       36 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 97

;; basic block 36, loop depth 0, maybe hot
;;  prev block 35, next block 1, flags: (RTL)
;;  pred:       35 (FALLTHRU)
;;              3 [always] 
;;              12 [always] 
;;              30 [always] 
;; bb 36 artificial_defs: { }
;; bb 36 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 97
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 97
;; lr  def 	 0 [ax] 176
(code_label 271 270 272 36 33 (nil) [3 uses])
(note 272 271 273 36 [bb 36] NOTE_INSN_BASIC_BLOCK)
(insn 273 272 277 36 (set (reg/f:DI 176 [ <retval> ])
        (reg/f:DI 97 [ _16 ])) 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 97 [ _16 ])
        (nil)))
(insn 277 273 278 36 (set (reg/i:DI 0 ax)
        (reg/f:DI 176 [ <retval> ])) "main.c":80:1 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 176 [ <retval> ])
        (nil)))
(insn 278 277 0 36 (use (reg/i:DI 0 ax)) "main.c":80:1 -1
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 19 [frame]


;; Function createYearL (createYearL, funcdef_no=3, decl_uid=3397, cgraph_uid=4, symbol_order=3)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 30 n_edges 36 count 55 (  1.8)
;; 4 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29
;;
;; Loop 1
;;  header 23, latch 22
;;  depth 1, outer 0
;;  nodes: 23 22 21 6 20 19 7 17 16 13 11 10 8 14
;;
;; Loop 2
;;  header 22, latch 21
;;  depth 2, outer 1
;;  nodes: 22 21 20 19 7 17 16 13 11 10 8 14
;;
;; Loop 3
;;  header 20, latch 19
;;  depth 3, outer 2
;;  nodes: 20 19 17 16 13 11 10 8 14
;; 2 succs { 5 3 }
;; 3 succs { 5 4 }
;; 4 succs { 5 }
;; 5 succs { 23 }
;; 6 succs { 22 }
;; 7 succs { 20 }
;; 8 succs { 10 9 }
;; 9 succs { }
;; 10 succs { 11 14 }
;; 11 succs { 13 12 }
;; 12 succs { }
;; 13 succs { 17 }
;; 14 succs { 16 15 }
;; 15 succs { }
;; 16 succs { 17 }
;; 17 succs { 19 18 }
;; 18 succs { }
;; 19 succs { 20 }
;; 20 succs { 8 21 }
;; 21 succs { 22 }
;; 22 succs { 7 23 }
;; 23 succs { 6 24 }
;; 24 succs { 26 25 }
;; 25 succs { 27 }
;; 26 succs { 27 }
;; 27 succs { 29 28 }
;; 28 succs { }
;; 29 succs { 1 }
Building IRA IR
verify found no changes in insn with uid = 7.
verify found no changes in insn with uid = 50.
verify found no changes in insn with uid = 61.
verify found no changes in insn with uid = 68.
verify found no changes in insn with uid = 73.
verify found no changes in insn with uid = 87.
verify found no changes in insn with uid = 96.
verify found no changes in insn with uid = 101.
verify found no changes in insn with uid = 106.
verify found no changes in insn with uid = 111.
verify found no changes in insn with uid = 117.
verify found no changes in insn with uid = 122.
verify found no changes in insn with uid = 127.
verify found no changes in insn with uid = 132.
verify found no changes in insn with uid = 138.
verify found no changes in insn with uid = 143.
verify found no changes in insn with uid = 149.
verify found no changes in insn with uid = 154.
verify found no changes in insn with uid = 172.
verify found no changes in insn with uid = 197.
verify found no changes in insn with uid = 220.
verify found no changes in insn with uid = 234.
verify found no changes in insn with uid = 251.
verify found no changes in insn with uid = 255.
verify found no changes in insn with uid = 272.
verify found no changes in insn with uid = 281.
verify found no changes in insn with uid = 296.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r180: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a7 (r180,l0) best DIREG, allocno GENERAL_REGS
    r179: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a10 (r179,l0) best DIREG, allocno GENERAL_REGS
    r178: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a11 (r178,l0) best DREG, allocno GENERAL_REGS
    r177: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a12 (r177,l0) best AREG, allocno GENERAL_REGS
    r176: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a13 (r176,l0) best DIREG, allocno GENERAL_REGS
    r175: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a14 (r175,l0) best SIREG, allocno GENERAL_REGS
    r174: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a15 (r174,l0) best DREG, allocno GENERAL_REGS
    r173: preferred CREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a16 (r173,l0) best CREG, allocno GENERAL_REGS
    r172: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a17 (r172,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r171: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a18 (r171,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r170: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a19 (r170,l0) best AREG, allocno GENERAL_REGS
    r169: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a20 (r169,l0) best DIREG, allocno GENERAL_REGS
    r168: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a21 (r168,l0) best SIREG, allocno GENERAL_REGS
    r167: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a22 (r167,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r166: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a24 (r166,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r165: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a26 (r165,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r164: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a33 (r164,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r163: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a34 (r163,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r162: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a36 (r162,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r161: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a38 (r161,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r160: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a45 (r160,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r159: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a46 (r159,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r158: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a48 (r158,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r157: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a50 (r157,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r156: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a57 (r156,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r155: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a58 (r155,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r154: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a60 (r154,l0) best DIREG, allocno GENERAL_REGS
    r153: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a61 (r153,l0) best AREG, allocno GENERAL_REGS
    r152: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a62 (r152,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r151: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a64 (r151,l0) best DIREG, allocno GENERAL_REGS
    r150: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a65 (r150,l0) best AREG, allocno GENERAL_REGS
    r149: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a66 (r149,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r148: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a68 (r148,l0) best DIREG, allocno GENERAL_REGS
    r147: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a69 (r147,l0) best AREG, allocno GENERAL_REGS
    r146: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a70 (r146,l0) best AREG, allocno GENERAL_REGS
    r145: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a71 (r145,l0) best DIREG, allocno GENERAL_REGS
    r144: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a72 (r144,l0) best AREG, allocno GENERAL_REGS
    r143: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a73 (r143,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r142: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a75 (r142,l0) best DIREG, allocno GENERAL_REGS
    r141: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a76 (r141,l0) best AREG, allocno GENERAL_REGS
    r140: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a77 (r140,l0) best AREG, allocno GENERAL_REGS
    r139: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a78 (r139,l0) best DIREG, allocno GENERAL_REGS
    r138: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a79 (r138,l0) best AREG, allocno GENERAL_REGS
    r137: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a81 (r137,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r136: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a80 (r136,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r135: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a88 (r135,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r134: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a90 (r134,l0) best DIREG, allocno GENERAL_REGS
    r133: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a91 (r133,l0) best AREG, allocno GENERAL_REGS
    r132: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a92 (r132,l0) best AREG, allocno GENERAL_REGS
    r131: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a93 (r131,l0) best DIREG, allocno GENERAL_REGS
    r130: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a94 (r130,l0) best DIREG, allocno GENERAL_REGS
    r129: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a95 (r129,l0) best DREG, allocno GENERAL_REGS
    r128: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r128,l0) best AREG, allocno GENERAL_REGS
    r127: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r127,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r126: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r126,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r125: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a96 (r125,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r124: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a97 (r124,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r123: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a98 (r123,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r122: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r122,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r121: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r121,l0) best AREG, allocno GENERAL_REGS
    r120: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r120,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r119: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a28 (r119,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r118: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a29 (r118,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r117: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a30 (r117,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r116: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a31 (r116,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r115: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a27 (r115,l0) best DIREG, allocno GENERAL_REGS
    r114: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a40 (r114,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r113: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a41 (r113,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r112: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a42 (r112,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r111: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a43 (r111,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r110: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a39 (r110,l0) best DIREG, allocno GENERAL_REGS
    r109: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a52 (r109,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r108: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a53 (r108,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r107: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a54 (r107,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r106: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a55 (r106,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r105: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a51 (r105,l0) best DIREG, allocno GENERAL_REGS
    r104: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a83 (r104,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r103: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a84 (r103,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r102: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a85 (r102,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r101: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a86 (r101,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r100: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a82 (r100,l0) best DIREG, allocno GENERAL_REGS
    r99: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a32 (r99,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r98: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a44 (r98,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r97: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a56 (r97,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r96: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a87 (r96,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r95: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r95,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r94: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a6 (r94,l0) best AREG, allocno GENERAL_REGS
    r93: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a9 (r93,l0) best AREG, allocno GENERAL_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a23 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a25 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a35 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a37 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a47 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a49 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r86: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a59 (r86,l0) best AREG, allocno GENERAL_REGS
    r85: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a63 (r85,l0) best AREG, allocno GENERAL_REGS
    r84: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a67 (r84,l0) best AREG, allocno GENERAL_REGS
    r83: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a74 (r83,l0) best AREG, allocno GENERAL_REGS
    r82: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a89 (r82,l0) best AREG, allocno GENERAL_REGS

  a0(r128,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:14000 NO_REX_SSE_REGS:14000 SSE_REGS:14000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:7000
  a1(r126,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:82000 NO_REX_SSE_REGS:82000 SSE_REGS:82000 MMX_REGS:132000 INT_SSE_REGS:132000 ALL_REGS:2122000 MEM:61000
  a2(r127,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16000 NO_REX_SSE_REGS:16000 SSE_REGS:16000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a3(r121,l0) costs: AREG:4000 DREG:4000 CREG:4000 BREG:4000 SIREG:4000 DIREG:4000 AD_REGS:4000 CLOBBERED_REGS:4000 Q_REGS:4000 TLS_GOTBASE_REGS:4000 GENERAL_REGS:4000 SSE_FIRST_REG:82000 NO_REX_SSE_REGS:82000 SSE_REGS:82000 MMX_REGS:145000 INT_SSE_REGS:145000 ALL_REGS:2334000 MEM:65000
  a4(r122,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:14000 NO_REX_SSE_REGS:14000 SSE_REGS:14000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:6000
  a5(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8000 NO_REX_SSE_REGS:8000 SSE_REGS:8000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:11000
  a6(r94,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:16000 NO_REX_SSE_REGS:16000 SSE_REGS:16000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:12000
  a7(r180,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:16000 NO_REX_SSE_REGS:16000 SSE_REGS:16000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a8(r120,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:30000 NO_REX_SSE_REGS:30000 SSE_REGS:30000 MMX_REGS:45000 INT_SSE_REGS:45000 ALL_REGS:736000 MEM:19000
  a9(r93,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:16000 NO_REX_SSE_REGS:16000 SSE_REGS:16000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:12000
  a10(r179,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:16000 NO_REX_SSE_REGS:16000 SSE_REGS:16000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:12000
  a11(r178,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:16000 NO_REX_SSE_REGS:16000 SSE_REGS:16000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a12(r177,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:8000 NO_REX_SSE_REGS:8000 SSE_REGS:8000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:12000
  a13(r176,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:16000 NO_REX_SSE_REGS:16000 SSE_REGS:16000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a14(r175,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:16000 NO_REX_SSE_REGS:16000 SSE_REGS:16000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a15(r174,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:16000 NO_REX_SSE_REGS:16000 SSE_REGS:16000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a16(r173,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:16000 NO_REX_SSE_REGS:16000 SSE_REGS:16000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a17(r172,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:16000 NO_REX_SSE_REGS:16000 SSE_REGS:16000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a18(r171,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:16000 NO_REX_SSE_REGS:16000 SSE_REGS:16000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a19(r170,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:8000 NO_REX_SSE_REGS:8000 SSE_REGS:8000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:12000
  a20(r169,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:16000 NO_REX_SSE_REGS:16000 SSE_REGS:16000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a21(r168,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:16000 NO_REX_SSE_REGS:16000 SSE_REGS:16000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a22(r167,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16000 NO_REX_SSE_REGS:16000 SSE_REGS:16000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a23(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8000 NO_REX_SSE_REGS:8000 SSE_REGS:8000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a24(r166,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16000 NO_REX_SSE_REGS:16000 SSE_REGS:16000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:11000
  a25(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16000 NO_REX_SSE_REGS:16000 SSE_REGS:16000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:11000
  a26(r165,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16000 NO_REX_SSE_REGS:16000 SSE_REGS:16000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a27(r115,l0) costs: AREG:4000 DREG:4000 CREG:4000 BREG:4000 SIREG:4000 DIREG:4000 AD_REGS:4000 CLOBBERED_REGS:4000 Q_REGS:4000 TLS_GOTBASE_REGS:4000 GENERAL_REGS:4000 SSE_FIRST_REG:24000 NO_REX_SSE_REGS:24000 SSE_REGS:24000 MMX_REGS:34000 INT_SSE_REGS:34000 ALL_REGS:526000 MEM:14000
  a28(r119,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a29(r118,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:14000 NO_REX_SSE_REGS:14000 SSE_REGS:14000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:7000
  a30(r117,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8000 NO_REX_SSE_REGS:8000 SSE_REGS:8000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a31(r116,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:18000 NO_REX_SSE_REGS:18000 SSE_REGS:18000 MMX_REGS:28000 INT_SSE_REGS:28000 ALL_REGS:426000 MEM:12000
  a32(r99,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8000 NO_REX_SSE_REGS:8000 SSE_REGS:8000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a33(r164,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16000 NO_REX_SSE_REGS:16000 SSE_REGS:16000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:11000
  a34(r163,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16000 NO_REX_SSE_REGS:16000 SSE_REGS:16000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a35(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8000 NO_REX_SSE_REGS:8000 SSE_REGS:8000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a36(r162,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16000 NO_REX_SSE_REGS:16000 SSE_REGS:16000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:11000
  a37(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16000 NO_REX_SSE_REGS:16000 SSE_REGS:16000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:11000
  a38(r161,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16000 NO_REX_SSE_REGS:16000 SSE_REGS:16000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a39(r110,l0) costs: AREG:4000 DREG:4000 CREG:4000 BREG:4000 SIREG:4000 DIREG:4000 AD_REGS:4000 CLOBBERED_REGS:4000 Q_REGS:4000 TLS_GOTBASE_REGS:4000 GENERAL_REGS:4000 SSE_FIRST_REG:24000 NO_REX_SSE_REGS:24000 SSE_REGS:24000 MMX_REGS:34000 INT_SSE_REGS:34000 ALL_REGS:526000 MEM:14000
  a40(r114,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a41(r113,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:14000 NO_REX_SSE_REGS:14000 SSE_REGS:14000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:7000
  a42(r112,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8000 NO_REX_SSE_REGS:8000 SSE_REGS:8000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a43(r111,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:18000 NO_REX_SSE_REGS:18000 SSE_REGS:18000 MMX_REGS:28000 INT_SSE_REGS:28000 ALL_REGS:426000 MEM:12000
  a44(r98,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8000 NO_REX_SSE_REGS:8000 SSE_REGS:8000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a45(r160,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16000 NO_REX_SSE_REGS:16000 SSE_REGS:16000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:11000
  a46(r159,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16000 NO_REX_SSE_REGS:16000 SSE_REGS:16000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a47(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8000 NO_REX_SSE_REGS:8000 SSE_REGS:8000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a48(r158,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16000 NO_REX_SSE_REGS:16000 SSE_REGS:16000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:11000
  a49(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16000 NO_REX_SSE_REGS:16000 SSE_REGS:16000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:11000
  a50(r157,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16000 NO_REX_SSE_REGS:16000 SSE_REGS:16000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a51(r105,l0) costs: AREG:4000 DREG:4000 CREG:4000 BREG:4000 SIREG:4000 DIREG:4000 AD_REGS:4000 CLOBBERED_REGS:4000 Q_REGS:4000 TLS_GOTBASE_REGS:4000 GENERAL_REGS:4000 SSE_FIRST_REG:24000 NO_REX_SSE_REGS:24000 SSE_REGS:24000 MMX_REGS:34000 INT_SSE_REGS:34000 ALL_REGS:526000 MEM:14000
  a52(r109,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a53(r108,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:14000 NO_REX_SSE_REGS:14000 SSE_REGS:14000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:7000
  a54(r107,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8000 NO_REX_SSE_REGS:8000 SSE_REGS:8000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a55(r106,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:18000 NO_REX_SSE_REGS:18000 SSE_REGS:18000 MMX_REGS:28000 INT_SSE_REGS:28000 ALL_REGS:426000 MEM:12000
  a56(r97,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8000 NO_REX_SSE_REGS:8000 SSE_REGS:8000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a57(r156,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16000 NO_REX_SSE_REGS:16000 SSE_REGS:16000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:11000
  a58(r155,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8000 NO_REX_SSE_REGS:8000 SSE_REGS:8000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:12000
  a59(r86,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:16000 NO_REX_SSE_REGS:16000 SSE_REGS:16000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a60(r154,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:16000 NO_REX_SSE_REGS:16000 SSE_REGS:16000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a61(r153,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:8000 NO_REX_SSE_REGS:8000 SSE_REGS:8000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:12000
  a62(r152,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8000 NO_REX_SSE_REGS:8000 SSE_REGS:8000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:12000
  a63(r85,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:16000 NO_REX_SSE_REGS:16000 SSE_REGS:16000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a64(r151,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:16000 NO_REX_SSE_REGS:16000 SSE_REGS:16000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a65(r150,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:8000 NO_REX_SSE_REGS:8000 SSE_REGS:8000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:12000
  a66(r149,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8000 NO_REX_SSE_REGS:8000 SSE_REGS:8000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:12000
  a67(r84,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:16000 NO_REX_SSE_REGS:16000 SSE_REGS:16000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a68(r148,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:16000 NO_REX_SSE_REGS:16000 SSE_REGS:16000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a69(r147,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:8000 NO_REX_SSE_REGS:8000 SSE_REGS:8000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:12000
  a70(r146,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:8000 NO_REX_SSE_REGS:8000 SSE_REGS:8000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:12000
  a71(r145,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:16000 NO_REX_SSE_REGS:16000 SSE_REGS:16000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a72(r144,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:8000 NO_REX_SSE_REGS:8000 SSE_REGS:8000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:12000
  a73(r143,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8000 NO_REX_SSE_REGS:8000 SSE_REGS:8000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:12000
  a74(r83,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:16000 NO_REX_SSE_REGS:16000 SSE_REGS:16000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a75(r142,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:16000 NO_REX_SSE_REGS:16000 SSE_REGS:16000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a76(r141,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:8000 NO_REX_SSE_REGS:8000 SSE_REGS:8000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:12000
  a77(r140,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:8000 NO_REX_SSE_REGS:8000 SSE_REGS:8000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:12000
  a78(r139,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:16000 NO_REX_SSE_REGS:16000 SSE_REGS:16000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a79(r138,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:8000 NO_REX_SSE_REGS:8000 SSE_REGS:8000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:12000
  a80(r136,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16000 NO_REX_SSE_REGS:16000 SSE_REGS:16000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a81(r137,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8000 NO_REX_SSE_REGS:8000 SSE_REGS:8000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a82(r100,l0) costs: AREG:4000 DREG:4000 CREG:4000 BREG:4000 SIREG:4000 DIREG:4000 AD_REGS:4000 CLOBBERED_REGS:4000 Q_REGS:4000 TLS_GOTBASE_REGS:4000 GENERAL_REGS:4000 SSE_FIRST_REG:24000 NO_REX_SSE_REGS:24000 SSE_REGS:24000 MMX_REGS:34000 INT_SSE_REGS:34000 ALL_REGS:526000 MEM:14000
  a83(r104,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a84(r103,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:14000 NO_REX_SSE_REGS:14000 SSE_REGS:14000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:7000
  a85(r102,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8000 NO_REX_SSE_REGS:8000 SSE_REGS:8000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a86(r101,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:18000 NO_REX_SSE_REGS:18000 SSE_REGS:18000 MMX_REGS:28000 INT_SSE_REGS:28000 ALL_REGS:426000 MEM:12000
  a87(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8000 NO_REX_SSE_REGS:8000 SSE_REGS:8000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:11000
  a88(r135,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8000 NO_REX_SSE_REGS:8000 SSE_REGS:8000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:12000
  a89(r82,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:16000 NO_REX_SSE_REGS:16000 SSE_REGS:16000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a90(r134,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:16000 NO_REX_SSE_REGS:16000 SSE_REGS:16000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a91(r133,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:8000 NO_REX_SSE_REGS:8000 SSE_REGS:8000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:12000
  a92(r132,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:8000 NO_REX_SSE_REGS:8000 SSE_REGS:8000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:12000
  a93(r131,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:16000 NO_REX_SSE_REGS:16000 SSE_REGS:16000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:12000
  a94(r130,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:16000 NO_REX_SSE_REGS:16000 SSE_REGS:16000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:12000
  a95(r129,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:16000 NO_REX_SSE_REGS:16000 SSE_REGS:16000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a96(r125,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8000 NO_REX_SSE_REGS:8000 SSE_REGS:8000 MMX_REGS:23000 INT_SSE_REGS:23000 ALL_REGS:316000 MEM:11000
  a97(r124,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8000 NO_REX_SSE_REGS:8000 SSE_REGS:8000 MMX_REGS:23000 INT_SSE_REGS:23000 ALL_REGS:316000 MEM:11000
  a98(r123,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8000 NO_REX_SSE_REGS:8000 SSE_REGS:8000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000

   Insn 300(l0): point = 0
   Insn 299(l0): point = 2
   Insn 296(l0): point = 5
   Insn 295(l0): point = 8
   Insn 294(l0): point = 10
   Insn 36(l0): point = 13
   Insn 35(l0): point = 15
   Insn 34(l0): point = 17
   Insn 318(l0): point = 20
   Insn 30(l0): point = 22
   Insn 29(l0): point = 24
   Insn 28(l0): point = 26
   Insn 27(l0): point = 28
   Insn 26(l0): point = 30
   Insn 25(l0): point = 33
   Insn 24(l0): point = 35
   Insn 290(l0): point = 37
   Insn 287(l0): point = 39
   Insn 220(l0): point = 42
   Insn 219(l0): point = 44
   Insn 197(l0): point = 47
   Insn 196(l0): point = 49
   Insn 172(l0): point = 52
   Insn 171(l0): point = 54
   Insn 87(l0): point = 57
   Insn 86(l0): point = 59
   Insn 312(l0): point = 62
   Insn 54(l0): point = 64
   Insn 285(l0): point = 67
   Insn 284(l0): point = 69
   Insn 282(l0): point = 71
   Insn 281(l0): point = 73
   Insn 280(l0): point = 75
   Insn 279(l0): point = 77
   Insn 276(l0): point = 80
   Insn 275(l0): point = 82
   Insn 273(l0): point = 84
   Insn 272(l0): point = 86
   Insn 271(l0): point = 88
   Insn 270(l0): point = 90
   Insn 269(l0): point = 92
   Insn 268(l0): point = 94
   Insn 267(l0): point = 96
   Insn 264(l0): point = 99
   Insn 262(l0): point = 102
   Insn 261(l0): point = 104
   Insn 257(l0): point = 107
   Insn 256(l0): point = 109
   Insn 255(l0): point = 111
   Insn 254(l0): point = 113
   Insn 253(l0): point = 115
   Insn 252(l0): point = 117
   Insn 251(l0): point = 119
   Insn 250(l0): point = 121
   Insn 249(l0): point = 123
   Insn 248(l0): point = 125
   Insn 247(l0): point = 127
   Insn 246(l0): point = 129
   Insn 245(l0): point = 131
   Insn 244(l0): point = 133
   Insn 243(l0): point = 135
   Insn 242(l0): point = 137
   Insn 241(l0): point = 139
   Insn 240(l0): point = 141
   Insn 239(l0): point = 143
   Insn 238(l0): point = 145
   Insn 237(l0): point = 147
   Insn 236(l0): point = 149
   Insn 235(l0): point = 151
   Insn 234(l0): point = 153
   Insn 233(l0): point = 155
   Insn 232(l0): point = 157
   Insn 231(l0): point = 159
   Insn 230(l0): point = 161
   Insn 229(l0): point = 163
   Insn 228(l0): point = 165
   Insn 227(l0): point = 167
   Insn 226(l0): point = 169
   Insn 225(l0): point = 171
   Insn 224(l0): point = 173
   Insn 217(l0): point = 176
   Insn 216(l0): point = 178
   Insn 215(l0): point = 180
   Insn 214(l0): point = 182
   Insn 213(l0): point = 184
   Insn 212(l0): point = 186
   Insn 211(l0): point = 188
   Insn 210(l0): point = 190
   Insn 209(l0): point = 192
   Insn 206(l0): point = 195
   Insn 205(l0): point = 197
   Insn 204(l0): point = 199
   Insn 203(l0): point = 201
   Insn 202(l0): point = 203
   Insn 201(l0): point = 205
   Insn 194(l0): point = 208
   Insn 193(l0): point = 210
   Insn 192(l0): point = 212
   Insn 191(l0): point = 214
   Insn 190(l0): point = 216
   Insn 189(l0): point = 218
   Insn 188(l0): point = 220
   Insn 187(l0): point = 222
   Insn 186(l0): point = 224
   Insn 316(l0): point = 227
   Insn 181(l0): point = 229
   Insn 180(l0): point = 231
   Insn 179(l0): point = 233
   Insn 178(l0): point = 235
   Insn 177(l0): point = 237
   Insn 176(l0): point = 239
   Insn 169(l0): point = 242
   Insn 168(l0): point = 244
   Insn 167(l0): point = 246
   Insn 166(l0): point = 248
   Insn 165(l0): point = 250
   Insn 164(l0): point = 252
   Insn 163(l0): point = 254
   Insn 162(l0): point = 256
   Insn 161(l0): point = 258
   Insn 159(l0): point = 261
   Insn 158(l0): point = 263
   Insn 157(l0): point = 265
   Insn 156(l0): point = 267
   Insn 155(l0): point = 269
   Insn 154(l0): point = 271
   Insn 153(l0): point = 273
   Insn 152(l0): point = 275
   Insn 151(l0): point = 277
   Insn 150(l0): point = 279
   Insn 149(l0): point = 281
   Insn 148(l0): point = 283
   Insn 147(l0): point = 285
   Insn 146(l0): point = 287
   Insn 145(l0): point = 289
   Insn 144(l0): point = 291
   Insn 143(l0): point = 293
   Insn 142(l0): point = 295
   Insn 141(l0): point = 297
   Insn 140(l0): point = 299
   Insn 139(l0): point = 301
   Insn 138(l0): point = 303
   Insn 137(l0): point = 305
   Insn 136(l0): point = 307
   Insn 135(l0): point = 309
   Insn 134(l0): point = 311
   Insn 133(l0): point = 313
   Insn 132(l0): point = 315
   Insn 131(l0): point = 317
   Insn 130(l0): point = 319
   Insn 129(l0): point = 321
   Insn 128(l0): point = 323
   Insn 127(l0): point = 325
   Insn 126(l0): point = 327
   Insn 125(l0): point = 329
   Insn 124(l0): point = 331
   Insn 123(l0): point = 333
   Insn 122(l0): point = 335
   Insn 121(l0): point = 337
   Insn 120(l0): point = 339
   Insn 119(l0): point = 341
   Insn 118(l0): point = 343
   Insn 117(l0): point = 345
   Insn 116(l0): point = 347
   Insn 115(l0): point = 349
   Insn 114(l0): point = 351
   Insn 113(l0): point = 353
   Insn 112(l0): point = 355
   Insn 111(l0): point = 357
   Insn 110(l0): point = 359
   Insn 109(l0): point = 361
   Insn 108(l0): point = 363
   Insn 107(l0): point = 365
   Insn 106(l0): point = 367
   Insn 105(l0): point = 369
   Insn 104(l0): point = 371
   Insn 103(l0): point = 373
   Insn 102(l0): point = 375
   Insn 101(l0): point = 377
   Insn 100(l0): point = 379
   Insn 99(l0): point = 381
   Insn 98(l0): point = 383
   Insn 97(l0): point = 385
   Insn 96(l0): point = 387
   Insn 95(l0): point = 389
   Insn 94(l0): point = 391
   Insn 93(l0): point = 393
   Insn 92(l0): point = 395
   Insn 91(l0): point = 397
   Insn 84(l0): point = 400
   Insn 83(l0): point = 402
   Insn 82(l0): point = 404
   Insn 81(l0): point = 406
   Insn 80(l0): point = 408
   Insn 79(l0): point = 410
   Insn 78(l0): point = 412
   Insn 77(l0): point = 414
   Insn 76(l0): point = 416
   Insn 75(l0): point = 418
   Insn 74(l0): point = 420
   Insn 73(l0): point = 422
   Insn 72(l0): point = 424
   Insn 71(l0): point = 426
   Insn 70(l0): point = 428
   Insn 69(l0): point = 430
   Insn 68(l0): point = 432
   Insn 67(l0): point = 434
   Insn 314(l0): point = 437
   Insn 63(l0): point = 439
   Insn 62(l0): point = 441
   Insn 61(l0): point = 443
   Insn 60(l0): point = 445
   Insn 59(l0): point = 447
   Insn 58(l0): point = 449
   Insn 310(l0): point = 452
   Insn 50(l0): point = 454
   Insn 49(l0): point = 456
   Insn 48(l0): point = 458
   Insn 47(l0): point = 460
   Insn 46(l0): point = 462
   Insn 45(l0): point = 464
   Insn 44(l0): point = 466
   Insn 41(l0): point = 468
   Insn 23(l0): point = 470
   Insn 22(l0): point = 472
   Insn 21(l0): point = 474
   Insn 20(l0): point = 476
   Insn 19(l0): point = 478
   Insn 18(l0): point = 480
   Insn 17(l0): point = 482
   Insn 16(l0): point = 484
   Insn 15(l0): point = 486
   Insn 14(l0): point = 488
   Insn 13(l0): point = 490
   Insn 12(l0): point = 492
   Insn 10(l0): point = 495
   Insn 9(l0): point = 498
   Insn 8(l0): point = 500
   Insn 7(l0): point = 502
   Insn 6(l0): point = 504
   Insn 5(l0): point = 507
   Insn 4(l0): point = 509
   Insn 3(l0): point = 511
   Insn 2(l0): point = 513
   Insn 39(l0): point = 515
   Insn 38(l0): point = 517
 a0(r128): [8..37] [3..4]
 a1(r126): [62..478] [27..41] [14..19]
 a2(r127): [23..24]
 a3(r121): [498..513] [62..495] [25..41]
 a4(r122): [62..511] [36..41]
 a5(r95): [38..39]
 a6(r94): [70..71]
 a7(r180): [76..77]
 a8(r120): [62..490]
 a9(r93): [83..84]
 a10(r179): [89..94]
 a11(r178): [93..96]
 a12(r177): [108..109]
 a13(r176): [122..137]
 a14(r175): [124..139]
 a15(r174): [126..141]
 a16(r173): [128..143]
 a17(r172): [130..145]
 a18(r171): [132..147]
 a19(r170): [150..151]
 a20(r169): [156..159]
 a21(r168): [158..161]
 a22(r167): [164..165]
 a23(r92): [164..167]
 a24(r166): [168..169]
 a25(r91): [168..171]
 a26(r165): [172..173]
 a27(r115): [176..188] [45..46]
 a28(r119): [179..180]
 a29(r118): [181..182]
 a30(r117): [183..184]
 a31(r116): [185..186]
 a32(r99): [189..190]
 a33(r164): [191..192]
 a34(r163): [196..197]
 a35(r90): [196..199]
 a36(r162): [200..201]
 a37(r89): [200..203]
 a38(r161): [204..205]
 a39(r110): [208..220] [50..51]
 a40(r114): [211..212]
 a41(r113): [213..214]
 a42(r112): [215..216]
 a43(r111): [217..218]
 a44(r98): [221..222]
 a45(r160): [223..224]
 a46(r159): [230..231]
 a47(r88): [230..233]
 a48(r158): [234..235]
 a49(r87): [234..237]
 a50(r157): [238..239]
 a51(r105): [242..254] [55..56]
 a52(r109): [245..246]
 a53(r108): [247..248]
 a54(r107): [249..250]
 a55(r106): [251..252]
 a56(r97): [255..256]
 a57(r156): [257..258]
 a58(r155): [266..267]
 a59(r86): [268..269]
 a60(r154): [274..275]
 a61(r153): [278..279]
 a62(r152): [288..289]
 a63(r85): [290..291]
 a64(r151): [296..297]
 a65(r150): [300..301]
 a66(r149): [310..311]
 a67(r84): [312..313]
 a68(r148): [318..319]
 a69(r147): [322..323]
 a70(r146): [332..333]
 a71(r145): [338..339]
 a72(r144): [342..343]
 a73(r143): [352..353]
 a74(r83): [354..355]
 a75(r142): [360..361]
 a76(r141): [364..365]
 a77(r140): [374..375]
 a78(r139): [380..381]
 a79(r138): [384..385]
 a80(r136): [394..397]
 a81(r137): [394..395]
 a82(r100): [400..412] [60..61]
 a83(r104): [403..404]
 a84(r103): [405..406]
 a85(r102): [407..408]
 a86(r101): [409..410]
 a87(r96): [413..414]
 a88(r135): [417..418]
 a89(r82): [419..420]
 a90(r134): [425..426]
 a91(r133): [429..430]
 a92(r132): [440..441]
 a93(r131): [446..449]
 a94(r130): [457..462]
 a95(r129): [461..464]
 a96(r125): [481..482]
 a97(r124): [485..486]
 a98(r123): [491..492]
Compressing live ranges: from 520 to 166 - 31%
Ranges after the compression:
 a0(r128): [0..7]
 a1(r126): [18..157] [6..9] [2..3]
 a2(r127): [4..5]
 a3(r121): [18..165] [6..9]
 a4(r122): [18..165] [6..9]
 a5(r95): [8..9]
 a6(r94): [18..19]
 a7(r180): [20..21]
 a8(r120): [18..161]
 a9(r93): [22..23]
 a10(r179): [24..25]
 a11(r178): [24..25]
 a12(r177): [26..27]
 a13(r176): [28..29]
 a14(r175): [28..29]
 a15(r174): [28..29]
 a16(r173): [28..29]
 a17(r172): [28..29]
 a18(r171): [28..29]
 a19(r170): [30..31]
 a20(r169): [32..33]
 a21(r168): [32..33]
 a22(r167): [34..35]
 a23(r92): [34..35]
 a24(r166): [36..37]
 a25(r91): [36..37]
 a26(r165): [38..39]
 a27(r115): [40..47] [10..11]
 a28(r119): [40..41]
 a29(r118): [42..43]
 a30(r117): [44..45]
 a31(r116): [46..47]
 a32(r99): [48..49]
 a33(r164): [50..51]
 a34(r163): [52..53]
 a35(r90): [52..53]
 a36(r162): [54..55]
 a37(r89): [54..55]
 a38(r161): [56..57]
 a39(r110): [58..65] [12..13]
 a40(r114): [58..59]
 a41(r113): [60..61]
 a42(r112): [62..63]
 a43(r111): [64..65]
 a44(r98): [66..67]
 a45(r160): [68..69]
 a46(r159): [70..71]
 a47(r88): [70..71]
 a48(r158): [72..73]
 a49(r87): [72..73]
 a50(r157): [74..75]
 a51(r105): [76..83] [14..15]
 a52(r109): [76..77]
 a53(r108): [78..79]
 a54(r107): [80..81]
 a55(r106): [82..83]
 a56(r97): [84..85]
 a57(r156): [86..87]
 a58(r155): [88..89]
 a59(r86): [90..91]
 a60(r154): [92..93]
 a61(r153): [94..95]
 a62(r152): [96..97]
 a63(r85): [98..99]
 a64(r151): [100..101]
 a65(r150): [102..103]
 a66(r149): [104..105]
 a67(r84): [106..107]
 a68(r148): [108..109]
 a69(r147): [110..111]
 a70(r146): [112..113]
 a71(r145): [114..115]
 a72(r144): [116..117]
 a73(r143): [118..119]
 a74(r83): [120..121]
 a75(r142): [122..123]
 a76(r141): [124..125]
 a77(r140): [126..127]
 a78(r139): [128..129]
 a79(r138): [130..131]
 a80(r136): [132..133]
 a81(r137): [132..133]
 a82(r100): [134..141] [16..17]
 a83(r104): [134..135]
 a84(r103): [136..137]
 a85(r102): [138..139]
 a86(r101): [140..141]
 a87(r96): [142..143]
 a88(r135): [144..145]
 a89(r82): [146..147]
 a90(r134): [148..149]
 a91(r133): [150..151]
 a92(r132): [152..153]
 a93(r131): [154..155]
 a94(r130): [156..157]
 a95(r129): [156..157]
 a96(r125): [158..159]
 a97(r124): [160..161]
 a98(r123): [162..163]
  pref0:a7(r180)<-hr5@1500
  pref1:a10(r179)<-hr5@1500
  pref2:a11(r178)<-hr1@1500
  pref3:a12(r177)<-hr0@1500
  pref4:a13(r176)<-hr5@1500
  pref5:a14(r175)<-hr4@1500
  pref6:a15(r174)<-hr1@1500
  pref7:a16(r173)<-hr2@1500
  pref8:a19(r170)<-hr0@1500
  pref9:a20(r169)<-hr5@1500
  pref10:a21(r168)<-hr4@1500
  pref11:a60(r154)<-hr5@1500
  pref12:a61(r153)<-hr0@1500
  pref13:a64(r151)<-hr5@1500
  pref14:a65(r150)<-hr0@1500
  pref15:a68(r148)<-hr5@1500
  pref16:a69(r147)<-hr0@1500
  pref17:a70(r146)<-hr0@1500
  pref18:a71(r145)<-hr5@1500
  pref19:a72(r144)<-hr0@1500
  pref20:a75(r142)<-hr5@1500
  pref21:a76(r141)<-hr0@1500
  pref22:a77(r140)<-hr0@1500
  pref23:a78(r139)<-hr5@1500
  pref24:a79(r138)<-hr0@1500
  pref25:a90(r134)<-hr5@1500
  pref26:a91(r133)<-hr0@1500
  pref27:a92(r132)<-hr0@1500
  pref28:a93(r131)<-hr5@1500
  pref29:a94(r130)<-hr5@1500
  pref30:a95(r129)<-hr1@1500
  pref31:a0(r128)<-hr0@1500
  pref32:a3(r121)<-hr0@1500
  pref33:a27(r115)<-hr5@1500
  pref34:a39(r110)<-hr5@1500
  pref35:a51(r105)<-hr5@1500
  pref36:a82(r100)<-hr5@1500
  pref37:a6(r94)<-hr0@1500
  pref38:a9(r93)<-hr0@1500
  pref39:a59(r86)<-hr0@1500
  pref40:a63(r85)<-hr0@1500
  pref41:a67(r84)<-hr0@1500
  pref42:a74(r83)<-hr0@1500
  pref43:a89(r82)<-hr0@1500
  regions=1, blocks=30, points=166
    allocnos=99 (big 0), copies=0, conflicts=0, ranges=107
Disposition:
   89:r82  l0     0   74:r83  l0     0   67:r84  l0     0   63:r85  l0     0
   59:r86  l0     0   49:r87  l0     1   47:r88  l0     1   37:r89  l0     1
   35:r90  l0     1   25:r91  l0     1   23:r92  l0     1    9:r93  l0     0
    6:r94  l0     0    5:r95  l0     0   87:r96  l0     0   56:r97  l0     0
   44:r98  l0     0   32:r99  l0     0   82:r100 l0     0   86:r101 l0     1
   85:r102 l0     1   84:r103 l0     1   83:r104 l0     1   51:r105 l0     0
   55:r106 l0     1   54:r107 l0     1   53:r108 l0     1   52:r109 l0     1
   39:r110 l0     0   43:r111 l0     1   42:r112 l0     1   41:r113 l0     1
   40:r114 l0     1   27:r115 l0     0   31:r116 l0     1   30:r117 l0     1
   29:r118 l0     1   28:r119 l0     1    8:r120 l0    41    3:r121 l0     3
    4:r122 l0    42   98:r123 l0     0   97:r124 l0     0   96:r125 l0     0
    1:r126 l0    40    2:r127 l0     0    0:r128 l0     1   95:r129 l0     1
   94:r130 l0     0   93:r131 l0     0   92:r132 l0     0   91:r133 l0     0
   90:r134 l0     0   88:r135 l0     0   80:r136 l0     0   81:r137 l0     1
   79:r138 l0     0   78:r139 l0     0   77:r140 l0     0   76:r141 l0     0
   75:r142 l0     0   73:r143 l0     0   72:r144 l0     0   71:r145 l0     0
   70:r146 l0     0   69:r147 l0     0   68:r148 l0     0   66:r149 l0     0
   65:r150 l0     0   64:r151 l0     0   62:r152 l0     0   61:r153 l0     0
   60:r154 l0     0   58:r155 l0     0   57:r156 l0     0   50:r157 l0     0
   48:r158 l0     0   46:r159 l0     0   45:r160 l0     0   38:r161 l0     0
   36:r162 l0     0   34:r163 l0     0   33:r164 l0     0   26:r165 l0     0
   24:r166 l0     0   22:r167 l0     0   21:r168 l0     1   20:r169 l0     0
   19:r170 l0     0   18:r171 l0    36   17:r172 l0     5   16:r173 l0     2
   15:r174 l0     1   14:r175 l0     4   13:r176 l0     0   12:r177 l0     0
   11:r178 l0     1   10:r179 l0     0    7:r180 l0     0
+++Costs: overall -20000, reg -20000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


createYearL

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags] 36 [r8] 37 [r9]
;;  ref usage 	r0={29d,23u} r1={31d,3u} r2={29d,1u} r4={40d,13u} r5={54d,27u} r6={1d,29u} r7={4d,61u} r8={27d} r9={27d} r10={27d} r11={27d} r12={27d} r13={27d} r14={27d} r15={27d} r16={1d,28u} r17={63d,12u} r18={27d} r19={1d,92u,6e} r20={28d} r21={28d} r22={28d} r23={28d} r24={28d} r25={28d} r26={28d} r27={28d} r28={27d} r29={27d} r30={27d} r31={27d} r32={27d} r33={27d} r34={27d} r35={27d} r36={29d,1u} r37={29d,1u} r38={27d} r39={27d} r44={27d} r45={27d} r46={27d} r47={27d} r48={27d} r49={27d} r50={27d} r51={27d} r52={27d} r53={27d} r54={27d} r55={27d} r56={27d} r57={27d} r58={27d} r59={27d} r60={27d} r61={27d} r62={27d} r63={27d} r64={27d} r65={27d} r66={27d} r67={27d} r68={27d} r69={27d} r70={27d} r71={27d} r72={27d} r73={27d} r74={27d} r75={27d} r82={1d,1u} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} r87={1d,1u,1e} r88={1d,1u} r89={1d,1u,1e} r90={1d,1u} r91={1d,1u,1e} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} r96={1d,1u} r97={1d,1u} r98={1d,1u} r99={1d,1u} r100={1d,2u} r101={1d,1u} r102={1d,1u} r103={1d,1u} r104={1d,1u} r105={1d,2u} r106={1d,1u} r107={1d,1u} r108={1d,1u} r109={1d,1u} r110={1d,2u} r111={1d,1u} r112={1d,1u} r113={1d,1u} r114={1d,1u} r115={1d,2u} r116={1d,1u} r117={1d,1u} r118={1d,1u} r119={1d,1u} r120={1d,3u} r121={2d,9u} r122={1d,1u} r123={1d,1u} r124={1d,1u} r125={1d,1u} r126={1d,9u} r127={1d,1u} r128={1d,1u} r129={1d,1u} r130={1d,1u} r131={1d,1u} r132={1d,1u} r133={1d,1u} r134={1d,1u} r135={1d,1u} r136={1d,1u} r137={1d,1u} r138={1d,1u} r139={1d,1u} r140={1d,1u} r141={1d,1u} r142={1d,1u} r143={1d,1u} r144={1d,1u} r145={1d,1u} r146={1d,1u} r147={1d,1u} r148={1d,1u} r149={1d,1u} r150={1d,1u} r151={1d,1u} r152={1d,1u} r153={1d,1u} r154={1d,1u} r155={1d,1u} r156={1d,1u} r157={1d,1u} r158={1d,1u} r159={1d,1u} r160={1d,1u} r161={1d,1u} r162={1d,1u} r163={1d,1u} r164={1d,1u} r165={1d,1u} r166={1d,1u} r167={1d,1u} r168={1d,1u} r169={1d,1u} r170={1d,1u} r171={1d,1u} r172={1d,1u} r173={1d,1u} r174={1d,1u} r175={1d,1u} r176={1d,1u} r177={1d,1u} r178={1d,1u} r179={1d,1u} r180={1d,1u} 
;;    total ref usage 2433{2012d,412u,9e} in 246{219 regular + 27 call} insns.
(note 1 0 42 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 17 [flags] 121 122
(note 42 1 38 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 38 42 39 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -392 [0xfffffffffffffe78])) [10 fReadings+0 S8 A64])
        (reg:DI 5 di [ fReadings ])) "main.c":82:55 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ fReadings ])
        (nil)))
(insn 39 38 2 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -400 [0xfffffffffffffe70])) [9 query+0 S8 A64])
        (reg:DI 4 si [ query ])) "main.c":82:55 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ query ])
        (nil)))
(insn 2 39 3 2 (parallel [
            (set (reg:DI 121)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -288 [0xfffffffffffffee0])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":82:55 191 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 3 2 4 2 (set (reg:DI 122)
        (reg:DI 121)) "main.c":82:55 66 {*movdi_internal}
     (nil))
(insn 4 3 5 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (symbol_ref:DI ("__asan_option_detect_stack_use_after_return") [flags 0x40]  <var_decl 0x7ffa22b503f0 __asan_option_detect_stack_use_after_return>) [11 __asan_option_detect_stack_use_after_return+0 S4 A32])
            (const_int 0 [0]))) "main.c":82:55 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 5 4 302 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 11)
            (pc))) "main.c":82:55 659 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 11)
;;  succ:       5
;;              3 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 121 122

;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 4, flags: (RTL)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 121 122
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
(note 302 5 6 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 6 302 7 3 (set (reg:DI 5 di)
        (const_int 256 [0x100])) "main.c":82:55 66 {*movdi_internal}
     (nil))
(call_insn 7 6 8 3 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__asan_stack_malloc_2") [flags 0x41]) [0  S1 A8])
            (const_int 0 [0]))) "main.c":82:55 677 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (use (reg:DI 5 di))
        (nil)))
(insn 8 7 9 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 0 ax)
            (const_int 0 [0]))) "main.c":82:55 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 9 8 303 3 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 11)
            (pc))) "main.c":82:55 659 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 11)
;;  succ:       5
;;              4 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 19 [frame] 121 122

;; basic block 4, loop depth 0, maybe hot
;;  prev block 3, next block 5, flags: (RTL)
;;  pred:       3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 19 [frame] 122
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 121
(note 303 9 10 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 10 303 11 4 (set (reg:DI 121)
        (reg:DI 0 ax)) "main.c":82:55 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
;;  succ:       5 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 121 122

;; basic block 5, loop depth 0, maybe hot
;;  prev block 4, next block 6, flags: (RTL)
;;  pred:       2
;;              3
;;              4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 121 122
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 121
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 120 123 124 125 126 129 130
(code_label 11 10 304 5 50 (nil) [2 uses])
(note 304 11 12 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 12 304 13 5 (parallel [
            (set (reg:DI 123)
                (plus:DI (reg:DI 121)
                    (const_int 288 [0x120])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":82:55 191 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 13 12 14 5 (set (reg:DI 120)
        (reg:DI 123)) "main.c":82:55 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 123)
        (nil)))
(insn 14 13 15 5 (set (mem:DI (reg:DI 121) [0  S8 A8])
        (const_int 1102416563 [0x41b58ab3])) "main.c":82:55 66 {*movdi_internal}
     (nil))
(insn 15 14 16 5 (set (reg/f:DI 124)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7ffa22b882d0 *.LC5>)) "main.c":82:55 66 {*movdi_internal}
     (nil))
(insn 16 15 17 5 (set (mem:DI (plus:DI (reg:DI 121)
                (const_int 8 [0x8])) [0  S8 A8])
        (reg/f:DI 124)) "main.c":82:55 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 124)
        (nil)))
(insn 17 16 18 5 (set (reg/f:DI 125)
        (symbol_ref:DI ("*.LASANPC3") [flags 0x2]  <var_decl 0x7ffa22b88360 *.LASANPC3>)) "main.c":82:55 66 {*movdi_internal}
     (nil))
(insn 18 17 19 5 (set (mem:DI (plus:DI (reg:DI 121)
                (const_int 16 [0x10])) [0  S8 A8])
        (reg/f:DI 125)) "main.c":82:55 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 125)
        (nil)))
(insn 19 18 20 5 (parallel [
            (set (reg:DI 126)
                (lshiftrt:DI (reg:DI 121)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":82:55 566 {*lshrdi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 20 19 21 5 (set (mem:SI (plus:DI (reg:DI 126)
                (const_int 2147450880 [0x7fff8000])) [7  S4 A8])
        (const_int -235802127 [0xfffffffff1f1f1f1])) "main.c":82:55 67 {*movsi_internal}
     (nil))
(insn 21 20 22 5 (set (mem:SI (plus:DI (reg:DI 126)
                (const_int 2147450900 [0x7fff8014])) [7  S4 A8])
        (const_int -217710592 [0xfffffffff3060000])) "main.c":82:55 67 {*movsi_internal}
     (nil))
(insn 22 21 23 5 (set (mem:SI (plus:DI (reg:DI 126)
                (const_int 2147450904 [0x7fff8018])) [7  S4 A8])
        (const_int -202116109 [0xfffffffff3f3f3f3])) "main.c":82:55 67 {*movsi_internal}
     (nil))
(insn 23 22 40 5 (set (mem:SI (plus:DI (reg:DI 126)
                (const_int 2147450908 [0x7fff801c])) [7  S4 A8])
        (const_int -202116109 [0xfffffffff3f3f3f3])) "main.c":82:55 67 {*movsi_internal}
     (nil))
(note 40 23 41 5 NOTE_INSN_FUNCTION_BEG)
(insn 41 40 44 5 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 19 frame)
                        (const_int -8 [0xfffffffffffffff8])) [13 D.3499+0 S8 A64])
                (unspec:DI [
                        (mem/v/f:DI (const_int 40 [0x28]) [0 MEM[(<address-space-1> long unsigned int *)40B]+0 S8 A64 AS1])
                    ] UNSPEC_SP_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) "main.c":82:55 976 {stack_protect_set_di}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 44 41 45 5 (set (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -368 [0xfffffffffffffe90])) [6 list+0 S8 A64])
        (const_int 0 [0])) "main.c":83:13 66 {*movdi_internal}
     (nil))
(insn 45 44 46 5 (set (reg:DI 129)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -392 [0xfffffffffffffe78])) [10 fReadings+0 S8 A64])) "main.c":85:5 66 {*movdi_internal}
     (nil))
(insn 46 45 47 5 (parallel [
            (set (reg:DI 130)
                (plus:DI (reg:DI 120)
                    (const_int -256 [0xffffffffffffff00])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":85:5 191 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 47 46 48 5 (set (reg:DI 1 dx)
        (reg:DI 129)) "main.c":85:5 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 129)
        (nil)))
(insn 48 47 49 5 (set (reg:SI 4 si)
        (const_int 150 [0x96])) "main.c":85:5 67 {*movsi_internal}
     (nil))
(insn 49 48 50 5 (set (reg:DI 5 di)
        (reg:DI 130)) "main.c":85:5 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 130)
        (nil)))
(call_insn 50 49 310 5 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fgets") [flags 0x41]  <function_decl 0x7ffa22e57300 fgets>) [0 fgets S1 A8])
            (const_int 0 [0]))) "main.c":85:5 677 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:DI 0 ax)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(jump_insn 310 50 311 5 (set (pc)
        (label_ref 277)) "main.c":86:11 660 {jump}
     (nil)
 -> 277)
;;  succ:       23 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 120 121 122 126

(barrier 311 310 283)
;; basic block 6, loop depth 0, maybe hot
;;  prev block 5, next block 7, flags: (RTL)
;;  pred:       23
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 120 121 122 126
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	
(code_label 283 311 53 6 65 (nil) [1 uses])
(note 53 283 54 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 54 53 312 6 (set (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -372 [0xfffffffffffffe8c])) [11 i+0 S4 A32])
        (const_int 0 [0])) "main.c":87:18 67 {*movsi_internal}
     (nil))
(jump_insn 312 54 313 6 (set (pc)
        (label_ref 265)) "main.c":87:9 660 {jump}
     (nil)
 -> 265)
;;  succ:       22 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 120 121 122 126

(barrier 313 312 274)
;; basic block 7, loop depth 0, maybe hot
;;  prev block 6, next block 8, flags: (RTL)
;;  pred:       22
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 120 121 122 126
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 120
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 131 132
(code_label 274 313 57 7 64 (nil) [1 uses])
(note 57 274 58 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 58 57 59 7 (parallel [
            (set (reg:DI 131)
                (plus:DI (reg:DI 120)
                    (const_int -256 [0xffffffffffffff00])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":88:28 191 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 59 58 60 7 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC4") [flags 0x2]  <var_decl 0x7ffa22b50630 *.LC4>)) "main.c":88:28 66 {*movdi_internal}
     (nil))
(insn 60 59 61 7 (set (reg:DI 5 di)
        (reg:DI 131)) "main.c":88:28 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 131)
        (nil)))
(call_insn 61 60 62 7 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x7ffa22aecf00 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) "main.c":88:28 677 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 62 61 63 7 (set (reg:DI 132)
        (reg:DI 0 ax)) "main.c":88:28 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 63 62 314 7 (set (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -360 [0xfffffffffffffe98])) [3 value+0 S8 A64])
        (reg:DI 132)) "main.c":88:28 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 132)
        (nil)))
(jump_insn 314 63 315 7 (set (pc)
        (label_ref 258)) "main.c":89:19 660 {jump}
     (nil)
 -> 258)
;;  succ:       20 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 120 121 122 126

(barrier 315 314 260)
;; basic block 8, loop depth 0, maybe hot
;;  prev block 7, next block 9, flags: (RTL)
;;  pred:       20
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 120 121 122 126
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 82 96 100 101 102 103 104 133 134 135
(code_label 260 315 66 8 63 (nil) [1 uses])
(note 66 260 67 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 67 66 68 8 (set (reg:DI 5 di)
        (const_int 40 [0x28])) "main.c":91:33 66 {*movdi_internal}
     (nil))
(call_insn 68 67 69 8 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x7ffa22d87000 malloc>) [0 __builtin_malloc S1 A8])
            (const_int 0 [0]))) "main.c":91:33 677 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 69 68 70 8 (set (reg/f:DI 133)
        (reg:DI 0 ax)) "main.c":91:33 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (expr_list:REG_NOALIAS (reg/f:DI 133)
            (nil))))
(insn 70 69 71 8 (set (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -352 [0xfffffffffffffea0])) [6 years+0 S8 A64])
        (reg/f:DI 133)) "main.c":91:33 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 133)
        (nil)))
(insn 71 70 72 8 (set (reg:DI 134)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -360 [0xfffffffffffffe98])) [3 value+0 S8 A64])) "main.c":92:24 66 {*movdi_internal}
     (nil))
(insn 72 71 73 8 (set (reg:DI 5 di)
        (reg:DI 134)) "main.c":92:24 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 134)
        (nil)))
(call_insn/i 73 72 74 8 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("atoi") [flags 0x41]  <function_decl 0x7ffa22e69600 atoi>) [0 atoi S1 A8])
            (const_int 0 [0]))) "main.c":92:24 677 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 74 73 75 8 (set (reg:SI 82 [ _1 ])
        (reg:SI 0 ax)) "main.c":92:24 67 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 75 74 76 8 (set (reg:DI 135)
        (sign_extend:DI (reg:SI 82 [ _1 ]))) "main.c":92:22 128 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 82 [ _1 ])
        (nil)))
(insn 76 75 77 8 (set (mem/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -344 [0xfffffffffffffea8])) [2 year+0 S8 A64])
        (reg:DI 135)) "main.c":92:22 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 135)
        (nil)))
(insn 77 76 78 8 (set (reg/f:DI 96 [ _69 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -352 [0xfffffffffffffea0])) [6 years+0 S8 A64])) "main.c":93:29 66 {*movdi_internal}
     (nil))
(insn 78 77 79 8 (set (reg:DI 100 [ _77 ])
        (reg/f:DI 96 [ _69 ])) "main.c":93:29 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 96 [ _69 ])
        (nil)))
(insn 79 78 80 8 (parallel [
            (set (reg:DI 101 [ _78 ])
                (lshiftrt:DI (reg:DI 100 [ _77 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":93:29 566 {*lshrdi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 80 79 81 8 (parallel [
            (set (reg:DI 102 [ _79 ])
                (plus:DI (reg:DI 101 [ _78 ])
                    (const_int 2147450880 [0x7fff8000])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":93:29 191 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 101 [ _78 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 81 80 82 8 (set (reg/f:DI 103 [ _80 ])
        (reg:DI 102 [ _79 ])) "main.c":93:29 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 102 [ _79 ])
        (nil)))
(insn 82 81 83 8 (set (reg:QI 104 [ _81 ])
        (mem:QI (reg/f:DI 103 [ _80 ]) [7 *_80+0 S1 A8])) "main.c":93:29 69 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:DI 103 [ _80 ])
        (nil)))
(insn 83 82 84 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 104 [ _81 ])
            (const_int 0 [0]))) "main.c":93:29 5 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 104 [ _81 ])
        (nil)))
(jump_insn 84 83 85 8 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 89)
            (pc))) "main.c":93:29 659 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 89)
;;  succ:       10 [100.0% (guessed)] 
;;              9 [0.0% (guessed)]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 100 120 121 122 126

;; basic block 9, loop depth 0, maybe hot
;;  prev block 8, next block 10, flags: (RTL)
;;  pred:       8 [0.0% (guessed)]  (FALLTHRU)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 100
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 100
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
(note 85 84 86 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 86 85 87 9 (set (reg:DI 5 di)
        (reg:DI 100 [ _77 ])) "main.c":93:29 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 100 [ _77 ])
        (nil)))
(call_insn 87 86 88 9 (call (mem:QI (symbol_ref:DI ("__asan_report_store8") [flags 0x41]  <function_decl 0x7ffa22daaf00 __builtin___asan_report_store8>) [0 __builtin___asan_report_store8 S1 A8])
        (const_int 0 [0])) "main.c":93:29 666 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 19 [frame]

(barrier 88 87 89)
;; basic block 10, loop depth 0, maybe hot
;;  prev block 9, next block 11, flags: (RTL)
;;  pred:       8 [100.0% (guessed)] 
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 120 121 122 126
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 83 84 85 86 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155
(code_label 89 88 90 10 57 (nil) [1 uses])
(note 90 89 91 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 91 90 92 10 (set (reg/f:DI 136)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -352 [0xfffffffffffffea0])) [6 years+0 S8 A64])) "main.c":93:29 66 {*movdi_internal}
     (nil))
(insn 92 91 93 10 (set (reg:DI 137)
        (mem/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -344 [0xfffffffffffffea8])) [2 year+0 S8 A64])) "main.c":93:29 66 {*movdi_internal}
     (nil))
(insn 93 92 94 10 (set (mem:DI (reg/f:DI 136) [2 years_37->year+0 S8 A64])
        (reg:DI 137)) "main.c":93:29 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 137)
        (expr_list:REG_DEAD (reg/f:DI 136)
            (nil))))
(insn 94 93 95 10 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC4") [flags 0x2]  <var_decl 0x7ffa22b50630 *.LC4>)) "main.c":94:25 66 {*movdi_internal}
     (nil))
(insn 95 94 96 10 (set (reg:DI 5 di)
        (const_int 0 [0])) "main.c":94:25 66 {*movdi_internal}
     (nil))
(call_insn 96 95 97 10 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x7ffa22aecf00 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) "main.c":94:25 677 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 97 96 98 10 (set (reg:DI 138)
        (reg:DI 0 ax)) "main.c":94:25 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 98 97 99 10 (set (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -360 [0xfffffffffffffe98])) [3 value+0 S8 A64])
        (reg:DI 138)) "main.c":94:25 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 138)
        (nil)))
(insn 99 98 100 10 (set (reg:DI 139)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -360 [0xfffffffffffffe98])) [3 value+0 S8 A64])) "main.c":95:25 66 {*movdi_internal}
     (nil))
(insn 100 99 101 10 (set (reg:DI 5 di)
        (reg:DI 139)) "main.c":95:25 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 139)
        (nil)))
(call_insn 101 100 102 10 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("monthToNum") [flags 0x41]  <function_decl 0x7ffa22afe900 monthToNum>) [0 monthToNum S1 A8])
            (const_int 0 [0]))) "main.c":95:25 677 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 102 101 103 10 (set (reg:DI 140)
        (reg:DI 0 ax)) "main.c":95:25 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 103 102 104 10 (set (mem/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -336 [0xfffffffffffffeb0])) [2 month+0 S8 A64])
        (reg:DI 140)) "main.c":95:25 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 140)
        (nil)))
(insn 104 103 105 10 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC4") [flags 0x2]  <var_decl 0x7ffa22b50630 *.LC4>)) "main.c":96:25 66 {*movdi_internal}
     (nil))
(insn 105 104 106 10 (set (reg:DI 5 di)
        (const_int 0 [0])) "main.c":96:25 66 {*movdi_internal}
     (nil))
(call_insn 106 105 107 10 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x7ffa22aecf00 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) "main.c":96:25 677 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 107 106 108 10 (set (reg:DI 141)
        (reg:DI 0 ax)) "main.c":96:25 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 108 107 109 10 (set (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -360 [0xfffffffffffffe98])) [3 value+0 S8 A64])
        (reg:DI 141)) "main.c":96:25 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 141)
        (nil)))
(insn 109 108 110 10 (set (reg:DI 142)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -360 [0xfffffffffffffe98])) [3 value+0 S8 A64])) "main.c":97:24 66 {*movdi_internal}
     (nil))
(insn 110 109 111 10 (set (reg:DI 5 di)
        (reg:DI 142)) "main.c":97:24 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 142)
        (nil)))
(call_insn/i 111 110 112 10 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("atoi") [flags 0x41]  <function_decl 0x7ffa22e69600 atoi>) [0 atoi S1 A8])
            (const_int 0 [0]))) "main.c":97:24 677 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 112 111 113 10 (set (reg:SI 83 [ _2 ])
        (reg:SI 0 ax)) "main.c":97:24 67 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 113 112 114 10 (set (reg:DI 143)
        (sign_extend:DI (reg:SI 83 [ _2 ]))) "main.c":97:22 128 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 83 [ _2 ])
        (nil)))
(insn 114 113 115 10 (set (mem/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -328 [0xfffffffffffffeb8])) [2 dayN+0 S8 A64])
        (reg:DI 143)) "main.c":97:22 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 143)
        (nil)))
(insn 115 114 116 10 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC4") [flags 0x2]  <var_decl 0x7ffa22b50630 *.LC4>)) "main.c":98:25 66 {*movdi_internal}
     (nil))
(insn 116 115 117 10 (set (reg:DI 5 di)
        (const_int 0 [0])) "main.c":98:25 66 {*movdi_internal}
     (nil))
(call_insn 117 116 118 10 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x7ffa22aecf00 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) "main.c":98:25 677 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 118 117 119 10 (set (reg:DI 144)
        (reg:DI 0 ax)) "main.c":98:25 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 119 118 120 10 (set (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -360 [0xfffffffffffffe98])) [3 value+0 S8 A64])
        (reg:DI 144)) "main.c":98:25 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 144)
        (nil)))
(insn 120 119 121 10 (set (reg:DI 145)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -360 [0xfffffffffffffe98])) [3 value+0 S8 A64])) "main.c":99:23 66 {*movdi_internal}
     (nil))
(insn 121 120 122 10 (set (reg:DI 5 di)
        (reg:DI 145)) "main.c":99:23 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 145)
        (nil)))
(call_insn 122 121 123 10 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("dayToNum") [flags 0x41]  <function_decl 0x7ffa22afe800 dayToNum>) [0 dayToNum S1 A8])
            (const_int 0 [0]))) "main.c":99:23 677 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 123 122 124 10 (set (reg:DI 146)
        (reg:DI 0 ax)) "main.c":99:23 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 124 123 125 10 (set (mem/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -320 [0xfffffffffffffec0])) [2 day+0 S8 A64])
        (reg:DI 146)) "main.c":99:23 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 146)
        (nil)))
(insn 125 124 126 10 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC4") [flags 0x2]  <var_decl 0x7ffa22b50630 *.LC4>)) "main.c":100:25 66 {*movdi_internal}
     (nil))
(insn 126 125 127 10 (set (reg:DI 5 di)
        (const_int 0 [0])) "main.c":100:25 66 {*movdi_internal}
     (nil))
(call_insn 127 126 128 10 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x7ffa22aecf00 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) "main.c":100:25 677 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 128 127 129 10 (set (reg:DI 147)
        (reg:DI 0 ax)) "main.c":100:25 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 129 128 130 10 (set (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -360 [0xfffffffffffffe98])) [3 value+0 S8 A64])
        (reg:DI 147)) "main.c":100:25 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 147)
        (nil)))
(insn 130 129 131 10 (set (reg:DI 148)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -360 [0xfffffffffffffe98])) [3 value+0 S8 A64])) "main.c":101:22 66 {*movdi_internal}
     (nil))
(insn 131 130 132 10 (set (reg:DI 5 di)
        (reg:DI 148)) "main.c":101:22 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 148)
        (nil)))
(call_insn/i 132 131 133 10 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("atoi") [flags 0x41]  <function_decl 0x7ffa22e69600 atoi>) [0 atoi S1 A8])
            (const_int 0 [0]))) "main.c":101:22 677 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 133 132 134 10 (set (reg:SI 84 [ _3 ])
        (reg:SI 0 ax)) "main.c":101:22 67 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 134 133 135 10 (set (reg:DI 149)
        (sign_extend:DI (reg:SI 84 [ _3 ]))) "main.c":101:20 128 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 84 [ _3 ])
        (nil)))
(insn 135 134 136 10 (set (mem/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -312 [0xfffffffffffffec8])) [2 ID+0 S8 A64])
        (reg:DI 149)) "main.c":101:20 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 149)
        (nil)))
(insn 136 135 137 10 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC4") [flags 0x2]  <var_decl 0x7ffa22b50630 *.LC4>)) "main.c":102:25 66 {*movdi_internal}
     (nil))
(insn 137 136 138 10 (set (reg:DI 5 di)
        (const_int 0 [0])) "main.c":102:25 66 {*movdi_internal}
     (nil))
(call_insn 138 137 139 10 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x7ffa22aecf00 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) "main.c":102:25 677 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 139 138 140 10 (set (reg:DI 150)
        (reg:DI 0 ax)) "main.c":102:25 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 140 139 141 10 (set (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -360 [0xfffffffffffffe98])) [3 value+0 S8 A64])
        (reg:DI 150)) "main.c":102:25 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 150)
        (nil)))
(insn 141 140 142 10 (set (reg:DI 151)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -360 [0xfffffffffffffe98])) [3 value+0 S8 A64])) "main.c":103:24 66 {*movdi_internal}
     (nil))
(insn 142 141 143 10 (set (reg:DI 5 di)
        (reg:DI 151)) "main.c":103:24 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 151)
        (nil)))
(call_insn/i 143 142 144 10 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("atoi") [flags 0x41]  <function_decl 0x7ffa22e69600 atoi>) [0 atoi S1 A8])
            (const_int 0 [0]))) "main.c":103:24 677 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 144 143 145 10 (set (reg:SI 85 [ _4 ])
        (reg:SI 0 ax)) "main.c":103:24 67 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 145 144 146 10 (set (reg:DI 152)
        (sign_extend:DI (reg:SI 85 [ _4 ]))) "main.c":103:22 128 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 85 [ _4 ])
        (nil)))
(insn 146 145 147 10 (set (mem/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -304 [0xfffffffffffffed0])) [2 time+0 S8 A64])
        (reg:DI 152)) "main.c":103:22 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 152)
        (nil)))
(insn 147 146 148 10 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC4") [flags 0x2]  <var_decl 0x7ffa22b50630 *.LC4>)) "main.c":104:25 66 {*movdi_internal}
     (nil))
(insn 148 147 149 10 (set (reg:DI 5 di)
        (const_int 0 [0])) "main.c":104:25 66 {*movdi_internal}
     (nil))
(call_insn 149 148 150 10 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x7ffa22aecf00 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) "main.c":104:25 677 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 150 149 151 10 (set (reg:DI 153)
        (reg:DI 0 ax)) "main.c":104:25 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 151 150 152 10 (set (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -360 [0xfffffffffffffe98])) [3 value+0 S8 A64])
        (reg:DI 153)) "main.c":104:25 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 153)
        (nil)))
(insn 152 151 153 10 (set (reg:DI 154)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -360 [0xfffffffffffffe98])) [3 value+0 S8 A64])) "main.c":105:25 66 {*movdi_internal}
     (nil))
(insn 153 152 154 10 (set (reg:DI 5 di)
        (reg:DI 154)) "main.c":105:25 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 154)
        (nil)))
(call_insn/i 154 153 155 10 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("atoi") [flags 0x41]  <function_decl 0x7ffa22e69600 atoi>) [0 atoi S1 A8])
            (const_int 0 [0]))) "main.c":105:25 677 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 155 154 156 10 (set (reg:SI 86 [ _5 ])
        (reg:SI 0 ax)) "main.c":105:25 67 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 156 155 157 10 (set (reg:DI 155)
        (sign_extend:DI (reg:SI 86 [ _5 ]))) "main.c":105:23 128 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 86 [ _5 ])
        (nil)))
(insn 157 156 158 10 (set (mem/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -296 [0xfffffffffffffed8])) [2 count+0 S8 A64])
        (reg:DI 155)) "main.c":105:23 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 155)
        (nil)))
(insn 158 157 159 10 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:DI (plus:DI (reg/f:DI 19 frame)
                    (const_int -320 [0xfffffffffffffec0])) [2 day+0 S8 A64])
            (const_int 0 [0]))) "main.c":106:19 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 159 158 160 10 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 184)
            (pc))) "main.c":106:19 659 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 184)
;;  succ:       11 (FALLTHRU)
;;              14
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 120 121 122 126

;; basic block 11, loop depth 0, maybe hot
;;  prev block 10, next block 12, flags: (RTL)
;;  pred:       10 (FALLTHRU)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 120 121 122 126
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 17 [flags] 97 105 106 107 108 109 156
(note 160 159 161 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 161 160 162 11 (set (reg/f:DI 156)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -352 [0xfffffffffffffea0])) [6 years+0 S8 A64])) "main.c":107:37 66 {*movdi_internal}
     (nil))
(insn 162 161 163 11 (parallel [
            (set (reg/f:DI 97 [ _70 ])
                (plus:DI (reg/f:DI 156)
                    (const_int 24 [0x18])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":107:37 191 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 156)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                            (const_int -352 [0xfffffffffffffea0])) [6 years+0 S8 A64])
                    (const_int 24 [0x18]))
                (nil)))))
(insn 163 162 164 11 (set (reg:DI 105 [ _82 ])
        (reg/f:DI 97 [ _70 ])) "main.c":107:37 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 97 [ _70 ])
        (nil)))
(insn 164 163 165 11 (parallel [
            (set (reg:DI 106 [ _83 ])
                (lshiftrt:DI (reg:DI 105 [ _82 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":107:37 566 {*lshrdi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 165 164 166 11 (parallel [
            (set (reg:DI 107 [ _84 ])
                (plus:DI (reg:DI 106 [ _83 ])
                    (const_int 2147450880 [0x7fff8000])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":107:37 191 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 106 [ _83 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 166 165 167 11 (set (reg/f:DI 108 [ _85 ])
        (reg:DI 107 [ _84 ])) "main.c":107:37 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 107 [ _84 ])
        (nil)))
(insn 167 166 168 11 (set (reg:QI 109 [ _86 ])
        (mem:QI (reg/f:DI 108 [ _85 ]) [7 *_85+0 S1 A8])) "main.c":107:37 69 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:DI 108 [ _85 ])
        (nil)))
(insn 168 167 169 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 109 [ _86 ])
            (const_int 0 [0]))) "main.c":107:37 5 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 109 [ _86 ])
        (nil)))
(jump_insn 169 168 170 11 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 174)
            (pc))) "main.c":107:37 659 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 174)
;;  succ:       13 [100.0% (guessed)] 
;;              12 [0.0% (guessed)]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 105 120 121 122 126

;; basic block 12, loop depth 0, maybe hot
;;  prev block 11, next block 13, flags: (RTL)
;;  pred:       11 [0.0% (guessed)]  (FALLTHRU)
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 105
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 105
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
(note 170 169 171 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 171 170 172 12 (set (reg:DI 5 di)
        (reg:DI 105 [ _82 ])) "main.c":107:37 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 105 [ _82 ])
        (nil)))
(call_insn 172 171 173 12 (call (mem:QI (symbol_ref:DI ("__asan_report_load8") [flags 0x41]  <function_decl 0x7ffa22daa900 __builtin___asan_report_load8>) [0 __builtin___asan_report_load8 S1 A8])
        (const_int 0 [0])) "main.c":107:37 666 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 19 [frame]

(barrier 173 172 174)
;; basic block 13, loop depth 0, maybe hot
;;  prev block 12, next block 14, flags: (RTL)
;;  pred:       11 [100.0% (guessed)] 
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 120 121 122 126
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 17 [flags] 87 88 157 158 159
(code_label 174 173 175 13 59 (nil) [1 uses])
(note 175 174 176 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 176 175 177 13 (set (reg/f:DI 157)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -352 [0xfffffffffffffea0])) [6 years+0 S8 A64])) "main.c":107:37 66 {*movdi_internal}
     (nil))
(insn 177 176 178 13 (set (reg:DI 87 [ _6 ])
        (mem:DI (plus:DI (reg/f:DI 157)
                (const_int 24 [0x18])) [2 years_37->Dweekend+0 S8 A64])) "main.c":107:37 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 157)
        (nil)))
(insn 178 177 179 13 (set (reg:DI 158)
        (mem/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -296 [0xfffffffffffffed8])) [2 count+0 S8 A64])) "main.c":107:37 66 {*movdi_internal}
     (nil))
(insn 179 178 180 13 (parallel [
            (set (reg:DI 88 [ _7 ])
                (plus:DI (reg:DI 87 [ _6 ])
                    (reg:DI 158)))
            (clobber (reg:CC 17 flags))
        ]) "main.c":107:37 191 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 158)
        (expr_list:REG_DEAD (reg:DI 87 [ _6 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (reg:DI 87 [ _6 ])
                        (mem/c:DI (plus:DI (reg/f:DI 19 frame)
                                (const_int -296 [0xfffffffffffffed8])) [2 count+0 S8 A64]))
                    (nil))))))
(insn 180 179 181 13 (set (reg/f:DI 159)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -352 [0xfffffffffffffea0])) [6 years+0 S8 A64])) "main.c":107:37 66 {*movdi_internal}
     (nil))
(insn 181 180 316 13 (set (mem:DI (plus:DI (reg/f:DI 159)
                (const_int 24 [0x18])) [2 years_37->Dweekend+0 S8 A64])
        (reg:DI 88 [ _7 ])) "main.c":107:37 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 159)
        (expr_list:REG_DEAD (reg:DI 88 [ _7 ])
            (nil))))
(jump_insn 316 181 317 13 (set (pc)
        (label_ref 207)) 660 {jump}
     (nil)
 -> 207)
;;  succ:       17 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 120 121 122 126

(barrier 317 316 184)
;; basic block 14, loop depth 0, maybe hot
;;  prev block 13, next block 15, flags: (RTL)
;;  pred:       10
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 120 121 122 126
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 17 [flags] 98 110 111 112 113 114 160
(code_label 184 317 185 14 58 (nil) [1 uses])
(note 185 184 186 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 186 185 187 14 (set (reg/f:DI 160)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -352 [0xfffffffffffffea0])) [6 years+0 S8 A64])) "main.c":109:34 66 {*movdi_internal}
     (nil))
(insn 187 186 188 14 (parallel [
            (set (reg/f:DI 98 [ _71 ])
                (plus:DI (reg/f:DI 160)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":109:34 191 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 160)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                            (const_int -352 [0xfffffffffffffea0])) [6 years+0 S8 A64])
                    (const_int 16 [0x10]))
                (nil)))))
(insn 188 187 189 14 (set (reg:DI 110 [ _87 ])
        (reg/f:DI 98 [ _71 ])) "main.c":109:34 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 98 [ _71 ])
        (nil)))
(insn 189 188 190 14 (parallel [
            (set (reg:DI 111 [ _88 ])
                (lshiftrt:DI (reg:DI 110 [ _87 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":109:34 566 {*lshrdi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 190 189 191 14 (parallel [
            (set (reg:DI 112 [ _89 ])
                (plus:DI (reg:DI 111 [ _88 ])
                    (const_int 2147450880 [0x7fff8000])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":109:34 191 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 111 [ _88 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 191 190 192 14 (set (reg/f:DI 113 [ _90 ])
        (reg:DI 112 [ _89 ])) "main.c":109:34 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 112 [ _89 ])
        (nil)))
(insn 192 191 193 14 (set (reg:QI 114 [ _91 ])
        (mem:QI (reg/f:DI 113 [ _90 ]) [7 *_90+0 S1 A8])) "main.c":109:34 69 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:DI 113 [ _90 ])
        (nil)))
(insn 193 192 194 14 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 114 [ _91 ])
            (const_int 0 [0]))) "main.c":109:34 5 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 114 [ _91 ])
        (nil)))
(jump_insn 194 193 195 14 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 199)
            (pc))) "main.c":109:34 659 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 199)
;;  succ:       16 [100.0% (guessed)] 
;;              15 [0.0% (guessed)]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 110 120 121 122 126

;; basic block 15, loop depth 0, maybe hot
;;  prev block 14, next block 16, flags: (RTL)
;;  pred:       14 [0.0% (guessed)]  (FALLTHRU)
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 110
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 110
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
(note 195 194 196 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 196 195 197 15 (set (reg:DI 5 di)
        (reg:DI 110 [ _87 ])) "main.c":109:34 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 110 [ _87 ])
        (nil)))
(call_insn 197 196 198 15 (call (mem:QI (symbol_ref:DI ("__asan_report_load8") [flags 0x41]  <function_decl 0x7ffa22daa900 __builtin___asan_report_load8>) [0 __builtin___asan_report_load8 S1 A8])
        (const_int 0 [0])) "main.c":109:34 666 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 19 [frame]

(barrier 198 197 199)
;; basic block 16, loop depth 0, maybe hot
;;  prev block 15, next block 17, flags: (RTL)
;;  pred:       14 [100.0% (guessed)] 
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 120 121 122 126
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 17 [flags] 89 90 161 162 163
(code_label 199 198 200 16 61 (nil) [1 uses])
(note 200 199 201 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 201 200 202 16 (set (reg/f:DI 161)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -352 [0xfffffffffffffea0])) [6 years+0 S8 A64])) "main.c":109:34 66 {*movdi_internal}
     (nil))
(insn 202 201 203 16 (set (reg:DI 89 [ _8 ])
        (mem:DI (plus:DI (reg/f:DI 161)
                (const_int 16 [0x10])) [2 years_37->Dweek+0 S8 A64])) "main.c":109:34 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 161)
        (nil)))
(insn 203 202 204 16 (set (reg:DI 162)
        (mem/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -296 [0xfffffffffffffed8])) [2 count+0 S8 A64])) "main.c":109:34 66 {*movdi_internal}
     (nil))
(insn 204 203 205 16 (parallel [
            (set (reg:DI 90 [ _9 ])
                (plus:DI (reg:DI 89 [ _8 ])
                    (reg:DI 162)))
            (clobber (reg:CC 17 flags))
        ]) "main.c":109:34 191 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 162)
        (expr_list:REG_DEAD (reg:DI 89 [ _8 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (reg:DI 89 [ _8 ])
                        (mem/c:DI (plus:DI (reg/f:DI 19 frame)
                                (const_int -296 [0xfffffffffffffed8])) [2 count+0 S8 A64]))
                    (nil))))))
(insn 205 204 206 16 (set (reg/f:DI 163)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -352 [0xfffffffffffffea0])) [6 years+0 S8 A64])) "main.c":109:34 66 {*movdi_internal}
     (nil))
(insn 206 205 207 16 (set (mem:DI (plus:DI (reg/f:DI 163)
                (const_int 16 [0x10])) [2 years_37->Dweek+0 S8 A64])
        (reg:DI 90 [ _9 ])) "main.c":109:34 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 163)
        (expr_list:REG_DEAD (reg:DI 90 [ _9 ])
            (nil))))
;;  succ:       17 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 120 121 122 126

;; basic block 17, loop depth 0, maybe hot
;;  prev block 16, next block 18, flags: (RTL)
;;  pred:       16 (FALLTHRU)
;;              13 [always] 
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 120 121 122 126
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 17 [flags] 99 115 116 117 118 119 164
(code_label 207 206 208 17 60 (nil) [1 uses])
(note 208 207 209 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 209 208 210 17 (set (reg/f:DI 164)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -352 [0xfffffffffffffea0])) [6 years+0 S8 A64])) "main.c":111:30 66 {*movdi_internal}
     (nil))
(insn 210 209 211 17 (parallel [
            (set (reg/f:DI 99 [ _72 ])
                (plus:DI (reg/f:DI 164)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":111:30 191 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 164)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                            (const_int -352 [0xfffffffffffffea0])) [6 years+0 S8 A64])
                    (const_int 8 [0x8]))
                (nil)))))
(insn 211 210 212 17 (set (reg:DI 115 [ _92 ])
        (reg/f:DI 99 [ _72 ])) "main.c":111:30 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 99 [ _72 ])
        (nil)))
(insn 212 211 213 17 (parallel [
            (set (reg:DI 116 [ _93 ])
                (lshiftrt:DI (reg:DI 115 [ _92 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":111:30 566 {*lshrdi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 213 212 214 17 (parallel [
            (set (reg:DI 117 [ _94 ])
                (plus:DI (reg:DI 116 [ _93 ])
                    (const_int 2147450880 [0x7fff8000])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":111:30 191 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 116 [ _93 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 214 213 215 17 (set (reg/f:DI 118 [ _95 ])
        (reg:DI 117 [ _94 ])) "main.c":111:30 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 117 [ _94 ])
        (nil)))
(insn 215 214 216 17 (set (reg:QI 119 [ _96 ])
        (mem:QI (reg/f:DI 118 [ _95 ]) [7 *_95+0 S1 A8])) "main.c":111:30 69 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:DI 118 [ _95 ])
        (nil)))
(insn 216 215 217 17 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 119 [ _96 ])
            (const_int 0 [0]))) "main.c":111:30 5 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 119 [ _96 ])
        (nil)))
(jump_insn 217 216 218 17 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 222)
            (pc))) "main.c":111:30 659 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 222)
;;  succ:       19 [100.0% (guessed)] 
;;              18 [0.0% (guessed)]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 115 120 121 122 126

;; basic block 18, loop depth 0, maybe hot
;;  prev block 17, next block 19, flags: (RTL)
;;  pred:       17 [0.0% (guessed)]  (FALLTHRU)
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 115
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 115
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
(note 218 217 219 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 219 218 220 18 (set (reg:DI 5 di)
        (reg:DI 115 [ _92 ])) "main.c":111:30 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 115 [ _92 ])
        (nil)))
(call_insn 220 219 221 18 (call (mem:QI (symbol_ref:DI ("__asan_report_load8") [flags 0x41]  <function_decl 0x7ffa22daa900 __builtin___asan_report_load8>) [0 __builtin___asan_report_load8 S1 A8])
        (const_int 0 [0])) "main.c":111:30 666 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 19 [frame]

(barrier 221 220 222)
;; basic block 19, loop depth 0, maybe hot
;;  prev block 18, next block 20, flags: (RTL)
;;  pred:       17 [100.0% (guessed)] 
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 120 121 122 126
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 91 92 165 166 167 168 169 170 171 172 173 174 175 176 177
(code_label 222 221 223 19 62 (nil) [1 uses])
(note 223 222 224 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 224 223 225 19 (set (reg/f:DI 165)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -352 [0xfffffffffffffea0])) [6 years+0 S8 A64])) "main.c":111:30 66 {*movdi_internal}
     (nil))
(insn 225 224 226 19 (set (reg:DI 91 [ _10 ])
        (mem:DI (plus:DI (reg/f:DI 165)
                (const_int 8 [0x8])) [2 years_37->total+0 S8 A64])) "main.c":111:30 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 165)
        (nil)))
(insn 226 225 227 19 (set (reg:DI 166)
        (mem/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -296 [0xfffffffffffffed8])) [2 count+0 S8 A64])) "main.c":111:30 66 {*movdi_internal}
     (nil))
(insn 227 226 228 19 (parallel [
            (set (reg:DI 92 [ _11 ])
                (plus:DI (reg:DI 91 [ _10 ])
                    (reg:DI 166)))
            (clobber (reg:CC 17 flags))
        ]) "main.c":111:30 191 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 166)
        (expr_list:REG_DEAD (reg:DI 91 [ _10 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (reg:DI 91 [ _10 ])
                        (mem/c:DI (plus:DI (reg/f:DI 19 frame)
                                (const_int -296 [0xfffffffffffffed8])) [2 count+0 S8 A64]))
                    (nil))))))
(insn 228 227 229 19 (set (reg/f:DI 167)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -352 [0xfffffffffffffea0])) [6 years+0 S8 A64])) "main.c":111:30 66 {*movdi_internal}
     (nil))
(insn 229 228 230 19 (set (mem:DI (plus:DI (reg/f:DI 167)
                (const_int 8 [0x8])) [2 years_37->total+0 S8 A64])
        (reg:DI 92 [ _11 ])) "main.c":111:30 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 167)
        (expr_list:REG_DEAD (reg:DI 92 [ _11 ])
            (nil))))
(insn 230 229 231 19 (set (reg:DI 168)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -352 [0xfffffffffffffea0])) [6 years+0 S8 A64])) "main.c":112:24 66 {*movdi_internal}
     (nil))
(insn 231 230 232 19 (set (reg:DI 169)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -368 [0xfffffffffffffe90])) [6 list+0 S8 A64])) "main.c":112:24 66 {*movdi_internal}
     (nil))
(insn 232 231 233 19 (set (reg:DI 4 si)
        (reg:DI 168)) "main.c":112:24 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 168)
        (nil)))
(insn 233 232 234 19 (set (reg:DI 5 di)
        (reg:DI 169)) "main.c":112:24 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 169)
        (nil)))
(call_insn 234 233 235 19 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("addRec") [flags 0x3]  <function_decl 0x7ffa22b09700 addRec>) [0 addRec S1 A8])
            (const_int 0 [0]))) "main.c":112:24 677 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 235 234 236 19 (set (reg:DI 170)
        (reg:DI 0 ax)) "main.c":112:24 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 236 235 237 19 (set (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -368 [0xfffffffffffffe90])) [6 list+0 S8 A64])
        (reg:DI 170)) "main.c":112:24 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 170)
        (nil)))
(insn 237 236 238 19 (set (reg:DI 171)
        (mem/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -296 [0xfffffffffffffed8])) [2 count+0 S8 A64])) "main.c":113:17 66 {*movdi_internal}
     (nil))
(insn 238 237 239 19 (set (reg:DI 172)
        (mem/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -304 [0xfffffffffffffed0])) [2 time+0 S8 A64])) "main.c":113:17 66 {*movdi_internal}
     (nil))
(insn 239 238 240 19 (set (reg:DI 173)
        (mem/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -328 [0xfffffffffffffeb8])) [2 dayN+0 S8 A64])) "main.c":113:17 66 {*movdi_internal}
     (nil))
(insn 240 239 241 19 (set (reg:DI 174)
        (mem/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -336 [0xfffffffffffffeb0])) [2 month+0 S8 A64])) "main.c":113:17 66 {*movdi_internal}
     (nil))
(insn 241 240 242 19 (set (reg:DI 175)
        (mem/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -312 [0xfffffffffffffec8])) [2 ID+0 S8 A64])) "main.c":113:17 66 {*movdi_internal}
     (nil))
(insn 242 241 243 19 (set (reg:DI 176)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -400 [0xfffffffffffffe70])) [9 query+0 S8 A64])) "main.c":113:17 66 {*movdi_internal}
     (nil))
(insn 243 242 244 19 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":113:17 191 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
            (nil))))
(insn 244 243 245 19 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [2  S8 A64])
        (mem/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -344 [0xfffffffffffffea8])) [2 year+0 S8 A64])) "main.c":113:17 42 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 245 244 246 19 (set (reg:DI 37 r9)
        (reg:DI 171)) "main.c":113:17 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 171)
        (nil)))
(insn 246 245 247 19 (set (reg:DI 36 r8)
        (reg:DI 172)) "main.c":113:17 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 172)
        (nil)))
(insn 247 246 248 19 (set (reg:DI 2 cx)
        (reg:DI 173)) "main.c":113:17 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 173)
        (nil)))
(insn 248 247 249 19 (set (reg:DI 1 dx)
        (reg:DI 174)) "main.c":113:17 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 174)
        (nil)))
(insn 249 248 250 19 (set (reg:DI 4 si)
        (reg:DI 175)) "main.c":113:17 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 175)
        (nil)))
(insn 250 249 251 19 (set (reg:DI 5 di)
        (reg:DI 176)) "main.c":113:17 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 176)
        (nil)))
(call_insn 251 250 252 19 (call (mem:QI (symbol_ref:DI ("addOldest") [flags 0x41]  <function_decl 0x7ffa22afec00 addOldest>) [0 addOldest S1 A8])
        (const_int 16 [0x10])) "main.c":113:17 666 {*call}
     (expr_list:REG_DEAD (reg:DI 37 r9)
        (expr_list:REG_DEAD (reg:DI 36 r8)
            (expr_list:REG_DEAD (reg:DI 5 di)
                (expr_list:REG_DEAD (reg:DI 4 si)
                    (expr_list:REG_DEAD (reg:DI 2 cx)
                        (expr_list:REG_DEAD (reg:DI 1 dx)
                            (nil)))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:DI (use (reg:DI 36 r8))
                        (expr_list:DI (use (reg:DI 37 r9))
                            (nil))))))))
(insn 252 251 253 19 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":113:17 191 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 253 252 254 19 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC4") [flags 0x2]  <var_decl 0x7ffa22b50630 *.LC4>)) "main.c":114:25 66 {*movdi_internal}
     (nil))
(insn 254 253 255 19 (set (reg:DI 5 di)
        (const_int 0 [0])) "main.c":114:25 66 {*movdi_internal}
     (nil))
(call_insn 255 254 256 19 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x7ffa22aecf00 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) "main.c":114:25 677 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 256 255 257 19 (set (reg:DI 177)
        (reg:DI 0 ax)) "main.c":114:25 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 257 256 258 19 (set (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -360 [0xfffffffffffffe98])) [3 value+0 S8 A64])
        (reg:DI 177)) "main.c":114:25 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 177)
        (nil)))
;;  succ:       20 (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 120 121 122 126

;; basic block 20, loop depth 0, maybe hot
;;  prev block 19, next block 21, flags: (RTL)
;;  pred:       19 (FALLTHRU,DFS_BACK)
;;              7 [always] 
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 120 121 122 126
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 17 [flags]
(code_label 258 257 259 20 56 (nil) [1 uses])
(note 259 258 261 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 261 259 262 20 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                    (const_int -360 [0xfffffffffffffe98])) [3 value+0 S8 A64])
            (const_int 0 [0]))) "main.c":89:19 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 262 261 263 20 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 260)
            (pc))) "main.c":89:19 659 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 260)
;;  succ:       8
;;              21 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 120 121 122 126

;; basic block 21, loop depth 0, maybe hot
;;  prev block 20, next block 22, flags: (RTL)
;;  pred:       20 (FALLTHRU)
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 120 121 122 126
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 17 [flags]
(note 263 262 264 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 264 263 265 21 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                        (const_int -372 [0xfffffffffffffe8c])) [11 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                            (const_int -372 [0xfffffffffffffe8c])) [11 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":87:58 190 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
;;  succ:       22 (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 120 121 122 126

;; basic block 22, loop depth 0, maybe hot
;;  prev block 21, next block 23, flags: (RTL)
;;  pred:       21 (FALLTHRU,DFS_BACK)
;;              6 [always] 
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 120 121 122 126
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 120
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 93 178 179
(code_label 265 264 266 22 55 (nil) [1 uses])
(note 266 265 267 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 267 266 268 22 (set (reg:DI 178)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -392 [0xfffffffffffffe78])) [10 fReadings+0 S8 A64])) "main.c":87:25 66 {*movdi_internal}
     (nil))
(insn 268 267 269 22 (parallel [
            (set (reg:DI 179)
                (plus:DI (reg:DI 120)
                    (const_int -256 [0xffffffffffffff00])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":87:25 191 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 269 268 270 22 (set (reg:DI 1 dx)
        (reg:DI 178)) "main.c":87:25 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 178)
        (nil)))
(insn 270 269 271 22 (set (reg:SI 4 si)
        (const_int 150 [0x96])) "main.c":87:25 67 {*movsi_internal}
     (nil))
(insn 271 270 272 22 (set (reg:DI 5 di)
        (reg:DI 179)) "main.c":87:25 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 179)
        (nil)))
(call_insn 272 271 273 22 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fgets") [flags 0x41]  <function_decl 0x7ffa22e57300 fgets>) [0 fgets S1 A8])
            (const_int 0 [0]))) "main.c":87:25 677 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 273 272 275 22 (set (reg/f:DI 93 [ _12 ])
        (reg:DI 0 ax)) "main.c":87:25 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 275 273 276 22 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 93 [ _12 ])
            (const_int 0 [0]))) "main.c":87:9 8 {*cmpdi_ccno_1}
     (expr_list:REG_DEAD (reg/f:DI 93 [ _12 ])
        (nil)))
(jump_insn 276 275 277 22 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 274)
            (pc))) "main.c":87:9 659 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 274)
;;  succ:       7
;;              23 (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 120 121 122 126

;; basic block 23, loop depth 0, maybe hot
;;  prev block 22, next block 24, flags: (RTL)
;;  pred:       22 (FALLTHRU,DFS_BACK)
;;              5 [always] 
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 120 121 122 126
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 94 180
(code_label 277 276 278 23 54 (nil) [1 uses])
(note 278 277 279 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 279 278 280 23 (set (reg:DI 180)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -392 [0xfffffffffffffe78])) [10 fReadings+0 S8 A64])) "main.c":86:13 66 {*movdi_internal}
     (nil))
(insn 280 279 281 23 (set (reg:DI 5 di)
        (reg:DI 180)) "main.c":86:13 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 180)
        (nil)))
(call_insn 281 280 282 23 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("feof") [flags 0x41]  <function_decl 0x7ffa22e64300 feof>) [0 feof S1 A8])
            (const_int 0 [0]))) "main.c":86:13 677 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 282 281 284 23 (set (reg:SI 94 [ _13 ])
        (reg:SI 0 ax)) "main.c":86:13 67 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 284 282 285 23 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 94 [ _13 ])
            (const_int 0 [0]))) "main.c":86:11 7 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 94 [ _13 ])
        (nil)))
(jump_insn 285 284 286 23 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 283)
            (pc))) "main.c":86:11 659 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 283)
;;  succ:       6
;;              24 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 120 121 122 126

;; basic block 24, loop depth 0, maybe hot
;;  prev block 23, next block 25, flags: (RTL)
;;  pred:       23 (FALLTHRU)
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 121 122 126
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 121 122
;; lr  def 	 17 [flags] 95 128
(note 286 285 287 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 287 286 290 24 (set (reg/f:DI 95 [ _29 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -368 [0xfffffffffffffe90])) [6 list+0 S8 A64])) "main.c":119:12 66 {*movdi_internal}
     (nil))
(insn 290 287 24 24 (set (reg/f:DI 128 [ <retval> ])
        (reg/f:DI 95 [ _29 ])) "main.c":119:12 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 95 [ _29 ])
        (nil)))
(insn 24 290 25 24 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 122)
            (reg:DI 121))) "main.c":82:55 12 {*cmpdi_1}
     (expr_list:REG_DEAD (reg:DI 122)
        (nil)))
(jump_insn 25 24 305 24 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 33)
            (pc))) "main.c":82:55 659 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 33)
;;  succ:       26
;;              25 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 121 126 128

;; basic block 25, loop depth 0, maybe hot
;;  prev block 24, next block 26, flags: (RTL)
;;  pred:       24 (FALLTHRU)
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 121 126 128
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 121 126
;; lr  def 	 127
(note 305 25 26 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 26 305 27 25 (set (mem:DI (reg:DI 121) [0  S8 A8])
        (const_int 1172321806 [0x45e0360e])) "main.c":82:55 66 {*movdi_internal}
     (nil))
(insn 27 26 28 25 (set (mem:TI (plus:DI (reg:DI 126)
                (const_int 2147450880 [0x7fff8000])) [7  S16 A8])
        (const_wide_int 0xf5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5)) "main.c":82:55 65 {*movti_internal}
     (nil))
(insn 28 27 29 25 (set (mem:TI (plus:DI (reg:DI 126)
                (const_int 2147450896 [0x7fff8010])) [7  S16 A8])
        (const_wide_int 0xf5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5)) "main.c":82:55 65 {*movti_internal}
     (expr_list:REG_DEAD (reg:DI 126)
        (nil)))
(insn 29 28 30 25 (set (reg:DI 127)
        (mem:DI (plus:DI (reg:DI 121)
                (const_int 248 [0xf8])) [0  S8 A8])) "main.c":82:55 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 121)
        (nil)))
(insn 30 29 318 25 (set (mem:QI (reg:DI 127) [0  S1 A8])
        (const_int 0 [0])) "main.c":82:55 69 {*movqi_internal}
     (expr_list:REG_DEAD (reg:DI 127)
        (nil)))
(jump_insn 318 30 319 25 (set (pc)
        (label_ref 37)) 660 {jump}
     (nil)
 -> 37)
;;  succ:       27 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 128

(barrier 319 318 33)
;; basic block 26, loop depth 0, maybe hot
;;  prev block 25, next block 27, flags: (RTL)
;;  pred:       24
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 126 128
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 126
;; lr  def 	
(code_label 33 319 306 26 51 (nil) [1 uses])
(note 306 33 34 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 34 306 35 26 (set (mem:SI (plus:DI (reg:DI 126)
                (const_int 2147450880 [0x7fff8000])) [7  S4 A8])
        (const_int 0 [0])) "main.c":82:55 67 {*movsi_internal}
     (nil))
(insn 35 34 36 26 (set (mem:DI (plus:DI (reg:DI 126)
                (const_int 2147450900 [0x7fff8014])) [7  S8 A8])
        (const_int 0 [0])) "main.c":82:55 66 {*movdi_internal}
     (nil))
(insn 36 35 37 26 (set (mem:SI (plus:DI (reg:DI 126)
                (const_int 2147450908 [0x7fff801c])) [7  S4 A8])
        (const_int 0 [0])) "main.c":82:55 67 {*movsi_internal}
     (expr_list:REG_DEAD (reg:DI 126)
        (nil)))
;;  succ:       27 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 128

;; basic block 27, loop depth 0, maybe hot
;;  prev block 26, next block 28, flags: (RTL)
;;  pred:       26 (FALLTHRU)
;;              25 [always] 
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 128
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 17 [flags]
(code_label 37 36 307 27 52 (nil) [1 uses])
(note 307 37 294 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn 294 307 295 27 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 19 frame)
                                (const_int -8 [0xfffffffffffffff8])) [13 D.3499+0 S8 A64])
                        (mem/v/f:DI (const_int 40 [0x28]) [0 MEM[(<address-space-1> long unsigned int *)40B]+0 S8 A64 AS1])
                    ] UNSPEC_SP_TEST))
            (clobber (scratch:DI))
        ]) "main.c":120:1 978 {stack_protect_test_di}
     (nil))
(jump_insn 295 294 308 27 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 298)
            (pc))) "main.c":120:1 659 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 298)
;;  succ:       29
;;              28 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 128

;; basic block 28, loop depth 0, maybe hot
;;  prev block 27, next block 29, flags: (RTL)
;;  pred:       27 (FALLTHRU)
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
(note 308 295 296 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(call_insn 296 308 297 28 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7ffa22b3e700 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) "main.c":120:1 666 {*call}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (nil))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 19 [frame]

(barrier 297 296 298)
;; basic block 29, loop depth 0, maybe hot
;;  prev block 28, next block 1, flags: (RTL)
;;  pred:       27
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 128
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 128
;; lr  def 	 0 [ax]
(code_label 298 297 309 29 67 (nil) [1 uses])
(note 309 298 299 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(insn 299 309 300 29 (set (reg/i:DI 0 ax)
        (reg/f:DI 128 [ <retval> ])) "main.c":120:1 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 128 [ <retval> ])
        (nil)))
(insn 300 299 0 29 (use (reg/i:DI 0 ax)) "main.c":120:1 -1
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 19 [frame]


;; Function _sub_D_00099_0 (_sub_D_00099_0, funcdef_no=4, decl_uid=3517, cgraph_uid=26, symbol_order=30)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 3 n_edges 2 count 3 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
verify found no changes in insn with uid = 7.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs



   Insn 7(l0): point = 0
   Insn 6(l0): point = 2
   Insn 5(l0): point = 4
Compressing live ranges: from 7 to 0 - 0%
Ranges after the compression:
  regions=1, blocks=3, points=0
    allocnos=0 (big 0), copies=0, conflicts=0, ranges=0
Disposition:
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


_sub_D_00099_0

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 4 [si] 5 [di] 6 [bp] 7 [sp]
;;  ref usage 	r0={2d} r1={2d} r2={2d} r4={3d,1u} r5={3d,1u} r6={1d,2u} r7={1d,3u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={1d} r18={1d} r19={1d,2u} r20={2d} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={2d} r37={2d} r38={1d} r39={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} 
;;    total ref usage 98{88d,10u,0e} in 3{2 regular + 1 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 1, flags: (RTL)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:DI 4 si)
        (const_int 4 [0x4])) "main.c":120:1 66 {*movdi_internal}
     (nil))
(insn 6 5 7 2 (set (reg:DI 5 di)
        (symbol_ref:DI ("*.LASAN0") [flags 0x2]  <var_decl 0x7ffa22b9e870 *.LASAN0>)) "main.c":120:1 66 {*movdi_internal}
     (nil))
(call_insn 7 6 0 2 (call (mem:QI (symbol_ref:DI ("__asan_unregister_globals") [flags 0x41]  <function_decl 0x7ffa22db2700 __builtin___asan_unregister_globals>) [0 __builtin___asan_unregister_globals S1 A8])
        (const_int 0 [0])) "main.c":120:1 666 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]


;; Function _sub_I_00099_1 (_sub_I_00099_1, funcdef_no=5, decl_uid=3520, cgraph_uid=29, symbol_order=33)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 3 n_edges 2 count 3 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
verify found no changes in insn with uid = 5.
verify found no changes in insn with uid = 6.
verify found no changes in insn with uid = 9.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs



   Insn 9(l0): point = 0
   Insn 8(l0): point = 2
   Insn 7(l0): point = 4
   Insn 6(l0): point = 6
   Insn 5(l0): point = 8
Compressing live ranges: from 11 to 0 - 0%
Ranges after the compression:
  regions=1, blocks=3, points=0
    allocnos=0 (big 0), copies=0, conflicts=0, ranges=0
Disposition:
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


_sub_I_00099_1

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 4 [si] 5 [di] 6 [bp] 7 [sp]
;;  ref usage 	r0={4d} r1={4d} r2={4d} r4={5d,1u} r5={5d,1u} r6={1d,2u} r7={1d,5u} r8={3d} r9={3d} r10={3d} r11={3d} r12={3d} r13={3d} r14={3d} r15={3d} r16={1d,1u} r17={3d} r18={3d} r19={1d,2u} r20={4d} r21={4d} r22={4d} r23={4d} r24={4d} r25={4d} r26={4d} r27={4d} r28={3d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={4d} r37={4d} r38={3d} r39={3d} r44={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r53={3d} r54={3d} r55={3d} r56={3d} r57={3d} r58={3d} r59={3d} r60={3d} r61={3d} r62={3d} r63={3d} r64={3d} r65={3d} r66={3d} r67={3d} r68={3d} r69={3d} r70={3d} r71={3d} r72={3d} r73={3d} r74={3d} r75={3d} 
;;    total ref usage 234{222d,12u,0e} in 5{2 regular + 3 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 1, flags: (RTL)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(call_insn 5 2 6 2 (call (mem:QI (symbol_ref:DI ("__asan_init") [flags 0x41]  <function_decl 0x7ffa22daa400 __builtin___asan_init>) [0 __builtin___asan_init S1 A8])
        (const_int 0 [0])) "main.c":120:1 666 {*call}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))
(call_insn 6 5 7 2 (call (mem:QI (symbol_ref:DI ("__asan_version_mismatch_check_v8") [flags 0x41]  <function_decl 0x7ffa22daa500 __builtin___asan_version_mismatch_check_v8>) [0 __builtin___asan_version_mismatch_check_v8 S1 A8])
        (const_int 0 [0])) "main.c":120:1 666 {*call}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))
(insn 7 6 8 2 (set (reg:DI 4 si)
        (const_int 4 [0x4])) "main.c":120:1 66 {*movdi_internal}
     (nil))
(insn 8 7 9 2 (set (reg:DI 5 di)
        (symbol_ref:DI ("*.LASAN0") [flags 0x2]  <var_decl 0x7ffa22b9e870 *.LASAN0>)) "main.c":120:1 66 {*movdi_internal}
     (nil))
(call_insn 9 8 0 2 (call (mem:QI (symbol_ref:DI ("__asan_register_globals") [flags 0x41]  <function_decl 0x7ffa22db2600 __builtin___asan_register_globals>) [0 __builtin___asan_register_globals S1 A8])
        (const_int 0 [0])) "main.c":120:1 666 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

